{"version":3,"sources":["../../../../node_modules/tsup/assets/cjs_shims.js","../../src/lib/nano.ts","../../src/logger/logDrain.ts","../../src/logger/logger.ts","../../src/logger/index.ts","../../src/upload/send.ts","../../package.json","../../src/env/versions.ts","../../src/lib/pubsub.ts","../../src/lib/cancellation/cancellation.ts","../../src/lib/cancellation/index.ts","../../src/http/httpConfig.ts","../../src/http/printErrors.ts","../../src/http/http.ts","../../src/http/index.ts","../../src/remote-debug/api.ts","../../src/upload/index.ts","../../src/remote-debug/remote-debug.ts","../../src/remote-debug/index.ts","../../src/debug/index.ts","../../src/bin/index.ts","../../src/config/index.ts","../../src/config/config.ts","../../src/lib/error.ts","../../src/config/env.ts","../../src/config/parser.ts","../../src/config/options.ts","../../src/bin/program.ts","../../src/bin/tmp-file.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","import { customAlphabet } from \"nanoid\";\n\nexport const getRandomString = customAlphabet(\"abcdefghijklmnopqrstuvwxyz\", 10);\n","let logDrain: string[] = [];\n\nexport function getLogDrain() {\n  return logDrain;\n}\n\nexport function addToLogDrain(str: string) {\n  logDrain.push(str);\n}\n","import chalk from \"chalk\";\nimport util from \"util\";\n\n// import { debug } from \"../debug\";\nimport { debug } from \"../debug\";\nimport { addToLogDrain } from \"./logDrain\";\n\nconst log = (...args: unknown[]) => {\n  const stringToRender = util.format(...args);\n  addToLogDrain(stringToRender);\n  console.log(stringToRender);\n};\n\nexport const info = log;\n\nexport const warn = (...args: unknown[]) => {\n  debug(\"WARNING: \", util.format(...args));\n  return log(chalk.bgYellow.black(\" WARNING \"), util.format(...args));\n};\n\nexport const success = (...args: unknown[]) =>\n  log(chalk.green.bold(util.format(...args)));\n\nexport const error = (...args: unknown[]) =>\n  log(chalk.bgRed.white(\" ERROR \"), util.format(...args));\n\n// type Color = \"red\" | \"green\" | \"yellow\" | \"blue\" | \"magenta\" | \"cyan\" | \"white\";\nexport const title = (...args: unknown[]) =>\n  info(chalk.blue.bold(util.format(...args)));\n\nexport const divider = () =>\n  console.log(\"\\n\" + chalk.dim(Array(48).fill(\"=\").join(\"\")) + \"\\n\");\n\nexport const spacer = (n: number = 2) =>\n  console.log(Array(n).fill(\"\").join(\"\\n\"));\n\nexport const cyan = chalk.cyan;\nexport const blue = chalk.blueBright;\nexport const red = chalk.red;\nexport const green = chalk.green;\nexport const gray = chalk.gray;\nexport const white = chalk.white;\nexport const magenta = chalk.magenta;\nexport const dim = chalk.dim;\n","export * from \"./logDrain\";\nexport * from \"./logger\";\n","import retry from \"async-retry\";\nimport axios, { RawAxiosRequestConfig } from \"axios\";\nimport fs from \"fs/promises\";\nimport { debug as _debug } from \"../debug\";\nimport { error as logError, warn } from \"../logger\";\nimport { BufferUpload, PathUpload } from \"../results/upload\";\n\nconst debug = _debug.extend(\"upload\");\n\nexport enum ContentType {\n  PNG = \"image/png\",\n  WEBM = \"video/webm\",\n  TEXT = \"text/plain\",\n  ZIP = \"application/zip\",\n}\n\nexport function uploadText(file: string, url: string) {\n  return sendPath(\n    {\n      path: file,\n      name: null,\n      uploadUrl: url,\n      contentType: ContentType.TEXT,\n    },\n    ContentType.TEXT,\n    undefined\n  );\n}\n\nexport async function sendPath(\n  upload: PathUpload,\n  contentType: ContentType,\n  onUploadProgress: RawAxiosRequestConfig[\"onUploadProgress\"]\n) {\n  const buffer = await fs.readFile(upload.path);\n  debug(\"Uploading file %s\", upload.uploadUrl, {\n    buffer: Buffer.byteLength(buffer),\n  });\n  return send(buffer, upload.uploadUrl, contentType, onUploadProgress);\n}\n\nexport async function sendBuffer(\n  upload: BufferUpload,\n  contentType: ContentType,\n  onUploadProgress: RawAxiosRequestConfig[\"onUploadProgress\"]\n) {\n  debug(\"Uploading buffer %s\", upload.name, {\n    buffer: Buffer.byteLength(upload.buffer),\n  });\n  return send(upload.buffer, upload.uploadUrl, contentType, onUploadProgress);\n}\n\nasync function _send(\n  buffer: Buffer,\n  url: string,\n  contentType: ContentType,\n  onUploadProgress: RawAxiosRequestConfig[\"onUploadProgress\"]\n) {\n  return axios({\n    method: \"put\",\n    url,\n    data: buffer,\n    onUploadProgress,\n    headers: {\n      \"Content-Disposition\": `inline`,\n      \"Content-Type\": contentType,\n    },\n  });\n}\n\nasync function send(...args: Parameters<typeof _send>) {\n  await retry(\n    async () => {\n      await _send(...args);\n    },\n    {\n      retries: 5,\n      onRetry: (error: Error, retryCount: number) => {\n        if (retryCount === 5) {\n          logError(`Cannot upload after ${retryCount} times: ${error.message}`);\n          return;\n        }\n        warn(`Upload failed ${retryCount} out of 5 attempts: ${error.message}`);\n      },\n    }\n  );\n}\n","{\n  \"name\": \"@currents/playwright\",\n  \"version\": \"0.11.5\",\n  \"main\": \"./dist/index.js\",\n  \"author\": \"Currents Software Inc\",\n  \"license\": \"GPL-3.0-or-later\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"rm\": \"rimraf dist\",\n    \"lint\": \"TIMING=1 eslint \\\"**/*.ts*\\\"\",\n    \"build\": \"tsup-node --minify --dts\",\n    \"dev\": \"tsup-node --watch --dts\",\n    \"release\": \"release-it \",\n    \"publish:npm\": \"npm run rm  && npm run build && ./publish.js\",\n    \"release-ci\": \"npm run rm && npm run build && ./publish.js -t latest\"\n  },\n  \"bin\": {\n    \"pwc\": \"./dist/bin/index.js\"\n  },\n  \"devDependencies\": {\n    \"@playwright/test\": \"1.40.0\",\n    \"@release-it/conventional-changelog\": \"^7.0.2\",\n    \"@swc/jest\": \"^0.2.24\",\n    \"@types/async-retry\": \"^1.4.5\",\n    \"@types/babel__code-frame\": \"^7.0.3\",\n    \"@types/debug\": \"^4.1.11\",\n    \"@types/getos\": \"^3.0.1\",\n    \"@types/jest\": \"^29.5.3\",\n    \"@types/json-stringify-safe\": \"^5.0.0\",\n    \"@types/lodash\": \"^4.14.191\",\n    \"@types/pluralize\": \"^0.0.33\",\n    \"@types/randomstring\": \"^1.1.8\",\n    \"@types/shelljs\": \"^0.8.11\",\n    \"@types/stack-utils\": \"^2.0.1\",\n    \"eslint\": \"^7.32.0\",\n    \"eslint-config-custom\": \"*\",\n    \"jest\": \"^29.5.0\",\n    \"msw\": \"^1.2.3\",\n    \"release-it\": \"^16.2.1\",\n    \"rimraf\": \"^4.1.1\",\n    \"tsconfig\": \"*\",\n    \"tsup\": \"^6.5.0\",\n    \"typescript\": \"^4.5.2\",\n    \"wtfnode\": \"^0.9.1\"\n  },\n  \"dependencies\": {\n    \"@babel/code-frame\": \"^7.18.6\",\n    \"@commander-js/extra-typings\": \"^11.1.0\",\n    \"@currents/commit-info\": \"file:./@currents/commit-info\",\n    \"@currents/pwc-parser\": \"*\",\n    \"@currents/pwc-scanner\": \"*\",\n    \"async-retry\": \"^1.3.3\",\n    \"axios\": \"^1.2.0\",\n    \"axios-retry\": \"^3.4.0\",\n    \"chalk\": \"^4.1.2\",\n    \"colors\": \"^1.4.0\",\n    \"commander\": \"^11.1.0\",\n    \"date-fns\": \"^2.29.3\",\n    \"debug\": \"^4.3.4\",\n    \"dotenv\": \"^16.0.3\",\n    \"execa\": \"^7.2.0\",\n    \"getos\": \"^3.2.1\",\n    \"image-size\": \"^1.0.2\",\n    \"json-stringify-safe\": \"^5.0.1\",\n    \"lodash\": \"^4.17.21\",\n    \"nanoid\": \"^3.3.4\",\n    \"p-all\": \"^3.0.0\",\n    \"pino\": \"^8.11.0\",\n    \"pluralize\": \"^8.0.0\",\n    \"pretty-ms\": \"^7.0.1\",\n    \"randomstring\": \"^1.2.3\",\n    \"source-map-support\": \"^0.5.21\",\n    \"stack-utils\": \"^2.0.6\",\n    \"tmp-promise\": \"^3.0.3\",\n    \"ts-pattern\": \"^4.3.0\"\n  },\n  \"files\": [\n    \"dist\",\n    \"!**/*.map\",\n    \"!**/*/*.map\",\n    \"**/*.LEGAL.txt\",\n    \"LICENSE.md\",\n    \"README.md\",\n    \"CHANGELOG.md\"\n  ],\n  \"keywords\": [\n    \"playwright\",\n    \"playwright dashboard\",\n    \"cloud dashboard\",\n    \"reporter\",\n    \"currents\",\n    \"tests reporter\",\n    \"sorry cypress\",\n    \"ci\"\n  ],\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/index.js\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./parallel\": {\n      \"import\": \"./dist/parallel/index.js\",\n      \"require\": \"./dist/parallel/index.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"registry\": \"https://registry.npmjs.org\"\n  },\n  \"release-it\": {\n    \"npm\": {\n      \"publish\": false\n    },\n    \"github\": {\n      \"release\": true\n    },\n    \"plugins\": {\n      \"@release-it/conventional-changelog\": {\n        \"preset\": \"angular\",\n        \"header\": \"# Changelog\",\n        \"ignoreVersion\": true,\n        \"infile\": \"../../CHANGELOG.md\"\n      }\n    },\n    \"git\": {\n      \"commitMessage\": \"chore: release v${version}\",\n      \"tagName\": \"v${version}\"\n    }\n  }\n}\n","import pkg from \"../../package.json\";\n\nexport const pwcVersion = pkg.version;\n","import EventEmitter from \"events\";\nimport * as logger from \"../logger\";\nimport { getCancellationReason } from \"./cancellation\";\n\nexport enum Event {\n  RUN_CANCELLED = \"runCancelled\",\n}\nexport const pubsub = new EventEmitter();\n\nexport function addEventListeners() {\n  pubsub.addListener(Event.RUN_CANCELLED, onRunCancelled);\n}\n\nexport function removeEventListeners() {\n  pubsub.removeListener(Event.RUN_CANCELLED, onRunCancelled);\n}\n\nfunction onRunCancelled() {\n  logger.debug(\"Run cancelled: %s\", getCancellationReason());\n  process.exit(1);\n}\n","import { warn } from \"../../logger\";\nimport { Event, pubsub } from \"../pubsub\";\n\ninterface ExecutionState {\n  cancellationReason: string | null;\n}\nconst state: ExecutionState = {\n  cancellationReason: null,\n};\n\nexport const setCancellationReason = (reason: string) => {\n  if (state.cancellationReason) {\n    return;\n  }\n  state.cancellationReason = reason;\n};\n\nexport const getCancellationReason = () => state.cancellationReason;\n\nexport const maybeCancelRun = ({\n  showWarning = true,\n}: {\n  showWarning?: boolean;\n} = {}) => {\n  const cancellationReason = getCancellationReason();\n  if (cancellationReason) {\n    showWarning && warn(\"%s\", cancellationReason);\n    pubsub.emit(Event.RUN_CANCELLED, cancellationReason);\n  }\n};\n","export * from \"./cancellation\";\n","import { AxiosError, isAxiosError } from \"axios\";\n\nexport const isRetriableError = (err: AxiosError): boolean => {\n  if (!isAxiosError(err)) {\n    return false;\n  }\n  if (err.code === \"ECONNREFUSED\") {\n    return true;\n  }\n  return !!(\n    err?.response?.status &&\n    500 <= err.response.status &&\n    err.response.status < 600\n  );\n};\n\nexport const getDelay = (i: number) => [15 * 1000, 30 * 1000, 60 * 1000][i - 1];\n\nexport const getAPIBaseUrl = () =>\n  process.env.CURRENTS_API_URL ?? \"https://cy.currents.dev\";\n","import { AxiosError } from \"axios\";\nimport _ from \"lodash\";\nimport { P, match } from \"ts-pattern\";\nimport { error, spacer, warn } from \"../logger\";\n\nexport function maybePrintErrors(err: AxiosError) {\n  if (!err.response?.data || !err.response?.status) {\n    return;\n  }\n\n  match(err.response)\n    .with({ status: 401 }, () => {\n      warn(\"[currents] received 401 Unauthorized Request from cloud service\");\n    })\n    .with(\n      {\n        status: 422,\n      },\n      (response) => {\n        match(response.data)\n          .with({ message: P.string, errors: P.array(P.string) }, (data) => {\n            const { message, errors } = data;\n            spacer(1);\n            warn(...formatGenericError(message, errors));\n            spacer(1);\n          })\n          .otherwise(() => {\n            warn(\n              \"[currents] received 422 Unprocessable Entity from cloud service\"\n            );\n          });\n      }\n    )\n    .otherwise(() => {\n      error(\"Unexpected error from the cloud service: %s\\n%O\", err.toJSON());\n    });\n}\n\nexport function formatGenericError(\n  message?: string,\n  errors?: string[]\n): string[] {\n  if (!_.isString(message)) {\n    return [\"Unexpected error from the cloud service\"];\n  }\n\n  if (errors?.length === 0) {\n    return [message as string];\n  }\n  return [\n    message as string,\n    `\n${(errors ?? []).map((e) => `  - ${e}`).join(\"\\n\")}\n`,\n  ];\n}\n","import axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n  isAxiosError,\n} from \"axios\";\nimport axiosRetry from \"axios-retry\";\nimport _ from \"lodash\";\nimport prettyMilliseconds from \"pretty-ms\";\nimport { P, match } from \"ts-pattern\";\nimport { debug as _debug } from \"../debug\";\nimport { pwcVersion } from \"../env/versions\";\nimport { maybeCancelRun, setCancellationReason } from \"../lib/cancellation\";\nimport { warn } from \"../logger\";\nimport { getAPIBaseUrl, getDelay, isRetriableError } from \"./httpConfig\";\nimport { maybePrintErrors } from \"./printErrors\";\n\nconst debug = _debug.extend(\"api\");\n\nconst headers = {\n  \"x-pw-version\": \"0.0.0\",\n  \"x-pwc-version\": pwcVersion,\n};\n\nexport function setPWVersion(version: string) {\n  headers[\"x-pw-version\"] = version ?? \"0.0.0\";\n}\n\nconst MAX_RETRIES = 3;\n\nlet _client: AxiosInstance | null = null;\n\nexport function getClient() {\n  if (_client) {\n    return _client;\n  }\n  _client = axios.create({\n    baseURL: getAPIBaseUrl(),\n  });\n\n  _client.interceptors.request.use((config) => {\n    config.headers.set({\n      ...headers,\n      // @ts-ignore\n      \"x-pwc-request-attempt\": config[\"axios-retry\"]?.retryCount ?? 0,\n    });\n    config.headers.set();\n\n    if (!config.headers.get(\"Content-Type\")) {\n      config.headers.set(\"Content-Type\", \"application/json\");\n    }\n\n    const args = {\n      ..._.pick(config, \"method\", \"url\", \"headers\"),\n      data: Buffer.isBuffer(config.data) ? \"buffer\" : config.data,\n    };\n\n    debug(\"network request: %o\", getNetworkRequestDebugData(args));\n    return config;\n  });\n\n  axiosRetry(_client, {\n    retries: MAX_RETRIES,\n    retryCondition: isRetriableError,\n    retryDelay: getDelay,\n    // @ts-ignore\n    onRetry,\n  });\n  return _client;\n}\n\nfunction getNetworkRequestDebugData(data: { headers: Record<string, string> }) {\n  return {\n    ...data,\n    headers: {\n      ...data.headers,\n      [\"x-currents-key\"]: \"***\",\n    },\n  };\n}\nfunction onRetry(\n  retryCount: number,\n  err: AxiosError<{ message: string; errors?: string[] }>,\n  _config: AxiosRequestConfig\n) {\n  warn(\n    \"Network request '%s' failed: '%s'. Next attempt is in %s (%d/%d).\",\n    `${_config.method?.toUpperCase()} ${_config.url}`,\n    err.message,\n    prettyMilliseconds(getDelay(retryCount)),\n    retryCount,\n    MAX_RETRIES\n  );\n}\n\nexport const makeRequest = <Response = any, Request = any>(\n  config: Omit<AxiosRequestConfig<Request>, \"headers\">\n) => {\n  return getClient()<Request, AxiosResponse<Response>>(config)\n    .then((res) => {\n      debug(\"network response: %o\", {\n        ..._.omit(res, \"request\", \"config\"),\n        url: res.config.url,\n        method: res.config.method,\n      });\n      return res;\n    })\n    .catch((error) => {\n      debugger;\n      match(error)\n        .when(isAxiosError, (err) => {\n          maybePrintErrors(err);\n          handleAxiosError(err);\n        })\n        .otherwise((err) => {\n          throw err;\n        });\n    });\n};\n\nconst ErrorCodes = {\n  RUN_CANCELLED: \"RUN_CANCELLED\",\n  RUN_EXPIRED: \"RUN_EXPIRED\",\n} as const;\n\nfunction handleAxiosError(error: AxiosError) {\n  match(error.response?.data)\n    .with({ code: ErrorCodes.RUN_CANCELLED, message: P.string }, (err) => {\n      setCancellationReason(err.message);\n      maybeCancelRun({ showWarning: false });\n    })\n    .with({ code: ErrorCodes.RUN_EXPIRED, message: P.string }, () => {\n      warn(\n        \"This execution will not be recorded because the cloud run is expired.\"\n      );\n    })\n    .otherwise((err) => {\n      throw err;\n    });\n}\n","export * from \"../upload/send\";\nexport * from \"./http\";\n","import { makeRequest } from \"../http\";\n\nexport const getDebugUrl = ({\n  runId,\n  type,\n}: {\n  runId: string;\n  type: string;\n}) => {\n  return makeRequest<\n    { uploadUrl: string; readUrl: string },\n    { runId: string; type: string }\n  >({\n    // comment for local\n    method: \"POST\",\n    url: `runs/debug-logs`,\n    data: {\n      type,\n      runId,\n    },\n  }).then((result) => result.data);\n};\n","export * from \"./send\";\n","import { bgYellow } from \"colors/safe\";\nimport Debug from \"debug\";\nimport fs from \"fs\";\nimport os from \"os\";\nimport path from \"path\";\nimport utils from \"util\";\nimport { getRandomString } from \"../lib/nano\";\nimport { dim, info, warn, white } from \"../logger\";\n\nconst original = Debug.log;\n\nconst debug = Debug(\"currents:remote-debug\");\n\nconst pipelines: Record<\n  string,\n  {\n    type: \"cli\" | \"core\";\n    id: string;\n    writeStream: fs.WriteStream;\n    tempFilePath: string;\n  }\n> = {};\n\nfunction shouldEnableRemoteDebug(mode: boolean | \"remote\" | \"full\") {\n  if (mode === \"full\" || mode === \"remote\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction shouldMuteLocalStdout(mode: boolean | \"remote\" | \"full\") {\n  if (mode === \"remote\") {\n    return true;\n  }\n\n  return false;\n}\n\nexport function initDebug(\n  params: {\n    source: \"cli\" | \"core\";\n    mode: boolean | \"remote\" | \"full\";\n  } = {\n    source: \"core\",\n    mode: \"remote\",\n  }\n) {\n  if (params.mode !== false) {\n    const debugPattern = process.env.DEBUG\n      ? `${process.env.DEBUG},currents*`\n      : \"currents*\";\n    Debug.enable(debugPattern);\n  }\n  if (!shouldEnableRemoteDebug(params.mode)) {\n    return;\n  }\n  const id = getRandomString();\n  const tempFilePath = path.resolve(os.tmpdir(), `currents-debug_${id}.log`);\n  info(\n    white(\n      bgYellow(`👾 Initiated remote ${params.source} debug log collection:`)\n    ),\n    dim(tempFilePath)\n  );\n\n  const writeStream = fs.createWriteStream(tempFilePath, { flags: \"a\" });\n\n  Debug.log = (...args) => {\n    writeStream.write(`${utils.format(...args)}\\n`);\n    if (!shouldMuteLocalStdout(params.mode)) {\n      original(...args);\n    }\n  };\n\n  pipelines[id] = {\n    id,\n    writeStream,\n    type: params.source,\n    tempFilePath,\n  };\n\n  return id;\n}\n\nexport async function finalizeDebug({ runId }: { runId?: string }) {\n  try {\n    const ids = Object.keys(pipelines);\n\n    if (ids.length === 0) {\n      debug(`No debug pipelines found`);\n      Debug.log = original;\n    }\n\n    for (const id of ids) {\n      await uploadDebug(id, runId ?? getRandomString());\n    }\n  } finally {\n    Debug.log = original;\n  }\n}\n\nasync function uploadDebug(id: string, runId: string) {\n  const pipeline = pipelines[id];\n\n  if (!pipeline) {\n    debug(`No debug pipeline found for id %s`, id);\n    return;\n  }\n\n  info(\n    white(bgYellow(`👾 ${pipeline.type} debug log written:`)),\n    dim(pipeline?.tempFilePath)\n  );\n\n  const { getDebugUrl } = await import(\"./api\");\n  try {\n    const { readUrl, uploadUrl } = await getDebugUrl({\n      runId,\n      type: \"pw-debug\",\n    });\n    const { uploadText } = await import(\"../upload\");\n    await uploadText(pipeline.tempFilePath, uploadUrl);\n    pipeline?.writeStream.end();\n    info(\n      white(bgYellow(`👾 ${pipeline.type} debug log uploaded:`)),\n      dim(readUrl)\n    );\n  } catch (e) {\n    warn(\n      `Failed to upload ${pipeline.type}} debug log ${dim(\n        pipeline.tempFilePath\n      )}: ${(e as Error).message}`\n    );\n  }\n}\n\nexport { Debug };\n","export * from \"./remote-debug\";\n","import { Debug } from \"../remote-debug\";\n\nexport const debug = Debug(\"currents\");\n","#! /usr/bin/env node\nimport \"source-map-support/register\";\n\nimport { CommanderError } from \"commander\";\nimport fs from \"fs\";\nimport { cliOptionsToConfig } from \"../config\";\nimport { debug as _debug } from \"../debug\";\nimport { getRandomString } from \"../lib/nano\";\nimport { error } from \"../logger\";\nimport { finalizeDebug, initDebug } from \"../remote-debug\";\nimport { getProgram } from \"./program\";\nimport { createTempFile } from \"./tmp-file\";\n\nconst debug = _debug.extend(\"cli\");\n\nrequire(\"dotenv\").config();\n\nasync function runScript() {\n  const program = getProgram().parse();\n  const cliOptions = program.opts();\n\n  if (!!cliOptions.pwcDebug) {\n    initDebug({\n      source: \"cli\",\n      mode: cliOptions.pwcDebug,\n    });\n  }\n\n  debug(\"CLI options: %o\", cliOptions);\n\n  const parsedConfig = cliOptionsToConfig(cliOptions);\n  debug(\"Parsed config from CLI options: %o\", parsedConfig);\n\n  const tempFilePath = await createTempFile();\n  fs.writeFileSync(tempFilePath, JSON.stringify(parsedConfig));\n\n  debug(\"CLI options temp file path: %s\", tempFilePath);\n\n  const { execa } = await import(\"execa\");\n  const result = await execa(\n    \"playwright\",\n    [\"test\", \"--reporter\", \"@currents/playwright\", ...program.args],\n    {\n      stdio: \"inherit\",\n      reject: false,\n      env: {\n        ...process.env,\n        CURRENTS_PWC_CONFIG_PATH: tempFilePath,\n        ...{ NODE_OPTIONS: cliOptions.pwcInspect ? \"--inspect-brk=9440\" : \"\" },\n      },\n    }\n  );\n  try {\n    await finalizeDebug({ runId: getRandomString() });\n  } catch (e) {\n    // nooop\n  }\n  return result;\n}\n\nrunScript()\n  .then((child) => {\n    debug(\"execa result: %o\", child);\n    process.exit(child.exitCode ?? 0);\n  })\n  .catch((e) => {\n    if (e instanceof CommanderError) {\n      error(e.message);\n      process.exit(e.exitCode);\n    }\n    debug(\"execa failed: %o\", e);\n    process.exit(1);\n  });\n","export * from \"./config\";\nexport * from \"./env\";\nexport * from \"./options\";\n","import { debug } from \"../debug\";\nimport { ValidationError } from \"../lib/error\";\nimport { dim, error } from \"../logger\";\n\nimport {\n  getCLIOptionName,\n  getConfigName,\n  getEnvVariables,\n  getEnvironmentVariableName,\n} from \"./env\";\nimport { getCLIOptions } from \"./options\";\n\nexport type CurrentsConfig = {\n  /**\n   * The id of the build to record the test run. Read more: https://currents.dev/readme/guides/ci-build-id\n   */\n  ciBuildId?: string;\n\n  /**\n   * The id of the project to record the test run.\n   */\n  projectId: string;\n\n  /**\n   * The record key to be used to record the results on the remote dashboard. Read more: https://currents.dev/readme/guides/record-key\n   */\n  recordKey: string;\n\n  /**\n   * A list of tags to be added to the test run.\n   */\n  tag?: string[];\n\n  /**\n   * experimental - enable reporting test-level results\n   */\n  enableTestResults?: boolean;\n\n  /**\n   * remove tags from test names, for example `Test name @smoke` becomes `Test name`\n   */\n  removeTitleTags?: boolean;\n\n  /**\n   * disable extracting tags from test title, e.g. `Test name @smoke` would not be tagged with `smoke`\n   */\n  disableTitleTags?: boolean;\n\n  /**\n   * Abort the run after the specified number of failed tests. Overrides the default Currents Project settings.\n   * If set, must be a positive integer or \"false\" to disable\n   */\n  cancelAfterFailures?: number | false;\n\n  /**\n   * Path to the test suite file to upload to Currents.\n   */\n  testSuiteFile?: string;\n\n  /**\n   * Enable debug logs for the reporter. Optionally, specify \"silent\" to disable console output\n   */\n  debug?: boolean | \"full\" | \"remote\";\n};\n\ntype MandatoryCurrentsConfigKeys = \"ciBuildId\" | \"projectId\" | \"recordKey\";\n\nconst mandatoryConfigKeys: MandatoryCurrentsConfigKeys[] = [\n  \"projectId\",\n  \"recordKey\",\n];\n\nlet _config: CurrentsConfig | null = null;\n\n/**\n * Precendence: env > cli > reporter config\n * @param reporterOptions reporter config\n */\nexport function setCurrentsConfig(reporterOptions?: Partial<CurrentsConfig>) {\n  const result = {\n    ...removeUndefined(reporterOptions),\n    ...removeUndefined(getCLIOptions()),\n    ...removeUndefined(getEnvVariables()),\n  };\n\n  mandatoryConfigKeys.forEach((i) => {\n    if (!result[i]) {\n      error(\n        `${getConfigName(\n          i\n        )} is required for Currents Reporter. Use the following methods to set Currents Project ID:\n- as environment variable: ${dim(getEnvironmentVariableName(i))}\n- as CLI flag of pwc command: ${dim(getCLIOptionName(i))}\n- as reporter configuration option ${dim(i)} in ${dim(\"playwright.config.ts\")}\n\n📖 https://currents.dev/readme/integration-with-playwright/currents-playwright`\n      );\n      throw new ValidationError(\"Missing required config variable\");\n    }\n  });\n\n  _config = result as CurrentsConfig;\n  debug(\"Resolved Currents config: %o\", _config);\n}\n\nfunction removeUndefined<T extends {}>(obj?: T): T {\n  return Object.entries(obj ?? {}).reduce((acc, [key, value]) => {\n    if (value === undefined) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {} as T);\n}\n\nexport function getCurrentsConfig() {\n  return _config;\n}\n","export class ValidationError extends Error {}\n","import { CurrentsConfig } from \"./config\";\nimport { parseAutoCancelFailures } from \"./parser\";\n\nexport const configKey = {\n  debug: {\n    name: \"Debug\",\n    env: \"CURRENTS_DEBUG\",\n    cli: \"--pwc-debug\",\n  },\n  ciBuildId: {\n    name: \"CI Build ID\",\n    env: \"CURRENTS_CI_BUILD_ID\",\n    cli: \"--ci-build-id\",\n  },\n  recordKey: {\n    name: \"Record Key\",\n    env: \"CURRENTS_RECORD_KEY\",\n    cli: \"--key\",\n  },\n  projectId: {\n    name: \"Project ID\",\n    env: \"CURRENTS_PROJECT_ID\",\n    cli: \"--project-id\",\n  },\n  tag: {\n    name: \"Currents Tag\",\n    env: \"CURRENTS_TAG\",\n    cli: \"--tag\",\n  },\n  cancelAfterFailures: {\n    name: \"Currents Cancel After Failures\",\n    env: \"CURRENTS_CANCEL_AFTER_FAILURES\",\n    cli: \"--pwc-cancel-after-failures\",\n  },\n  disableTitleTags: {\n    name: \"Disable Title Tags\",\n    env: \"CURRENTS_DISABLE_TITLE_TAGS\",\n    cli: \"--pwc-disable-title-tags\",\n  },\n  testSuiteFile: {\n    name: \"Test Suite File\",\n    env: \"CURRENTS_TEST_SUITE_FILE\",\n    cli: \"--pwc-test-suite-file\",\n  },\n} as const;\n\nexport function getEnvironmentVariableName(variable: keyof typeof configKey) {\n  return configKey[variable].env;\n}\n\nexport function getCLIOptionName(variable: keyof typeof configKey) {\n  return configKey[variable].cli;\n}\nexport function getConfigName(variable: keyof typeof configKey) {\n  return configKey[variable].name;\n}\n\n/**\n * Converts Environment variables to Currents config.\n * Not all keys are supposed to exist - it is only used for allowing overriding pw.config JS object, the actual config should be parsed and validated after merging.\n * @returns\n */\nexport function getEnvVariables(): Partial<\n  Record<keyof CurrentsConfig, string | string[] | boolean | number | undefined>\n> {\n  return {\n    projectId: process.env[configKey.projectId.env],\n    recordKey: process.env[configKey.recordKey.env],\n    ciBuildId: process.env[configKey.ciBuildId.env],\n    tag: process.env[configKey.tag.env]\n      ? process.env[configKey.tag.env]?.split(\",\").map((i) => i.trim())\n      : undefined,\n    cancelAfterFailures: parseAutoCancelFailures(\n      process.env[configKey.cancelAfterFailures.env]\n    ),\n    disableTitleTags: process.env[configKey.disableTitleTags.env],\n    debug: process.env[configKey.debug.env],\n    testSuiteFile: process.env[configKey.testSuiteFile.env],\n  };\n}\n","import { CommanderError } from \"commander\";\n\nexport function parseDebug(\n  value: string | boolean\n): boolean | \"remote\" | \"full\" {\n  if (value === \"remote\") {\n    return \"remote\";\n  }\n\n  if (value === \"full\") {\n    return \"full\";\n  }\n\n  return !!value;\n}\n\nexport function parseAutoCancelFailures(\n  value?: string\n): undefined | number | false {\n  if (!value) {\n    return;\n  }\n\n  if (value === \"false\") {\n    return false;\n  }\n\n  const parsedValue = parseInt(value, 10);\n\n  if (isNaN(parsedValue) || parsedValue < 1) {\n    throw new CommanderError(\n      255,\n      \"Invalid argument provided.\",\n      \"--pwc-cancel-after-failures must be a positive integer or 'false', provided: \" +\n        value\n    );\n  }\n\n  return parsedValue;\n}\n","import { Command } from \"@commander-js/extra-typings\";\nimport fs from \"fs\";\nimport { getProgram } from \"../bin/program\";\nimport { debug } from \"../debug\";\n\nimport { CurrentsConfig } from \"./config\";\n\ntype ExtractSecondTags<T> = T extends Command<any, infer U> ? U : never;\ntype CLIOptions = ExtractSecondTags<ReturnType<typeof getProgram>>;\n\n/**\n * Converts CLI options to Currents config.\n * Mosty used for converting the keys.\n * @param cliOptions\n * @returns\n */\nexport function cliOptionsToConfig(\n  cliOptions: CLIOptions\n): Partial<CurrentsConfig> {\n  return {\n    ciBuildId: cliOptions.ciBuildId,\n    projectId: cliOptions.projectId,\n    recordKey: cliOptions.key,\n    tag: cliOptions.tag,\n    enableTestResults: cliOptions.pwcEnableTestResults,\n    removeTitleTags: cliOptions.pwcRemoveTitleTags,\n    cancelAfterFailures: cliOptions.pwcCancelAfterFailures,\n    disableTitleTags: cliOptions.pwcDisableTitleTags,\n    debug: cliOptions.pwcDebug,\n    testSuiteFile: cliOptions.pwcTestSuiteFile,\n  };\n}\n\nexport function getCLIOptions() {\n  if (process.env.CURRENTS_PWC_CONFIG_PATH) {\n    try {\n      const result: Partial<CurrentsConfig> = JSON.parse(\n        fs.readFileSync(process.env.CURRENTS_PWC_CONFIG_PATH).toString()\n      );\n      debug(\"CLI options from file: %o\", result);\n      return result;\n    } catch (error) {\n      return {};\n    }\n  }\n  return {};\n}\n","import { Command, Option } from \"@commander-js/extra-typings\";\nimport chalk from \"chalk\";\n\nimport { getEnvironmentVariableName } from \"../config\";\nimport { parseAutoCancelFailures, parseDebug } from \"../config/parser\";\nimport { pwcVersion } from \"../env/versions\";\nimport { dim } from \"../logger\";\n\nexport const getProgram = (command: Command = new Command()) =>\n  command\n    .name(\"pwc\")\n    .usage(\"[options] [playwright arguments and flags]\")\n    .allowUnknownOption()\n    .showHelpAfterError(\"(add --help for additional information)\")\n    .description(\n      `🎭 Run Playwright tests on CI using https://currents.dev\n\n----------------------------------------------------\n📖 Documentation: https://currents.dev/readme\n🤙 Support:       support@currents.dev\n----------------------------------------------------\n\n${chalk.bold(\"Examples\")}\n\nRun all tests in the current directory:\n    ${dim(\"pwc --key <record-key> --project-id <id> --ci-build-id <build-id>\")}\n\nRun only tests filtered by the tag \"@smoke\":\n    ${dim(\n      \"pwc --key <record-key> --project-id <id> --ci-build-id <build-id> --grep smoke\"\n    )}\n\nRun playwright tests and add tags \"tagA\", \"tagB\" to the recorded run:\n    ${dim(\n      \"pwc --key <record-key> --project-id <id> --ci-build-id <build-id> --tag tagA --tag tagB\"\n    )}\n\nProvide playwright arguments and flags:\n    ${dim(\n      \"pwc --key <record-key> --project-id <id> --ci-build-id <build-id> -- --workers 2 --timeout 10000 --shard 1/2\"\n    )}\n`\n    )\n    .addOption(\n      new Option(\"--ci-build-id <id>\", \"the unique identifier for a run\").env(\n        getEnvironmentVariableName(\"ciBuildId\")\n      )\n    )\n    .addOption(\n      new Option(\n        \"-k, --key <record-key>\",\n        \"your secret Record Key obtained from Currents\"\n      ).env(getEnvironmentVariableName(\"recordKey\"))\n    )\n    .addOption(\n      new Option(\n        \"-p, --project-id <project>\",\n        \"the project ID for results reporting obtained from Currents\"\n      ).env(getEnvironmentVariableName(\"projectId\"))\n    )\n    .addOption(\n      new Option(\n        \"-t, --tag <tag>\",\n        \"comma-separated tag(s) for recorded runs in Currents\"\n      ).argParser(parseCommaSeparatedList)\n    )\n    .addOption(\n      new Option(\n        \"--pwc-enable-test-results\",\n        \"enable reporting test-level results\"\n      )\n        .default(false)\n        .hideHelp()\n    )\n    .addOption(\n      new Option(\n        \"--pwc-remove-title-tags\",\n        \"remove tags from test names in Currents, e.g. `Test name @smoke` becomes `Test name` in the dashboard\"\n      ).default(false)\n    )\n    .addOption(\n      new Option(\n        \"--pwc-disable-title-tags\",\n        \"disable parsing tags from test title, e.g. `Test name @smoke` would not be tagged with `smoke` in the dashboard\"\n      ).default(false)\n    )\n    .addOption(\n      new Option(\n        \"--pwc-cancel-after-failures <number | false>\",\n        \"abort the cloud run after the specified number of failed tests detected. Overrides the default Currents Project settings. If set, must be a positive integer or 'false' to disable automatic cancellations\"\n      )\n        .env(getEnvironmentVariableName(\"cancelAfterFailures\"))\n        .argParser(parseAutoCancelFailures)\n    )\n    .addOption(\n      new Option(\n        \"--pwc-test-suite-file <path>\",\n        \"path to the test suite file to upload to Currents\"\n      )\n        .env(getEnvironmentVariableName(\"testSuiteFile\"))\n        .hideHelp()\n    )\n    .addOption(\n      new Option(\n        \"--pwc-debug [boolean | 'remote' | 'full']\",\n        \"enable debug logs for the reporter. Specify 'remote' to upload logs to Currents. Specify 'full' to dump the debug logs to stdout and upload to Currents.\"\n      )\n        .argParser(parseDebug)\n        .env(getEnvironmentVariableName(\"debug\"))\n        .default(false)\n    )\n    .addOption(\n      new Option(\n        \"--pwc-inspect\",\n        \"enable inspect mode, run playwright with --inspect-brk flag or developments and debugging\"\n      ).default(false)\n    )\n    .version(pwcVersion);\n\nfunction parseCommaSeparatedList(value: string, previous: string[] = []) {\n  if (value) {\n    return previous.concat(value.split(\",\").map((t) => t.trim()));\n  }\n  return previous;\n}\n","import { file } from \"tmp-promise\";\n\nexport const createTempFile = async () => {\n  const { path } = await file();\n  return path;\n};\n"],"mappings":"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","names":["init_cjs_shims","__esmMin","import_nanoid","getRandomString","init_nano","__esmMin","init_cjs_shims","addToLogDrain","str","logDrain","init_logDrain","__esmMin","init_cjs_shims","import_chalk","import_util","log","info","warn","error","spacer","cyan","blue","red","green","gray","white","magenta","dim","init_logger","__esmMin","init_cjs_shims","init_debug","init_logDrain","args","stringToRender","util","addToLogDrain","debug","chalk","n","init_logger","__esmMin","init_cjs_shims","init_logDrain","uploadText","file","url","sendPath","upload","contentType","onUploadProgress","buffer","fs","debug","send","sendBuffer","_send","axios","args","retry","error","retryCount","warn","import_async_retry","import_axios","import_promises","ContentType","init_send","__esmMin","init_cjs_shims","init_debug","init_logger","package_default","init_package","__esmMin","pwcVersion","init_versions","__esmMin","init_cjs_shims","init_package","package_default","import_events","pubsub","init_pubsub","__esmMin","init_cjs_shims","init_logger","init_cancellation","EventEmitter","state","setCancellationReason","getCancellationReason","maybeCancelRun","init_cancellation","__esmMin","init_cjs_shims","init_logger","init_pubsub","reason","showWarning","cancellationReason","warn","pubsub","init_cancellation","__esmMin","init_cjs_shims","import_axios","isRetriableError","getDelay","getAPIBaseUrl","init_httpConfig","__esmMin","init_cjs_shims","err","i","maybePrintErrors","err","warn","response","data","message","errors","spacer","formatGenericError","error","_","e","import_lodash","import_ts_pattern","init_printErrors","__esmMin","init_cjs_shims","init_logger","getClient","_client","axios","getAPIBaseUrl","config","headers","args","_","debug","getNetworkRequestDebugData","axiosRetry","MAX_RETRIES","isRetriableError","getDelay","onRetry","data","retryCount","err","_config","warn","prettyMilliseconds","handleAxiosError","error","ErrorCodes","setCancellationReason","maybeCancelRun","import_axios","import_axios_retry","import_lodash","import_pretty_ms","import_ts_pattern","makeRequest","init_http","__esmMin","init_cjs_shims","init_debug","init_versions","init_cancellation","init_logger","init_httpConfig","init_printErrors","pwcVersion","res","maybePrintErrors","init_http","__esmMin","init_cjs_shims","init_send","api_exports","__export","getDebugUrl","init_api","__esmMin","init_cjs_shims","init_http","runId","type","makeRequest","result","upload_exports","__export","ContentType","sendBuffer","sendPath","uploadText","init_upload","__esmMin","init_cjs_shims","init_send","shouldEnableRemoteDebug","mode","shouldMuteLocalStdout","initDebug","params","debugPattern","Debug","id","getRandomString","tempFilePath","path","os","info","white","dim","writeStream","fs","args","utils","original","pipelines","finalizeDebug","runId","ids","debug","uploadDebug","pipeline","getDebugUrl","readUrl","uploadUrl","uploadText","e","warn","import_safe","import_debug","import_fs","import_os","import_path","import_util","init_remote_debug","__esmMin","init_cjs_shims","init_nano","init_logger","init_remote_debug","__esmMin","init_cjs_shims","debug","init_debug","__esmMin","init_cjs_shims","init_remote_debug","Debug","init_cjs_shims","import_register","import_commander","import_fs","init_cjs_shims","init_cjs_shims","init_debug","init_cjs_shims","init_logger","init_cjs_shims","init_cjs_shims","import_commander","parseDebug","value","parseAutoCancelFailures","parsedValue","configKey","getEnvironmentVariableName","variable","init_cjs_shims","import_fs","init_debug","cliOptionsToConfig","cliOptions","init_debug","init_nano","init_logger","init_remote_debug","init_cjs_shims","import_extra_typings","import_chalk","init_versions","init_logger","getProgram","command","chalk","dim","getEnvironmentVariableName","parseCommaSeparatedList","parseAutoCancelFailures","parseDebug","pwcVersion","value","previous","t","init_cjs_shims","import_tmp_promise","createTempFile","path","debug","runScript","program","getProgram","cliOptions","initDebug","parsedConfig","cliOptionsToConfig","tempFilePath","createTempFile","fs","execa","result","finalizeDebug","getRandomString","child","error"]}