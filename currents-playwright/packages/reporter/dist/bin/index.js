#! /usr/bin/env node
"use strict";var Je=Object.create;var D=Object.defineProperty;var Ye=Object.getOwnPropertyDescriptor;var Ze=Object.getOwnPropertyNames;var Qe=Object.getPrototypeOf,et=Object.prototype.hasOwnProperty;var i=(e,t)=>()=>(e&&(t=e(e=0)),t);var z=(e,t)=>{for(var o in t)D(e,o,{get:t[o],enumerable:!0})},tt=(e,t,o,p)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of Ze(t))!et.call(e,s)&&s!==o&&D(e,s,{get:()=>t[s],enumerable:!(p=Ye(t,s))||p.enumerable});return e};var a=(e,t,o)=>(o=e!=null?Je(Qe(e)):{},tt(t||!e||!e.__esModule?D(o,"default",{value:e,enumerable:!0}):o,e));var r=i(()=>{});var H,R,P=i(()=>{"use strict";r();H=require("nanoid"),R=(0,H.customAlphabet)("abcdefghijklmnopqrstuvwxyz",10)});function X(e){rt.push(e)}var rt,_=i(()=>{"use strict";r();rt=[]});var c,E,L,T,u,y,k,Nt,St,Dt,Pt,_t,I,Lt,d,J=i(()=>{"use strict";r();c=a(require("chalk")),E=a(require("util"));h();_();L=(...e)=>{let t=E.default.format(...e);X(t),console.log(t)},T=L,u=(...e)=>(m("WARNING: ",E.default.format(...e)),L(c.default.bgYellow.black(" WARNING "),E.default.format(...e))),y=(...e)=>L(c.default.bgRed.white(" ERROR "),E.default.format(...e)),k=(e=2)=>console.log(Array(e).fill("").join(`
`)),Nt=c.default.cyan,St=c.default.blueBright,Dt=c.default.red,Pt=c.default.green,_t=c.default.gray,I=c.default.white,Lt=c.default.magenta,d=c.default.dim});var f=i(()=>{"use strict";r();_();J()});function ot(e,t){return oe({path:e,name:null,uploadUrl:t,contentType:"text/plain"},"text/plain",void 0)}async function oe(e,t,o){let p=await ee.default.readFile(e.path);return te("Uploading file %s",e.uploadUrl,{buffer:Buffer.byteLength(p)}),ne(p,e.uploadUrl,t,o)}async function nt(e,t,o){return te("Uploading buffer %s",e.name,{buffer:Buffer.byteLength(e.buffer)}),ne(e.buffer,e.uploadUrl,t,o)}async function st(e,t,o,p){return(0,Q.default)({method:"put",url:t,data:e,onUploadProgress:p,headers:{"Content-Disposition":"inline","Content-Type":o}})}async function ne(...e){await(0,Z.default)(async()=>{await st(...e)},{retries:5,onRetry:(t,o)=>{if(o===5){y(`Cannot upload after ${o} times: ${t.message}`);return}u(`Upload failed ${o} out of 5 attempts: ${t.message}`)}})}var Z,Q,ee,te,re,j=i(()=>{"use strict";r();Z=a(require("async-retry")),Q=a(require("axios")),ee=a(require("fs/promises"));h();f();te=m.extend("upload"),re=(s=>(s.PNG="image/png",s.WEBM="video/webm",s.TEXT="text/plain",s.ZIP="application/zip",s))(re||{})});var ie,se=i(()=>{ie={name:"@currents/playwright",version:"0.11.5",main:"./dist/index.js",author:"Currents Software Inc",license:"GPL-3.0-or-later",scripts:{test:"jest",rm:"rimraf dist",lint:'TIMING=1 eslint "**/*.ts*"',build:"tsup-node --minify --dts",dev:"tsup-node --watch --dts",release:"release-it ","publish:npm":"npm run rm  && npm run build && ./publish.js","release-ci":"npm run rm && npm run build && ./publish.js -t latest"},bin:{pwc:"./dist/bin/index.js"},devDependencies:{"@playwright/test":"1.40.0","@release-it/conventional-changelog":"^7.0.2","@swc/jest":"^0.2.24","@types/async-retry":"^1.4.5","@types/babel__code-frame":"^7.0.3","@types/debug":"^4.1.11","@types/getos":"^3.0.1","@types/jest":"^29.5.3","@types/json-stringify-safe":"^5.0.0","@types/lodash":"^4.14.191","@types/pluralize":"^0.0.33","@types/randomstring":"^1.1.8","@types/shelljs":"^0.8.11","@types/stack-utils":"^2.0.1",eslint:"^7.32.0","eslint-config-custom":"*",jest:"^29.5.0",msw:"^1.2.3","release-it":"^16.2.1",rimraf:"^4.1.1",tsconfig:"*",tsup:"^6.5.0",typescript:"^4.5.2",wtfnode:"^0.9.1"},dependencies:{"@babel/code-frame":"^7.18.6","@commander-js/extra-typings":"^11.1.0","@currents/commit-info":"file:./@currents/commit-info","@currents/pwc-parser":"*","@currents/pwc-scanner":"*","async-retry":"^1.3.3",axios:"^1.2.0","axios-retry":"^3.4.0",chalk:"^4.1.2",colors:"^1.4.0",commander:"^11.1.0","date-fns":"^2.29.3",debug:"^4.3.4",dotenv:"^16.0.3",execa:"^7.2.0",getos:"^3.2.1","image-size":"^1.0.2","json-stringify-safe":"^5.0.1",lodash:"^4.17.21",nanoid:"^3.3.4","p-all":"^3.0.0",pino:"^8.11.0",pluralize:"^8.0.0","pretty-ms":"^7.0.1",randomstring:"^1.2.3","source-map-support":"^0.5.21","stack-utils":"^2.0.6","tmp-promise":"^3.0.3","ts-pattern":"^4.3.0"},files:["dist","!**/*.map","!**/*/*.map","**/*.LEGAL.txt","LICENSE.md","README.md","CHANGELOG.md"],keywords:["playwright","playwright dashboard","cloud dashboard","reporter","currents","tests reporter","sorry cypress","ci"],exports:{".":{import:"./dist/index.js",require:"./dist/index.js"},"./parallel":{import:"./dist/parallel/index.js",require:"./dist/parallel/index.js"},"./package.json":"./package.json"},publishConfig:{access:"public",registry:"https://registry.npmjs.org"},"release-it":{npm:{publish:!1},github:{release:!0},plugins:{"@release-it/conventional-changelog":{preset:"angular",header:"# Changelog",ignoreVersion:!0,infile:"../../CHANGELOG.md"}},git:{commitMessage:"chore: release v${version}",tagName:"v${version}"}}}});var U,F=i(()=>{"use strict";r();se();U=ie.version});var ae,pe,le=i(()=>{"use strict";r();ae=a(require("events"));f();O();pe=new ae.default});var $,ce,ue,de,me=i(()=>{"use strict";r();f();le();$={cancellationReason:null},ce=e=>{$.cancellationReason||($.cancellationReason=e)},ue=()=>$.cancellationReason,de=({showWarning:e=!0}={})=>{let t=ue();t&&(e&&u("%s",t),pe.emit("runCancelled",t))}});var O=i(()=>{"use strict";r();me()});var fe,ge,B,be,ye=i(()=>{"use strict";r();fe=require("axios"),ge=e=>(0,fe.isAxiosError)(e)?e.code==="ECONNREFUSED"?!0:!!(e?.response?.status&&500<=e.response.status&&e.response.status<600):!1,B=e=>[15*1e3,30*1e3,60*1e3][e-1],be=()=>process.env.CURRENTS_API_URL??"https://cy.currents.dev"});function we(e){!e.response?.data||!e.response?.status||(0,w.match)(e.response).with({status:401},()=>{u("[currents] received 401 Unauthorized Request from cloud service")}).with({status:422},t=>{(0,w.match)(t.data).with({message:w.P.string,errors:w.P.array(w.P.string)},o=>{let{message:p,errors:s}=o;k(1),u(...at(p,s)),k(1)}).otherwise(()=>{u("[currents] received 422 Unprocessable Entity from cloud service")})}).otherwise(()=>{y(`Unexpected error from the cloud service: %s
%O`,e.toJSON())})}function at(e,t){return he.default.isString(e)?t?.length===0?[e]:[e,`
${(t??[]).map(o=>`  - ${o}`).join(`
`)}
`]:["Unexpected error from the cloud service"]}var he,w,xe=i(()=>{"use strict";r();he=a(require("lodash")),w=require("ts-pattern");f()});function lt(){return x||(x=A.default.create({baseURL:be()}),x.interceptors.request.use(e=>{e.headers.set({...pt,"x-pwc-request-attempt":e["axios-retry"]?.retryCount??0}),e.headers.set(),e.headers.get("Content-Type")||e.headers.set("Content-Type","application/json");let t={...q.default.pick(e,"method","url","headers"),data:Buffer.isBuffer(e.data)?"buffer":e.data};return ve("network request: %o",ut(t)),e}),(0,Re.default)(x,{retries:Te,retryCondition:ge,retryDelay:B,onRetry:ct}),x)}function ut(e){return{...e,headers:{...e.headers,["x-currents-key"]:"***"}}}function ct(e,t,o){u("Network request '%s' failed: '%s'. Next attempt is in %s (%d/%d).",`${o.method?.toUpperCase()} ${o.url}`,t.message,(0,Ee.default)(B(e)),e,Te)}function dt(e){(0,C.match)(e.response?.data).with({code:Ce.RUN_CANCELLED,message:C.P.string},t=>{ce(t.message),de({showWarning:!1})}).with({code:Ce.RUN_EXPIRED,message:C.P.string},()=>{u("This execution will not be recorded because the cloud run is expired.")}).otherwise(t=>{throw t})}var A,Re,q,Ee,C,ve,pt,Te,x,Ie,Ce,Ue=i(()=>{"use strict";r();A=a(require("axios")),Re=a(require("axios-retry")),q=a(require("lodash")),Ee=a(require("pretty-ms")),C=require("ts-pattern");h();F();O();f();ye();xe();ve=m.extend("api"),pt={"x-pw-version":"0.0.0","x-pwc-version":U},Te=3,x=null;Ie=e=>lt()(e).then(t=>(ve("network response: %o",{...q.default.omit(t,"request","config"),url:t.config.url,method:t.config.method}),t)).catch(t=>{debugger;(0,C.match)(t).when(A.isAxiosError,o=>{we(o),dt(o)}).otherwise(o=>{throw o})}),Ce={RUN_CANCELLED:"RUN_CANCELLED",RUN_EXPIRED:"RUN_EXPIRED"}});var Ae=i(()=>{"use strict";r();j();Ue()});var Ne={};z(Ne,{getDebugUrl:()=>mt});var mt,Se=i(()=>{"use strict";r();Ae();mt=({runId:e,type:t})=>Ie({method:"POST",url:"runs/debug-logs",data:{type:t,runId:e}}).then(o=>o.data)});var De={};z(De,{ContentType:()=>re,sendBuffer:()=>nt,sendPath:()=>oe,uploadText:()=>ot});var Pe=i(()=>{"use strict";r();j()});function ft(e){return e==="full"||e==="remote"}function gt(e){return e==="remote"}function Oe(e={source:"core",mode:"remote"}){if(e.mode!==!1){let s=process.env.DEBUG?`${process.env.DEBUG},currents*`:"currents*";g.default.enable(s)}if(!ft(e.mode))return;let t=R(),o=ke.default.resolve(Le.default.tmpdir(),`currents-debug_${t}.log`);T(I((0,N.bgYellow)(`\u{1F47E} Initiated remote ${e.source} debug log collection:`)),d(o));let p=_e.default.createWriteStream(o,{flags:"a"});return g.default.log=(...s)=>{p.write(`${je.default.format(...s)}
`),gt(e.mode)||G(...s)},K[t]={id:t,writeStream:p,type:e.source,tempFilePath:o},t}async function $e({runId:e}){try{let t=Object.keys(K);t.length===0&&(Fe("No debug pipelines found"),g.default.log=G);for(let o of t)await bt(o,e??R())}finally{g.default.log=G}}async function bt(e,t){let o=K[e];if(!o){Fe("No debug pipeline found for id %s",e);return}T(I((0,N.bgYellow)(`\u{1F47E} ${o.type} debug log written:`)),d(o?.tempFilePath));let{getDebugUrl:p}=await Promise.resolve().then(()=>(Se(),Ne));try{let{readUrl:s,uploadUrl:S}=await p({runId:t,type:"pw-debug"}),{uploadText:W}=await Promise.resolve().then(()=>(Pe(),De));await W(o.tempFilePath,S),o?.writeStream.end(),T(I((0,N.bgYellow)(`\u{1F47E} ${o.type} debug log uploaded:`)),d(s))}catch(s){u(`Failed to upload ${o.type}} debug log ${d(o.tempFilePath)}: ${s.message}`)}}var N,g,_e,Le,ke,je,G,Fe,K,Be=i(()=>{"use strict";r();N=require("colors/safe"),g=a(require("debug")),_e=a(require("fs")),Le=a(require("os")),ke=a(require("path")),je=a(require("util"));P();f();G=g.default.log,Fe=(0,g.default)("currents:remote-debug"),K={}});var M=i(()=>{"use strict";r();Be()});var m,h=i(()=>{"use strict";r();M();m=(0,g.default)("currents")});r();var vo=require("source-map-support/register"),He=require("commander"),Xe=a(require("fs"));r();r();h();r();f();r();r();var qe=require("commander");function Ge(e){return e==="remote"?"remote":e==="full"?"full":!!e}function V(e){if(!e)return;if(e==="false")return!1;let t=parseInt(e,10);if(isNaN(t)||t<1)throw new qe.CommanderError(255,"Invalid argument provided.","--pwc-cancel-after-failures must be a positive integer or 'false', provided: "+e);return t}var yt={debug:{name:"Debug",env:"CURRENTS_DEBUG",cli:"--pwc-debug"},ciBuildId:{name:"CI Build ID",env:"CURRENTS_CI_BUILD_ID",cli:"--ci-build-id"},recordKey:{name:"Record Key",env:"CURRENTS_RECORD_KEY",cli:"--key"},projectId:{name:"Project ID",env:"CURRENTS_PROJECT_ID",cli:"--project-id"},tag:{name:"Currents Tag",env:"CURRENTS_TAG",cli:"--tag"},cancelAfterFailures:{name:"Currents Cancel After Failures",env:"CURRENTS_CANCEL_AFTER_FAILURES",cli:"--pwc-cancel-after-failures"},disableTitleTags:{name:"Disable Title Tags",env:"CURRENTS_DISABLE_TITLE_TAGS",cli:"--pwc-disable-title-tags"},testSuiteFile:{name:"Test Suite File",env:"CURRENTS_TEST_SUITE_FILE",cli:"--pwc-test-suite-file"}};function b(e){return yt[e].env}r();var ht=a(require("fs"));h();function Ke(e){return{ciBuildId:e.ciBuildId,projectId:e.projectId,recordKey:e.key,tag:e.tag,enableTestResults:e.pwcEnableTestResults,removeTitleTags:e.pwcRemoveTitleTags,cancelAfterFailures:e.pwcCancelAfterFailures,disableTitleTags:e.pwcDisableTitleTags,debug:e.pwcDebug,testSuiteFile:e.pwcTestSuiteFile}}h();P();f();M();r();var l=require("@commander-js/extra-typings"),Me=a(require("chalk"));F();f();var Ve=(e=new l.Command)=>e.name("pwc").usage("[options] [playwright arguments and flags]").allowUnknownOption().showHelpAfterError("(add --help for additional information)").description(`\u{1F3AD} Run Playwright tests on CI using https://currents.dev

----------------------------------------------------
\u{1F4D6} Documentation: https://currents.dev/readme
\u{1F919} Support:       support@currents.dev
----------------------------------------------------

${Me.default.bold("Examples")}

Run all tests in the current directory:
    ${d("pwc --key <record-key> --project-id <id> --ci-build-id <build-id>")}

Run only tests filtered by the tag "@smoke":
    ${d("pwc --key <record-key> --project-id <id> --ci-build-id <build-id> --grep smoke")}

Run playwright tests and add tags "tagA", "tagB" to the recorded run:
    ${d("pwc --key <record-key> --project-id <id> --ci-build-id <build-id> --tag tagA --tag tagB")}

Provide playwright arguments and flags:
    ${d("pwc --key <record-key> --project-id <id> --ci-build-id <build-id> -- --workers 2 --timeout 10000 --shard 1/2")}
`).addOption(new l.Option("--ci-build-id <id>","the unique identifier for a run").env(b("ciBuildId"))).addOption(new l.Option("-k, --key <record-key>","your secret Record Key obtained from Currents").env(b("recordKey"))).addOption(new l.Option("-p, --project-id <project>","the project ID for results reporting obtained from Currents").env(b("projectId"))).addOption(new l.Option("-t, --tag <tag>","comma-separated tag(s) for recorded runs in Currents").argParser(wt)).addOption(new l.Option("--pwc-enable-test-results","enable reporting test-level results").default(!1).hideHelp()).addOption(new l.Option("--pwc-remove-title-tags","remove tags from test names in Currents, e.g. `Test name @smoke` becomes `Test name` in the dashboard").default(!1)).addOption(new l.Option("--pwc-disable-title-tags","disable parsing tags from test title, e.g. `Test name @smoke` would not be tagged with `smoke` in the dashboard").default(!1)).addOption(new l.Option("--pwc-cancel-after-failures <number | false>","abort the cloud run after the specified number of failed tests detected. Overrides the default Currents Project settings. If set, must be a positive integer or 'false' to disable automatic cancellations").env(b("cancelAfterFailures")).argParser(V)).addOption(new l.Option("--pwc-test-suite-file <path>","path to the test suite file to upload to Currents").env(b("testSuiteFile")).hideHelp()).addOption(new l.Option("--pwc-debug [boolean | 'remote' | 'full']","enable debug logs for the reporter. Specify 'remote' to upload logs to Currents. Specify 'full' to dump the debug logs to stdout and upload to Currents.").argParser(Ge).env(b("debug")).default(!1)).addOption(new l.Option("--pwc-inspect","enable inspect mode, run playwright with --inspect-brk flag or developments and debugging").default(!1)).version(U);function wt(e,t=[]){return e?t.concat(e.split(",").map(o=>o.trim())):t}r();var We=require("tmp-promise"),ze=async()=>{let{path:e}=await(0,We.file)();return e};var v=m.extend("cli");require("dotenv").config();async function xt(){let e=Ve().parse(),t=e.opts();t.pwcDebug&&Oe({source:"cli",mode:t.pwcDebug}),v("CLI options: %o",t);let o=Ke(t);v("Parsed config from CLI options: %o",o);let p=await ze();Xe.default.writeFileSync(p,JSON.stringify(o)),v("CLI options temp file path: %s",p);let{execa:s}=await import("execa"),S=await s("playwright",["test","--reporter","@currents/playwright",...e.args],{stdio:"inherit",reject:!1,env:{...process.env,CURRENTS_PWC_CONFIG_PATH:p,NODE_OPTIONS:t.pwcInspect?"--inspect-brk=9440":""}});try{await $e({runId:R()})}catch{}return S}xt().then(e=>{v("execa result: %o",e),process.exit(e.exitCode??0)}).catch(e=>{e instanceof He.CommanderError&&(y(e.message),process.exit(e.exitCode)),v("execa failed: %o",e),process.exit(1)});
/*! For license information please see index.js.LEGAL.txt */
//# sourceMappingURL=index.js.map