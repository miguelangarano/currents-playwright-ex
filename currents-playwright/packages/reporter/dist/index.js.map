{"version":3,"sources":["../../../node_modules/tsup/assets/cjs_shims.js","../src/lib/nano.ts","../src/logger/logDrain.ts","../src/logger/logger.ts","../src/logger/index.ts","../src/upload/send.ts","../package.json","../src/env/versions.ts","../src/lib/pubsub.ts","../src/lib/cancellation/cancellation.ts","../src/lib/cancellation/index.ts","../src/http/httpConfig.ts","../src/http/printErrors.ts","../src/http/http.ts","../src/http/index.ts","../src/remote-debug/api.ts","../src/upload/index.ts","../src/remote-debug/remote-debug.ts","../src/remote-debug/index.ts","../src/debug/index.ts","../src/index.ts","../src/reporters/index.ts","../src/reporters/default.ts","../src/config/config.ts","../src/lib/error.ts","../src/config/env.ts","../src/config/parser.ts","../src/config/options.ts","../src/results/index.ts","../src/results/results.ts","../src/instances/index.ts","../src/instances/api.ts","../src/lib/lang.ts","../src/results/raw.ts","../src/results/screenshots.ts","../src/lib/uid.ts","../src/results/tests.ts","../src/lib/testCase.ts","../src/lib/relativeFileLocation.ts","../src/results/stats.ts","../src/results/testCaseStatus.ts","../src/results/testCase.ts","../src/results/testCaseError.ts","../src/lib/stripAnsiEscapes.ts","../src/results/traces.ts","../src/results/upload.ts","../src/results/videos.ts","../src/results/types.ts","../src/testActor.ts","../src/epilogue/formatEpilogue.ts","../src/epilogue/formatResultFailure.ts","../src/executionState.ts","../src/results/api.ts","../src/runs/index.ts","../src/runs/runs.ts","../src/env/ciProvider.ts","../src/config/index.ts","../src/env/gitInfo.ts","../src/env/platform.ts","../src/runs/api.ts","../src/scanner/index.ts","../../scanner/src/index.ts","../../parser/src/index.ts","../../parser/src/parser.ts","../src/scanner/test-suite.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","import { customAlphabet } from \"nanoid\";\n\nexport const getRandomString = customAlphabet(\"abcdefghijklmnopqrstuvwxyz\", 10);\n","let logDrain: string[] = [];\n\nexport function getLogDrain() {\n  return logDrain;\n}\n\nexport function addToLogDrain(str: string) {\n  logDrain.push(str);\n}\n","import chalk from \"chalk\";\nimport util from \"util\";\n\n// import { debug } from \"../debug\";\nimport { debug } from \"../debug\";\nimport { addToLogDrain } from \"./logDrain\";\n\nconst log = (...args: unknown[]) => {\n  const stringToRender = util.format(...args);\n  addToLogDrain(stringToRender);\n  console.log(stringToRender);\n};\n\nexport const info = log;\n\nexport const warn = (...args: unknown[]) => {\n  debug(\"WARNING: \", util.format(...args));\n  return log(chalk.bgYellow.black(\" WARNING \"), util.format(...args));\n};\n\nexport const success = (...args: unknown[]) =>\n  log(chalk.green.bold(util.format(...args)));\n\nexport const error = (...args: unknown[]) =>\n  log(chalk.bgRed.white(\" ERROR \"), util.format(...args));\n\n// type Color = \"red\" | \"green\" | \"yellow\" | \"blue\" | \"magenta\" | \"cyan\" | \"white\";\nexport const title = (...args: unknown[]) =>\n  info(chalk.blue.bold(util.format(...args)));\n\nexport const divider = () =>\n  console.log(\"\\n\" + chalk.dim(Array(48).fill(\"=\").join(\"\")) + \"\\n\");\n\nexport const spacer = (n: number = 2) =>\n  console.log(Array(n).fill(\"\").join(\"\\n\"));\n\nexport const cyan = chalk.cyan;\nexport const blue = chalk.blueBright;\nexport const red = chalk.red;\nexport const green = chalk.green;\nexport const gray = chalk.gray;\nexport const white = chalk.white;\nexport const magenta = chalk.magenta;\nexport const dim = chalk.dim;\n","export * from \"./logDrain\";\nexport * from \"./logger\";\n","import retry from \"async-retry\";\nimport axios, { RawAxiosRequestConfig } from \"axios\";\nimport fs from \"fs/promises\";\nimport { debug as _debug } from \"../debug\";\nimport { error as logError, warn } from \"../logger\";\nimport { BufferUpload, PathUpload } from \"../results/upload\";\n\nconst debug = _debug.extend(\"upload\");\n\nexport enum ContentType {\n  PNG = \"image/png\",\n  WEBM = \"video/webm\",\n  TEXT = \"text/plain\",\n  ZIP = \"application/zip\",\n}\n\nexport function uploadText(file: string, url: string) {\n  return sendPath(\n    {\n      path: file,\n      name: null,\n      uploadUrl: url,\n      contentType: ContentType.TEXT,\n    },\n    ContentType.TEXT,\n    undefined\n  );\n}\n\nexport async function sendPath(\n  upload: PathUpload,\n  contentType: ContentType,\n  onUploadProgress: RawAxiosRequestConfig[\"onUploadProgress\"]\n) {\n  const buffer = await fs.readFile(upload.path);\n  debug(\"Uploading file %s\", upload.uploadUrl, {\n    buffer: Buffer.byteLength(buffer),\n  });\n  return send(buffer, upload.uploadUrl, contentType, onUploadProgress);\n}\n\nexport async function sendBuffer(\n  upload: BufferUpload,\n  contentType: ContentType,\n  onUploadProgress: RawAxiosRequestConfig[\"onUploadProgress\"]\n) {\n  debug(\"Uploading buffer %s\", upload.name, {\n    buffer: Buffer.byteLength(upload.buffer),\n  });\n  return send(upload.buffer, upload.uploadUrl, contentType, onUploadProgress);\n}\n\nasync function _send(\n  buffer: Buffer,\n  url: string,\n  contentType: ContentType,\n  onUploadProgress: RawAxiosRequestConfig[\"onUploadProgress\"]\n) {\n  return axios({\n    method: \"put\",\n    url,\n    data: buffer,\n    onUploadProgress,\n    headers: {\n      \"Content-Disposition\": `inline`,\n      \"Content-Type\": contentType,\n    },\n  });\n}\n\nasync function send(...args: Parameters<typeof _send>) {\n  await retry(\n    async () => {\n      await _send(...args);\n    },\n    {\n      retries: 5,\n      onRetry: (error: Error, retryCount: number) => {\n        if (retryCount === 5) {\n          logError(`Cannot upload after ${retryCount} times: ${error.message}`);\n          return;\n        }\n        warn(`Upload failed ${retryCount} out of 5 attempts: ${error.message}`);\n      },\n    }\n  );\n}\n","{\n  \"name\": \"@currents/playwright\",\n  \"version\": \"0.11.5\",\n  \"main\": \"./dist/index.js\",\n  \"author\": \"Currents Software Inc\",\n  \"license\": \"GPL-3.0-or-later\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"rm\": \"rimraf dist\",\n    \"lint\": \"TIMING=1 eslint \\\"**/*.ts*\\\"\",\n    \"build\": \"tsup-node --minify --dts\",\n    \"dev\": \"tsup-node --watch --dts\",\n    \"release\": \"release-it \",\n    \"publish:npm\": \"npm run rm  && npm run build && ./publish.js\",\n    \"release-ci\": \"npm run rm && npm run build && ./publish.js -t latest\"\n  },\n  \"bin\": {\n    \"pwc\": \"./dist/bin/index.js\"\n  },\n  \"devDependencies\": {\n    \"@playwright/test\": \"1.40.0\",\n    \"@release-it/conventional-changelog\": \"^7.0.2\",\n    \"@swc/jest\": \"^0.2.24\",\n    \"@types/async-retry\": \"^1.4.5\",\n    \"@types/babel__code-frame\": \"^7.0.3\",\n    \"@types/debug\": \"^4.1.11\",\n    \"@types/getos\": \"^3.0.1\",\n    \"@types/jest\": \"^29.5.3\",\n    \"@types/json-stringify-safe\": \"^5.0.0\",\n    \"@types/lodash\": \"^4.14.191\",\n    \"@types/pluralize\": \"^0.0.33\",\n    \"@types/randomstring\": \"^1.1.8\",\n    \"@types/shelljs\": \"^0.8.11\",\n    \"@types/stack-utils\": \"^2.0.1\",\n    \"eslint\": \"^7.32.0\",\n    \"eslint-config-custom\": \"*\",\n    \"jest\": \"^29.5.0\",\n    \"msw\": \"^1.2.3\",\n    \"release-it\": \"^16.2.1\",\n    \"rimraf\": \"^4.1.1\",\n    \"tsconfig\": \"*\",\n    \"tsup\": \"^6.5.0\",\n    \"typescript\": \"^4.5.2\",\n    \"wtfnode\": \"^0.9.1\"\n  },\n  \"dependencies\": {\n    \"@babel/code-frame\": \"^7.18.6\",\n    \"@commander-js/extra-typings\": \"^11.1.0\",\n    \"@currents/commit-info\": \"file:./@currents/commit-info\",\n    \"@currents/pwc-parser\": \"*\",\n    \"@currents/pwc-scanner\": \"*\",\n    \"async-retry\": \"^1.3.3\",\n    \"axios\": \"^1.2.0\",\n    \"axios-retry\": \"^3.4.0\",\n    \"chalk\": \"^4.1.2\",\n    \"colors\": \"^1.4.0\",\n    \"commander\": \"^11.1.0\",\n    \"date-fns\": \"^2.29.3\",\n    \"debug\": \"^4.3.4\",\n    \"dotenv\": \"^16.0.3\",\n    \"execa\": \"^7.2.0\",\n    \"getos\": \"^3.2.1\",\n    \"image-size\": \"^1.0.2\",\n    \"json-stringify-safe\": \"^5.0.1\",\n    \"lodash\": \"^4.17.21\",\n    \"nanoid\": \"^3.3.4\",\n    \"p-all\": \"^3.0.0\",\n    \"pino\": \"^8.11.0\",\n    \"pluralize\": \"^8.0.0\",\n    \"pretty-ms\": \"^7.0.1\",\n    \"randomstring\": \"^1.2.3\",\n    \"source-map-support\": \"^0.5.21\",\n    \"stack-utils\": \"^2.0.6\",\n    \"tmp-promise\": \"^3.0.3\",\n    \"ts-pattern\": \"^4.3.0\"\n  },\n  \"files\": [\n    \"dist\",\n    \"!**/*.map\",\n    \"!**/*/*.map\",\n    \"**/*.LEGAL.txt\",\n    \"LICENSE.md\",\n    \"README.md\",\n    \"CHANGELOG.md\"\n  ],\n  \"keywords\": [\n    \"playwright\",\n    \"playwright dashboard\",\n    \"cloud dashboard\",\n    \"reporter\",\n    \"currents\",\n    \"tests reporter\",\n    \"sorry cypress\",\n    \"ci\"\n  ],\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/index.js\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./parallel\": {\n      \"import\": \"./dist/parallel/index.js\",\n      \"require\": \"./dist/parallel/index.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"registry\": \"https://registry.npmjs.org\"\n  },\n  \"release-it\": {\n    \"npm\": {\n      \"publish\": false\n    },\n    \"github\": {\n      \"release\": true\n    },\n    \"plugins\": {\n      \"@release-it/conventional-changelog\": {\n        \"preset\": \"angular\",\n        \"header\": \"# Changelog\",\n        \"ignoreVersion\": true,\n        \"infile\": \"../../CHANGELOG.md\"\n      }\n    },\n    \"git\": {\n      \"commitMessage\": \"chore: release v${version}\",\n      \"tagName\": \"v${version}\"\n    }\n  }\n}\n","import pkg from \"../../package.json\";\n\nexport const pwcVersion = pkg.version;\n","import EventEmitter from \"events\";\nimport * as logger from \"../logger\";\nimport { getCancellationReason } from \"./cancellation\";\n\nexport enum Event {\n  RUN_CANCELLED = \"runCancelled\",\n}\nexport const pubsub = new EventEmitter();\n\nexport function addEventListeners() {\n  pubsub.addListener(Event.RUN_CANCELLED, onRunCancelled);\n}\n\nexport function removeEventListeners() {\n  pubsub.removeListener(Event.RUN_CANCELLED, onRunCancelled);\n}\n\nfunction onRunCancelled() {\n  logger.debug(\"Run cancelled: %s\", getCancellationReason());\n  process.exit(1);\n}\n","import { warn } from \"../../logger\";\nimport { Event, pubsub } from \"../pubsub\";\n\ninterface ExecutionState {\n  cancellationReason: string | null;\n}\nconst state: ExecutionState = {\n  cancellationReason: null,\n};\n\nexport const setCancellationReason = (reason: string) => {\n  if (state.cancellationReason) {\n    return;\n  }\n  state.cancellationReason = reason;\n};\n\nexport const getCancellationReason = () => state.cancellationReason;\n\nexport const maybeCancelRun = ({\n  showWarning = true,\n}: {\n  showWarning?: boolean;\n} = {}) => {\n  const cancellationReason = getCancellationReason();\n  if (cancellationReason) {\n    showWarning && warn(\"%s\", cancellationReason);\n    pubsub.emit(Event.RUN_CANCELLED, cancellationReason);\n  }\n};\n","export * from \"./cancellation\";\n","import { AxiosError, isAxiosError } from \"axios\";\n\nexport const isRetriableError = (err: AxiosError): boolean => {\n  if (!isAxiosError(err)) {\n    return false;\n  }\n  if (err.code === \"ECONNREFUSED\") {\n    return true;\n  }\n  return !!(\n    err?.response?.status &&\n    500 <= err.response.status &&\n    err.response.status < 600\n  );\n};\n\nexport const getDelay = (i: number) => [15 * 1000, 30 * 1000, 60 * 1000][i - 1];\n\nexport const getAPIBaseUrl = () =>\n  process.env.CURRENTS_API_URL ?? \"https://cy.currents.dev\";\n","import { AxiosError } from \"axios\";\nimport _ from \"lodash\";\nimport { P, match } from \"ts-pattern\";\nimport { error, spacer, warn } from \"../logger\";\n\nexport function maybePrintErrors(err: AxiosError) {\n  if (!err.response?.data || !err.response?.status) {\n    return;\n  }\n\n  match(err.response)\n    .with({ status: 401 }, () => {\n      warn(\"[currents] received 401 Unauthorized Request from cloud service\");\n    })\n    .with(\n      {\n        status: 422,\n      },\n      (response) => {\n        match(response.data)\n          .with({ message: P.string, errors: P.array(P.string) }, (data) => {\n            const { message, errors } = data;\n            spacer(1);\n            warn(...formatGenericError(message, errors));\n            spacer(1);\n          })\n          .otherwise(() => {\n            warn(\n              \"[currents] received 422 Unprocessable Entity from cloud service\"\n            );\n          });\n      }\n    )\n    .otherwise(() => {\n      error(\"Unexpected error from the cloud service: %s\\n%O\", err.toJSON());\n    });\n}\n\nexport function formatGenericError(\n  message?: string,\n  errors?: string[]\n): string[] {\n  if (!_.isString(message)) {\n    return [\"Unexpected error from the cloud service\"];\n  }\n\n  if (errors?.length === 0) {\n    return [message as string];\n  }\n  return [\n    message as string,\n    `\n${(errors ?? []).map((e) => `  - ${e}`).join(\"\\n\")}\n`,\n  ];\n}\n","import axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n  isAxiosError,\n} from \"axios\";\nimport axiosRetry from \"axios-retry\";\nimport _ from \"lodash\";\nimport prettyMilliseconds from \"pretty-ms\";\nimport { P, match } from \"ts-pattern\";\nimport { debug as _debug } from \"../debug\";\nimport { pwcVersion } from \"../env/versions\";\nimport { maybeCancelRun, setCancellationReason } from \"../lib/cancellation\";\nimport { warn } from \"../logger\";\nimport { getAPIBaseUrl, getDelay, isRetriableError } from \"./httpConfig\";\nimport { maybePrintErrors } from \"./printErrors\";\n\nconst debug = _debug.extend(\"api\");\n\nconst headers = {\n  \"x-pw-version\": \"0.0.0\",\n  \"x-pwc-version\": pwcVersion,\n};\n\nexport function setPWVersion(version: string) {\n  headers[\"x-pw-version\"] = version ?? \"0.0.0\";\n}\n\nconst MAX_RETRIES = 3;\n\nlet _client: AxiosInstance | null = null;\n\nexport function getClient() {\n  if (_client) {\n    return _client;\n  }\n  _client = axios.create({\n    baseURL: getAPIBaseUrl(),\n  });\n\n  _client.interceptors.request.use((config) => {\n    config.headers.set({\n      ...headers,\n      // @ts-ignore\n      \"x-pwc-request-attempt\": config[\"axios-retry\"]?.retryCount ?? 0,\n    });\n    config.headers.set();\n\n    if (!config.headers.get(\"Content-Type\")) {\n      config.headers.set(\"Content-Type\", \"application/json\");\n    }\n\n    const args = {\n      ..._.pick(config, \"method\", \"url\", \"headers\"),\n      data: Buffer.isBuffer(config.data) ? \"buffer\" : config.data,\n    };\n\n    debug(\"network request: %o\", getNetworkRequestDebugData(args));\n    return config;\n  });\n\n  axiosRetry(_client, {\n    retries: MAX_RETRIES,\n    retryCondition: isRetriableError,\n    retryDelay: getDelay,\n    // @ts-ignore\n    onRetry,\n  });\n  return _client;\n}\n\nfunction getNetworkRequestDebugData(data: { headers: Record<string, string> }) {\n  return {\n    ...data,\n    headers: {\n      ...data.headers,\n      [\"x-currents-key\"]: \"***\",\n    },\n  };\n}\nfunction onRetry(\n  retryCount: number,\n  err: AxiosError<{ message: string; errors?: string[] }>,\n  _config: AxiosRequestConfig\n) {\n  warn(\n    \"Network request '%s' failed: '%s'. Next attempt is in %s (%d/%d).\",\n    `${_config.method?.toUpperCase()} ${_config.url}`,\n    err.message,\n    prettyMilliseconds(getDelay(retryCount)),\n    retryCount,\n    MAX_RETRIES\n  );\n}\n\nexport const makeRequest = <Response = any, Request = any>(\n  config: Omit<AxiosRequestConfig<Request>, \"headers\">\n) => {\n  return getClient()<Request, AxiosResponse<Response>>(config)\n    .then((res) => {\n      debug(\"network response: %o\", {\n        ..._.omit(res, \"request\", \"config\"),\n        url: res.config.url,\n        method: res.config.method,\n      });\n      return res;\n    })\n    .catch((error) => {\n      debugger;\n      match(error)\n        .when(isAxiosError, (err) => {\n          maybePrintErrors(err);\n          handleAxiosError(err);\n        })\n        .otherwise((err) => {\n          throw err;\n        });\n    });\n};\n\nconst ErrorCodes = {\n  RUN_CANCELLED: \"RUN_CANCELLED\",\n  RUN_EXPIRED: \"RUN_EXPIRED\",\n} as const;\n\nfunction handleAxiosError(error: AxiosError) {\n  match(error.response?.data)\n    .with({ code: ErrorCodes.RUN_CANCELLED, message: P.string }, (err) => {\n      setCancellationReason(err.message);\n      maybeCancelRun({ showWarning: false });\n    })\n    .with({ code: ErrorCodes.RUN_EXPIRED, message: P.string }, () => {\n      warn(\n        \"This execution will not be recorded because the cloud run is expired.\"\n      );\n    })\n    .otherwise((err) => {\n      throw err;\n    });\n}\n","export * from \"../upload/send\";\nexport * from \"./http\";\n","import { makeRequest } from \"../http\";\n\nexport const getDebugUrl = ({\n  runId,\n  type,\n}: {\n  runId: string;\n  type: string;\n}) => {\n  return makeRequest<\n    { uploadUrl: string; readUrl: string },\n    { runId: string; type: string }\n  >({\n    // comment for local\n    method: \"POST\",\n    url: `runs/debug-logs`,\n    data: {\n      type,\n      runId,\n    },\n  }).then((result) => result.data);\n};\n","export * from \"./send\";\n","import { bgYellow } from \"colors/safe\";\nimport Debug from \"debug\";\nimport fs from \"fs\";\nimport os from \"os\";\nimport path from \"path\";\nimport utils from \"util\";\nimport { getRandomString } from \"../lib/nano\";\nimport { dim, info, warn, white } from \"../logger\";\n\nconst original = Debug.log;\n\nconst debug = Debug(\"currents:remote-debug\");\n\nconst pipelines: Record<\n  string,\n  {\n    type: \"cli\" | \"core\";\n    id: string;\n    writeStream: fs.WriteStream;\n    tempFilePath: string;\n  }\n> = {};\n\nfunction shouldEnableRemoteDebug(mode: boolean | \"remote\" | \"full\") {\n  if (mode === \"full\" || mode === \"remote\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction shouldMuteLocalStdout(mode: boolean | \"remote\" | \"full\") {\n  if (mode === \"remote\") {\n    return true;\n  }\n\n  return false;\n}\n\nexport function initDebug(\n  params: {\n    source: \"cli\" | \"core\";\n    mode: boolean | \"remote\" | \"full\";\n  } = {\n    source: \"core\",\n    mode: \"remote\",\n  }\n) {\n  if (params.mode !== false) {\n    const debugPattern = process.env.DEBUG\n      ? `${process.env.DEBUG},currents*`\n      : \"currents*\";\n    Debug.enable(debugPattern);\n  }\n  if (!shouldEnableRemoteDebug(params.mode)) {\n    return;\n  }\n  const id = getRandomString();\n  const tempFilePath = path.resolve(os.tmpdir(), `currents-debug_${id}.log`);\n  info(\n    white(\n      bgYellow(`👾 Initiated remote ${params.source} debug log collection:`)\n    ),\n    dim(tempFilePath)\n  );\n\n  const writeStream = fs.createWriteStream(tempFilePath, { flags: \"a\" });\n\n  Debug.log = (...args) => {\n    writeStream.write(`${utils.format(...args)}\\n`);\n    if (!shouldMuteLocalStdout(params.mode)) {\n      original(...args);\n    }\n  };\n\n  pipelines[id] = {\n    id,\n    writeStream,\n    type: params.source,\n    tempFilePath,\n  };\n\n  return id;\n}\n\nexport async function finalizeDebug({ runId }: { runId?: string }) {\n  try {\n    const ids = Object.keys(pipelines);\n\n    if (ids.length === 0) {\n      debug(`No debug pipelines found`);\n      Debug.log = original;\n    }\n\n    for (const id of ids) {\n      await uploadDebug(id, runId ?? getRandomString());\n    }\n  } finally {\n    Debug.log = original;\n  }\n}\n\nasync function uploadDebug(id: string, runId: string) {\n  const pipeline = pipelines[id];\n\n  if (!pipeline) {\n    debug(`No debug pipeline found for id %s`, id);\n    return;\n  }\n\n  info(\n    white(bgYellow(`👾 ${pipeline.type} debug log written:`)),\n    dim(pipeline?.tempFilePath)\n  );\n\n  const { getDebugUrl } = await import(\"./api\");\n  try {\n    const { readUrl, uploadUrl } = await getDebugUrl({\n      runId,\n      type: \"pw-debug\",\n    });\n    const { uploadText } = await import(\"../upload\");\n    await uploadText(pipeline.tempFilePath, uploadUrl);\n    pipeline?.writeStream.end();\n    info(\n      white(bgYellow(`👾 ${pipeline.type} debug log uploaded:`)),\n      dim(readUrl)\n    );\n  } catch (e) {\n    warn(\n      `Failed to upload ${pipeline.type}} debug log ${dim(\n        pipeline.tempFilePath\n      )}: ${(e as Error).message}`\n    );\n  }\n}\n\nexport { Debug };\n","export * from \"./remote-debug\";\n","import { Debug } from \"../remote-debug\";\n\nexport const debug = Debug(\"currents\");\n","import \"source-map-support/register\";\n\nimport { CurrentsConfig } from \"./config/config\";\nimport { DefaultReporter } from \"./reporters\";\n\nexport type { CurrentsConfig } from \"./config/config\";\n/**\n * Create {@link https://currents.dev/playwright | Currents Reporter} to be used with playwright test runner\n *\n * @augments CurrentsConfig\n * @param {CurrentsConfig} config - Currents Reporter {@link https://currents.dev/readme/integration-with-playwright/currents-playwright | configuration}\n * @returns {[\"@currents/playwright\", CurrentsConfig]} a tuple of reporter name and config\n */\nexport const currentsReporter = (config: CurrentsConfig) =>\n  [\"@currents/playwright\" as string, config] as [string, CurrentsConfig];\n\nexport default DefaultReporter;\n","export { DefaultReporter } from \"./default\";\n","import {\n  FullConfig,\n  Reporter,\n  Suite,\n  TestCase,\n  TestError,\n  TestResult,\n  TestStep,\n} from \"@playwright/test/reporter\";\nimport fs from \"fs\";\nimport { P, match } from \"ts-pattern\";\nimport {\n  CurrentsConfig,\n  getCurrentsConfig,\n  setCurrentsConfig,\n} from \"../config/config\";\nimport { debug as _debug } from \"../debug\";\nimport { setPWVersion } from \"../http\";\nimport { ValidationError } from \"../lib/error\";\nimport { addEventListeners, removeEventListeners } from \"../lib/pubsub\";\nimport * as logger from \"../logger\";\nimport { finalizeDebug, initDebug } from \"../remote-debug\";\nimport { uploadWarnings } from \"../results\";\nimport { TestActor } from \"../testActor\";\n\nconst debug = _debug.extend(\"default\");\nconst debugStep = _debug.extend(\"step\");\n\nexport class DefaultReporter implements Reporter {\n  private errors: TestError[] = [];\n  private _testActor: TestActor | null = null;\n\n  private get testActor() {\n    if (!this._testActor) {\n      throw new Error(\"@currents/playwright panic: Test actor not initialized\");\n    }\n\n    return this._testActor;\n  }\n  constructor(reporterOptions?: Partial<CurrentsConfig>) {\n    try {\n      setCurrentsConfig(reporterOptions);\n      initDebug({\n        source: \"core\",\n        mode: getCurrentsConfig()?.debug ?? false,\n      });\n    } catch (error) {\n      match(error)\n        .with(P.instanceOf(ValidationError), () => {\n          process.exit(1);\n        })\n        .otherwise((e) => {\n          logger.error(\"Unexpected error\", e);\n          throw new Error(\"Unexpected error\");\n        });\n    }\n  }\n\n  printsToStdio() {\n    return false;\n  }\n\n  onBegin(config: FullConfig, suite: Suite) {\n    debug(\n      \"Beginning tests execution: %o\",\n      suite.allTests().map((t) => t.titlePath())\n    );\n    setPWVersion(config.version);\n    addEventListeners();\n    this._testActor = new TestActor(suite, config);\n  }\n\n  onError(error: TestError): void {\n    logger.error(\"Global error reported by test runner: %o\", error);\n    this.errors.push(error);\n  }\n\n  onStepBegin(test: TestCase, result: TestResult, step: TestStep): void {\n    debugStep(\n      \"[step  in] %s :: %s\",\n      test.titlePath().filter(Boolean).join(\" > \"),\n      step.title\n    );\n    this.testActor.onStepEnd(test, result, step);\n  }\n\n  onStepEnd(test: TestCase, result: TestResult, step: TestStep): void {\n    debugStep(\n      \"[step out] %s :: %s [%dms] [%s]\",\n      test.titlePath().filter(Boolean).join(\" > \"),\n      step.title,\n      step.duration,\n      step.error?.message ?? \"ok\"\n    );\n    this.testActor.onStepEnd(test, result, step);\n  }\n\n  onTestBegin(test: TestCase) {\n    debug(\"Test begin: %s\", test.titlePath().filter(Boolean).join(\" > \"));\n    this.testActor.onTestBegin(test);\n  }\n\n  onTestEnd(test: TestCase, result: TestResult): void {\n    debug(\"Test end: %s\", test.titlePath().filter(Boolean).join(\" > \"));\n    this.testActor.onTestEnd(test, result);\n  }\n\n  // this is the only async callback\n  async onEnd() {\n    try {\n      logger.divider();\n\n      const allSpecs = this.testActor.executionState.getAllSpecExecutions();\n\n      if (!allSpecs.length) {\n        logger.warn(\"No tests detected, skipping upload\");\n        logger.divider();\n        return {\n          status: \"passed\" as const,\n        };\n      }\n\n      if (processErrors(this.errors).length > 0) {\n        logger.warn(\"Processing errors:\");\n        this.errors.forEach((e) => console.log(e.message));\n      }\n      if (this.testActor.warnings.length) {\n        logger.warn(\"Processing errors:\");\n        this.testActor.warnings.forEach((w) => console.log(...w));\n      }\n      if (uploadWarnings.size > 0) {\n        logger.warn(\"Upload warnings:\");\n        uploadWarnings.forEach((w) => console.log(w));\n      }\n\n      const runStatus = allSpecs.some((s) => s.isFailed())\n        ? (\"failed\" as const)\n        : (\"passed\" as const);\n\n      // report non-completed retries\n      this.testActor.reportSpecsWithNoResults();\n\n      logger.title(\"Uploading results to Currents.dev...\");\n\n      await this.testActor.awaitAllResults();\n\n      const runUrl = await this.testActor.getRunURL();\n      if (!runUrl) {\n        logger.title(\"Cloud Run Finished\");\n      } else {\n        logger.title(\"Cloud Run Finished: %s\", runUrl);\n        if (process.env.CURRENTS_RUN_URL_FILE) {\n          console.log(\n            \"Writing run url to file\",\n            process.env.CURRENTS_RUN_URL_FILE\n          );\n          fs.writeFileSync(process.env.CURRENTS_RUN_URL_FILE, runUrl);\n        }\n      }\n\n      logger.divider();\n\n      await finalizeDebug({ runId: await this.testActor.getRunId() });\n\n      if (process.env._CURRENTS_E2E_TESTS) {\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      }\n\n      return {\n        status: runStatus,\n      };\n    } catch (error) {\n      console.error(error);\n      return {\n        status: \"failed\" as const,\n      };\n    } finally {\n      removeEventListeners();\n    }\n  }\n}\n\nfunction processErrors(errors: TestError[]) {\n  return errors.map((e) => ({\n    spec: tryToFindSpecFile(e),\n    error: `${e.message}\\n ${e.stack}` || \"\",\n  }));\n}\n\nfunction tryToFindSpecFile(error: TestError): string {\n  if (!error.stack) {\n    return \"\";\n  }\n  const splitBySpace = error.stack.split(\" \");\n  const possibleFileNames = splitBySpace.filter(\n    (s) => s.includes(\".ts:\") || s.endsWith(\".js:\")\n  );\n  const fileName = possibleFileNames[0];\n  if (!fileName) {\n    return \"\";\n  }\n  return fileName.split(\"/\")?.pop()?.split(\":\")[0] ?? \"\";\n}\n","import { debug } from \"../debug\";\nimport { ValidationError } from \"../lib/error\";\nimport { dim, error } from \"../logger\";\n\nimport {\n  getCLIOptionName,\n  getConfigName,\n  getEnvVariables,\n  getEnvironmentVariableName,\n} from \"./env\";\nimport { getCLIOptions } from \"./options\";\n\nexport type CurrentsConfig = {\n  /**\n   * The id of the build to record the test run. Read more: https://currents.dev/readme/guides/ci-build-id\n   */\n  ciBuildId?: string;\n\n  /**\n   * The id of the project to record the test run.\n   */\n  projectId: string;\n\n  /**\n   * The record key to be used to record the results on the remote dashboard. Read more: https://currents.dev/readme/guides/record-key\n   */\n  recordKey: string;\n\n  /**\n   * A list of tags to be added to the test run.\n   */\n  tag?: string[];\n\n  /**\n   * experimental - enable reporting test-level results\n   */\n  enableTestResults?: boolean;\n\n  /**\n   * remove tags from test names, for example `Test name @smoke` becomes `Test name`\n   */\n  removeTitleTags?: boolean;\n\n  /**\n   * disable extracting tags from test title, e.g. `Test name @smoke` would not be tagged with `smoke`\n   */\n  disableTitleTags?: boolean;\n\n  /**\n   * Abort the run after the specified number of failed tests. Overrides the default Currents Project settings.\n   * If set, must be a positive integer or \"false\" to disable\n   */\n  cancelAfterFailures?: number | false;\n\n  /**\n   * Path to the test suite file to upload to Currents.\n   */\n  testSuiteFile?: string;\n\n  /**\n   * Enable debug logs for the reporter. Optionally, specify \"silent\" to disable console output\n   */\n  debug?: boolean | \"full\" | \"remote\";\n};\n\ntype MandatoryCurrentsConfigKeys = \"ciBuildId\" | \"projectId\" | \"recordKey\";\n\nconst mandatoryConfigKeys: MandatoryCurrentsConfigKeys[] = [\n  \"projectId\",\n  \"recordKey\",\n];\n\nlet _config: CurrentsConfig | null = null;\n\n/**\n * Precendence: env > cli > reporter config\n * @param reporterOptions reporter config\n */\nexport function setCurrentsConfig(reporterOptions?: Partial<CurrentsConfig>) {\n  const result = {\n    ...removeUndefined(reporterOptions),\n    ...removeUndefined(getCLIOptions()),\n    ...removeUndefined(getEnvVariables()),\n  };\n\n  mandatoryConfigKeys.forEach((i) => {\n    if (!result[i]) {\n      error(\n        `${getConfigName(\n          i\n        )} is required for Currents Reporter. Use the following methods to set Currents Project ID:\n- as environment variable: ${dim(getEnvironmentVariableName(i))}\n- as CLI flag of pwc command: ${dim(getCLIOptionName(i))}\n- as reporter configuration option ${dim(i)} in ${dim(\"playwright.config.ts\")}\n\n📖 https://currents.dev/readme/integration-with-playwright/currents-playwright`\n      );\n      throw new ValidationError(\"Missing required config variable\");\n    }\n  });\n\n  _config = result as CurrentsConfig;\n  debug(\"Resolved Currents config: %o\", _config);\n}\n\nfunction removeUndefined<T extends {}>(obj?: T): T {\n  return Object.entries(obj ?? {}).reduce((acc, [key, value]) => {\n    if (value === undefined) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {} as T);\n}\n\nexport function getCurrentsConfig() {\n  return _config;\n}\n","export class ValidationError extends Error {}\n","import { CurrentsConfig } from \"./config\";\nimport { parseAutoCancelFailures } from \"./parser\";\n\nexport const configKey = {\n  debug: {\n    name: \"Debug\",\n    env: \"CURRENTS_DEBUG\",\n    cli: \"--pwc-debug\",\n  },\n  ciBuildId: {\n    name: \"CI Build ID\",\n    env: \"CURRENTS_CI_BUILD_ID\",\n    cli: \"--ci-build-id\",\n  },\n  recordKey: {\n    name: \"Record Key\",\n    env: \"CURRENTS_RECORD_KEY\",\n    cli: \"--key\",\n  },\n  projectId: {\n    name: \"Project ID\",\n    env: \"CURRENTS_PROJECT_ID\",\n    cli: \"--project-id\",\n  },\n  tag: {\n    name: \"Currents Tag\",\n    env: \"CURRENTS_TAG\",\n    cli: \"--tag\",\n  },\n  cancelAfterFailures: {\n    name: \"Currents Cancel After Failures\",\n    env: \"CURRENTS_CANCEL_AFTER_FAILURES\",\n    cli: \"--pwc-cancel-after-failures\",\n  },\n  disableTitleTags: {\n    name: \"Disable Title Tags\",\n    env: \"CURRENTS_DISABLE_TITLE_TAGS\",\n    cli: \"--pwc-disable-title-tags\",\n  },\n  testSuiteFile: {\n    name: \"Test Suite File\",\n    env: \"CURRENTS_TEST_SUITE_FILE\",\n    cli: \"--pwc-test-suite-file\",\n  },\n} as const;\n\nexport function getEnvironmentVariableName(variable: keyof typeof configKey) {\n  return configKey[variable].env;\n}\n\nexport function getCLIOptionName(variable: keyof typeof configKey) {\n  return configKey[variable].cli;\n}\nexport function getConfigName(variable: keyof typeof configKey) {\n  return configKey[variable].name;\n}\n\n/**\n * Converts Environment variables to Currents config.\n * Not all keys are supposed to exist - it is only used for allowing overriding pw.config JS object, the actual config should be parsed and validated after merging.\n * @returns\n */\nexport function getEnvVariables(): Partial<\n  Record<keyof CurrentsConfig, string | string[] | boolean | number | undefined>\n> {\n  return {\n    projectId: process.env[configKey.projectId.env],\n    recordKey: process.env[configKey.recordKey.env],\n    ciBuildId: process.env[configKey.ciBuildId.env],\n    tag: process.env[configKey.tag.env]\n      ? process.env[configKey.tag.env]?.split(\",\").map((i) => i.trim())\n      : undefined,\n    cancelAfterFailures: parseAutoCancelFailures(\n      process.env[configKey.cancelAfterFailures.env]\n    ),\n    disableTitleTags: process.env[configKey.disableTitleTags.env],\n    debug: process.env[configKey.debug.env],\n    testSuiteFile: process.env[configKey.testSuiteFile.env],\n  };\n}\n","import { CommanderError } from \"commander\";\n\nexport function parseDebug(\n  value: string | boolean\n): boolean | \"remote\" | \"full\" {\n  if (value === \"remote\") {\n    return \"remote\";\n  }\n\n  if (value === \"full\") {\n    return \"full\";\n  }\n\n  return !!value;\n}\n\nexport function parseAutoCancelFailures(\n  value?: string\n): undefined | number | false {\n  if (!value) {\n    return;\n  }\n\n  if (value === \"false\") {\n    return false;\n  }\n\n  const parsedValue = parseInt(value, 10);\n\n  if (isNaN(parsedValue) || parsedValue < 1) {\n    throw new CommanderError(\n      255,\n      \"Invalid argument provided.\",\n      \"--pwc-cancel-after-failures must be a positive integer or 'false', provided: \" +\n        value\n    );\n  }\n\n  return parsedValue;\n}\n","import { Command } from \"@commander-js/extra-typings\";\nimport fs from \"fs\";\nimport { getProgram } from \"../bin/program\";\nimport { debug } from \"../debug\";\n\nimport { CurrentsConfig } from \"./config\";\n\ntype ExtractSecondTags<T> = T extends Command<any, infer U> ? U : never;\ntype CLIOptions = ExtractSecondTags<ReturnType<typeof getProgram>>;\n\n/**\n * Converts CLI options to Currents config.\n * Mosty used for converting the keys.\n * @param cliOptions\n * @returns\n */\nexport function cliOptionsToConfig(\n  cliOptions: CLIOptions\n): Partial<CurrentsConfig> {\n  return {\n    ciBuildId: cliOptions.ciBuildId,\n    projectId: cliOptions.projectId,\n    recordKey: cliOptions.key,\n    tag: cliOptions.tag,\n    enableTestResults: cliOptions.pwcEnableTestResults,\n    removeTitleTags: cliOptions.pwcRemoveTitleTags,\n    cancelAfterFailures: cliOptions.pwcCancelAfterFailures,\n    disableTitleTags: cliOptions.pwcDisableTitleTags,\n    debug: cliOptions.pwcDebug,\n    testSuiteFile: cliOptions.pwcTestSuiteFile,\n  };\n}\n\nexport function getCLIOptions() {\n  if (process.env.CURRENTS_PWC_CONFIG_PATH) {\n    try {\n      const result: Partial<CurrentsConfig> = JSON.parse(\n        fs.readFileSync(process.env.CURRENTS_PWC_CONFIG_PATH).toString()\n      );\n      debug(\"CLI options from file: %o\", result);\n      return result;\n    } catch (error) {\n      return {};\n    }\n  }\n  return {};\n}\n","export * from \"./results\";\nexport { getTests } from \"./tests\";\nexport * from \"./types\";\nexport * from \"./upload\";\n","import stringify from \"json-stringify-safe\";\nimport { omit } from \"lodash\";\nimport { P, match } from \"ts-pattern\";\nimport { debug } from \"../debug\";\nimport {\n  UploadInstructionsResponsePayload,\n  sendInstanceResultsRequest,\n} from \"../instances\";\nimport { setCancellationReason } from \"../lib/cancellation\";\nimport { isNonNullable } from \"../lib/lang\";\nimport { ContentType } from \"../upload\";\nimport { getRawTestCase } from \"./raw\";\nimport { getScreenshots } from \"./screenshots\";\nimport { getReporterStatsFromStats, getStatsFromTests } from \"./stats\";\nimport { playwrightTestSuiteToTest } from \"./testCase\";\nimport { getTests } from \"./tests\";\nimport { getTraceFiles } from \"./traces\";\nimport {\n  InstanceResults,\n  ScreenshotWithBody,\n  ScreenshotWithPath,\n  TestCaseWithClientId,\n} from \"./types\";\nimport { Upload, getInstanceUploadTask } from \"./upload\";\nimport { getVideoAttachments, getVideoInformation } from \"./videos\";\nexport async function reportResults({\n  instanceId,\n  testCases,\n  stdout,\n}: {\n  instanceId: string;\n  testCases: TestCaseWithClientId[];\n  stdout: string;\n}) {\n  const instanceResults = getInstanceResults(testCases);\n\n  // get reduced payload, otherwise we get faulty responses from the server\n  const instanceResultsPayload = getInstanceResultsPayload(instanceResults);\n  debug(\n    \"Results for instance %s: %o\",\n    instanceId,\n    omit(instanceResultsPayload, \"raw\")\n  );\n  const { cloud, ...uploadInstructions } = await sendInstanceResultsRequest({\n    instanceId,\n    tests: getTests(testCases),\n    resultsBody: instanceResultsPayload,\n  });\n\n  if (cloud?.shouldCancel) {\n    debug(\"instance %s should cancel\", instanceId);\n    setCancellationReason(cloud.shouldCancel);\n  }\n\n  const uploads = [\n    ...getVideoUploads({\n      videos: instanceResults.videos,\n      videoAssets: uploadInstructions.videoAssets,\n    }),\n    ...getScreenshotUploads({\n      screenshots: instanceResults.screenshots,\n      screenshotUploadUrls: uploadInstructions.screenshotUploadUrls,\n    }),\n    ...getTraceUploads({\n      playwrightTraces: instanceResults.playwrightTraces,\n      playwrightTraceUrls: uploadInstructions.playwrightTraceUrls,\n    }),\n    {\n      name: \"stdout\",\n      buffer: Buffer.from(stdout.length ? stdout : getEmptyStdout(testCases)),\n      uploadUrl: uploadInstructions.stdoutUploadUrl,\n      contentType: ContentType.TEXT,\n    },\n  ];\n  return getInstanceUploadTask({\n    instanceId,\n    uploads: uploads.filter(isNonNullable),\n  });\n}\n\nfunction getInstanceResultsPayload(results: InstanceResults) {\n  // remove large data from the payload\n  return {\n    ...results,\n    videos: results.videos.map(redactBodyBuffer),\n    screenshots: results.screenshots.map(redactBodyBuffer),\n  };\n}\n\nfunction redactBodyBuffer<T extends { body?: Buffer; path?: string }>(s: T) {\n  if (!s.body) return s;\n  return {\n    ...s,\n    body: Buffer.from(\"redacted\"),\n  };\n}\n\nfunction getEmptyStdout(testCases: TestCaseWithClientId[]) {\n  return `No console output was generated during execution of the tests:\n${testCases\n  .map((testCase) => `- ${testCase.location.file}: ${testCase.title}`)\n  .join(\"\\n\")}`;\n}\n\nfunction getVideoUploads({\n  videos,\n  videoAssets,\n}: {\n  videos: InstanceResults[\"videos\"];\n  videoAssets: UploadInstructionsResponsePayload[\"videoAssets\"];\n}): Upload[] {\n  return videoAssets.map((videoAsset) => {\n    const localVideo = videos.find((v) => v.id === videoAsset.id);\n    return {\n      ...videoAsset,\n      name: localVideo?.name ?? videoAsset.name ?? null,\n      path: localVideo?.path ?? videoAsset.path ?? undefined,\n      body: localVideo?.body,\n      contentType: ContentType.WEBM,\n    };\n  });\n}\n\nfunction getScreenshotUploads({\n  screenshots,\n  screenshotUploadUrls,\n}: {\n  screenshots: Array<ScreenshotWithPath | ScreenshotWithBody>;\n  screenshotUploadUrls: UploadInstructionsResponsePayload[\"screenshotUploadUrls\"];\n}): Array<Upload> {\n  return screenshotUploadUrls\n    .map((s) => {\n      const found = screenshots.find(\n        (screenshot) => screenshot.screenshotId === s.screenshotId\n      );\n\n      if (!found) {\n        return undefined;\n      }\n\n      return match(found)\n        .with({ path: P.string }, (i) => ({\n          name: i.name,\n          path: i.path,\n          uploadUrl: s.uploadUrl,\n          contentType: ContentType.PNG,\n        }))\n        .with({ body: P.instanceOf(Buffer) }, (i) => ({\n          name: i.name,\n          buffer: i.body,\n          uploadUrl: s.uploadUrl,\n          contentType: ContentType.PNG,\n        }))\n        .exhaustive();\n    })\n    .filter(isNonNullable);\n}\n\nfunction getTraceUploads({\n  playwrightTraces,\n  playwrightTraceUrls = [],\n}: {\n  playwrightTraces: ReturnType<typeof getTraceFiles>;\n  playwrightTraceUrls: UploadInstructionsResponsePayload[\"playwrightTraceUrls\"];\n}): Array<Upload | undefined> {\n  return playwrightTraceUrls.map((pt) => {\n    const found = playwrightTraces.find(\n      (trace) => trace.traceId === pt.traceId\n    );\n    if (!found?.path) return undefined;\n\n    return {\n      name: found.name,\n      path: found.path,\n      uploadUrl: pt.uploadUrl,\n      contentType: ContentType.ZIP,\n    };\n  });\n}\nfunction getInstanceResults(\n  testCases: TestCaseWithClientId[]\n): InstanceResults {\n  const stats = getStatsFromTests(testCases);\n  const reporterStats = getReporterStatsFromStats(stats);\n  const videoInfo = getVideoInformation(testCases);\n  const videos = getVideoAttachments(testCases);\n  const screenshots = getScreenshots(testCases);\n  const playwrightTraces = getTraceFiles(testCases);\n\n  return {\n    stats,\n    reporterStats,\n    video: videoInfo.type === \"hasVideo\",\n    videos,\n    screenshots,\n    playwrightTraces,\n    exception: null,\n    tests: playwrightTestSuiteToTest(testCases),\n    raw: getRaw(testCases),\n  };\n}\n\nconst getRaw = (testCases: TestCaseWithClientId[]) =>\n  match(stringify(testCases.map(getRawTestCase)))\n    .when(\n      (s) => stringSizeInMB(s) < 5,\n      (s) => s\n    )\n    .otherwise(() => \"toobig\");\n\nfunction stringSizeInMB(s: string) {\n  const bytes = Buffer.byteLength(s, \"utf8\");\n  const megabytes = bytes / (1024 * 1024);\n  return megabytes;\n}\n","export * from \"./api\";\n","import { debug } from \"../debug\";\nimport { makeRequest } from \"../http\";\nimport { InstanceResults, WorkerInfo, getTests } from \"../results\";\nexport interface UploadInstructionsResponsePayload {\n  videoUploadUrl: string | null;\n  stdoutUploadUrl: string;\n  screenshotUploadUrls: {\n    readUrl: string;\n    uploadUrl: string;\n    screenshotId: string;\n  }[];\n  playwrightTraceUrls?: {\n    readUrl: string;\n    uploadUrl: string;\n    traceId: string;\n  }[];\n  videoAssets: {\n    name: string;\n    path: string;\n    uploadUrl: string;\n    id: string;\n  }[];\n}\n\nexport interface UpdateInstanceResultsResponse\n  extends UploadInstructionsResponsePayload {\n  cloud?: {\n    shouldCancel: false | string;\n  };\n}\n\nexport function sendInstanceResultsRequest({\n  instanceId,\n  tests,\n  resultsBody,\n}: {\n  resultsBody: InstanceResults;\n  tests: ReturnType<typeof getTests>;\n  instanceId: string;\n}) {\n  return makeRequest<UpdateInstanceResultsResponse, InstanceResults>({\n    method: \"POST\",\n    url: `instances/${instanceId}/pw/results`,\n    data: {\n      results: resultsBody,\n      tests,\n    },\n  }).then((r) => r.data);\n}\n\ntype InstancesFromRunParams = {\n  runId: string;\n  groupId: string;\n  machineId: string;\n  spec: string;\n  worker: WorkerInfo;\n};\nexport type CreateInstanceResponsePayload = {\n  instanceId: string;\n  claimedCount: number;\n};\nexport function sendCreateInstanceRequest({\n  runId,\n  groupId,\n  machineId,\n  worker,\n  spec,\n}: InstancesFromRunParams) {\n  debug(\"Creating instance: %o\", {\n    runId,\n    groupId,\n    machineId,\n    worker,\n    spec,\n  });\n  return makeRequest<CreateInstanceResponsePayload>({\n    method: \"POST\",\n    url: `runs/${runId}/pw/instances`,\n    data: {\n      spec,\n      runId,\n      groupId,\n      machineId,\n      worker,\n    },\n  }).then((r) => r.data);\n}\n","export function isNonNullable<TValue>(\n  value: TValue | undefined | null\n): value is TValue {\n  return value !== null && value !== undefined;\n}\n\nexport type ArrayItemType<T> = T extends (infer U)[] ? U : T;\nexport type DictionaryValueType<T> = T extends {\n  [index: string]: infer U;\n}\n  ? U\n  : T;\n","import { TestCase, TestResult } from \"@playwright/test/reporter\";\nimport { omit, pick } from \"lodash\";\n\nexport function getRawTestCase(testCase: TestCase): unknown {\n  return {\n    ...pick(\n      testCase,\n      \"title\",\n      \"location\",\n      \"results\",\n      \"_only\",\n      \"expectedStatus\",\n      \"timeout\",\n      \"retries\"\n    ),\n    results: testCase.results.map(getTestResults),\n  };\n}\n\nfunction getTestResults(r: TestResult) {\n  return {\n    ...omit(r, \"steps\", \"attachments\"),\n    attachments: r.attachments.map((a) => omit(a, \"body\")),\n  };\n}\n","import sizeOf from \"image-size\";\n\nimport { P, match } from \"ts-pattern\";\nimport { isNonNullable } from \"../lib/lang\";\nimport { randomId } from \"../lib/uid\";\nimport { getAttachmentsFromTestCases } from \"./tests\";\nimport {\n  ScreenshotWithBody,\n  ScreenshotWithPath,\n  TestCaseWithClientId,\n} from \"./types\";\n\nexport function getScreenshots(\n  testCases: TestCaseWithClientId[]\n): Array<ScreenshotWithPath | ScreenshotWithBody> {\n  return getAttachmentsFromTestCases(testCases)\n    .filter(\n      (a) =>\n        a.contentType.startsWith(\"image\") ||\n        a.contentType === \"application/octet-stream\"\n    )\n    .map((a) =>\n      match(a)\n        .with({ path: P.string, body: P.nullish }, (s) => {\n          const { height, width } = safeSizeOf(a.path);\n          return {\n            screenshotId: randomId(),\n            name: s.name,\n            testId: s.testId,\n            testAttemptIndex: s.testAttemptIndex,\n            path: s.path,\n            height,\n            width,\n            takenAt: new Date(),\n          };\n        })\n        .with({ path: P.nullish, body: P.instanceOf(Uint8Array) }, (s) => {\n          return {\n            screenshotId: randomId(),\n            name: s.name,\n            testId: s.testId,\n            testAttemptIndex: s.testAttemptIndex,\n            path: s.path,\n            height: 0,\n            width: 0,\n            body: s.body,\n            takenAt: new Date(),\n          };\n        })\n        .otherwise(() => null)\n    )\n    .filter(isNonNullable);\n}\n\nfunction safeSizeOf(path: string | undefined) {\n  if (!path) {\n    return { height: 0, width: 0 };\n  }\n  try {\n    const { height, width } = sizeOf(path);\n    return { height, width };\n  } catch {\n    return { height: 0, width: 0 };\n  }\n}\n","import random from \"randomstring\";\n\nexport function randomId() {\n  return random.generate({\n    length: 5,\n    capitalization: \"lowercase\",\n  });\n}\n","import { TestCase } from \"@playwright/test/reporter\";\nimport { getTestFullTitle } from \"../lib/testCase\";\nimport { TestCaseWithClientId } from \"./types\";\n\nconst defaultTestsValues = {\n  config: { video: true, videoUploadOnPasses: true },\n  hooks: [],\n};\n\nconst defaultTest = {\n  body: \"\",\n  config: {},\n  hookIds: [],\n};\n\nexport function getTests(testCases: TestCaseWithClientId[]) {\n  return {\n    ...defaultTestsValues,\n    tests: testCases.map((test) => ({\n      ...defaultTest,\n      clientId: test.clientId,\n      title: getTestFullTitle(test),\n    })),\n  };\n}\n\nexport function getAttachmentsFromTestCases(testCases: TestCaseWithClientId[]) {\n  return testCases\n    .map((t) => ({ clientId: t.clientId, results: t.results }))\n    .flatMap(({ results, clientId }) =>\n      results.flatMap((r) =>\n        r.attachments.map((a) => ({\n          ...a,\n          testId: clientId,\n          testAttemptIndex: r.retry,\n        }))\n      )\n    );\n}\n\n// test is flaky if there are multiple attempts,\n// some attempts match the expected outcome and some don't\nexport function isTestCaseFlaky(tc: TestCase) {\n  return tc.outcome() === \"flaky\";\n}\n","import { FullConfig, Suite, TestCase } from \"@playwright/test/reporter\";\nimport { relativeFileLocation } from \"./relativeFileLocation\";\n\nexport function getTestCaseProject(test: TestCase) {\n  return test.parent.project()?.name ?? \"__currents_no_project__\";\n}\n\nexport function getTestFullTitle(test: TestCase): string[] {\n  const titles = test.titlePath();\n  const fileSuite = getTestFileSuite(test).title;\n  return titles.slice(titles.indexOf(fileSuite) + 1, titles.length);\n}\n\nexport function getTestFileSuite(test: TestCase): Suite {\n  let suite = test.parent;\n  // get first parent with undefined location, which means it's a project\n  while (!!suite.parent?.location) {\n    suite = suite.parent;\n  }\n  return suite;\n}\n\nexport function testToSpecName(testCase: TestCase, config: FullConfig) {\n  return relativeFileLocation(testCase.location, config.rootDir);\n}\n\nexport function testToTestId(testCase: TestCase) {\n  // @ts-ignore\n  return testCase.id ?? testCase._id;\n}\n","import type { Location } from \"@playwright/test/reporter\";\nimport path from \"path\";\n\nexport function relativeFileLocation(location: Location, rootDir: string) {\n  return toPosixPath(path.relative(rootDir, location.file));\n}\n\nfunction toPosixPath(aPath: string): string {\n  return aPath.split(path.sep).join(path.posix.sep);\n}\n","import { TestCase } from \"@playwright/test/reporter\";\nimport { differenceInMilliseconds } from \"date-fns\";\nimport { first, last, omit, sumBy } from \"lodash\";\n\nimport { debug } from \"../debug\";\nimport { getTestCaseCurrentsState } from \"./testCaseStatus\";\nimport { ReporterStats, Stats } from \"./types\";\n\nexport function getStatsFromTests(testCases: TestCase[]): Stats {\n  const statList = testCases.map(getTestStats);\n  const startTime =\n    first(statList.map((r) => r.wallClockStartedAt).sort()) ?? new Date();\n  const endTime =\n    last(statList.map((r) => r.wallClockEndedAt).sort()) ?? new Date();\n\n  const duration = differenceInMilliseconds(endTime, startTime);\n\n  return {\n    suites: 1,\n    tests: testCases.length,\n    passes: sumBy(statList, \"passes\"),\n    pending: sumBy(statList, \"pending\"),\n    skipped: sumBy(statList, \"skipped\"),\n    failures: sumBy(statList, \"failures\"),\n    wallClockStartedAt: startTime,\n    wallClockEndedAt: endTime,\n    wallClockDuration: duration,\n  };\n}\n\nexport function getTestStats(\n  testCase: TestCase\n): Omit<Stats, \"suites\" | \"tests\"> {\n  debug(\n    \"getting test stats for test case: %o\",\n    omit(testCase, \"_testType\", \"parent\", \"fn\")\n  );\n  const startTimes = testCase.results.map((r) => r.startTime);\n  const endTimes = testCase.results.map(\n    (r) => new Date(new Date(r.startTime).getTime() + r.duration)\n  );\n  const sortedStartTimes = startTimes.sort((a, b) => a.getTime() - b.getTime());\n  const sortedEndTimes = endTimes.sort((a, b) => a.getTime() - b.getTime());\n\n  const earliestStartTime = sortedStartTimes[0] || new Date();\n  const latestEndTime = sortedEndTimes[sortedEndTimes.length - 1] || new Date();\n  const duration = latestEndTime.getTime() - earliestStartTime.getTime();\n  const status = getTestCaseCurrentsState(testCase);\n\n  const result = {\n    passes: [\"passed\"].includes(status) ? 1 : 0,\n    pending: [\"pending\"].includes(status) ? 1 : 0,\n    skipped: [\"skipped\"].includes(status) ? 1 : 0,\n    failures: [\"failed\"].includes(status) ? 1 : 0,\n    wallClockStartedAt: earliestStartTime,\n    wallClockEndedAt: latestEndTime,\n    wallClockDuration: duration,\n  };\n  debug(\"test stats result: %o\", result);\n  return result;\n}\n\nexport function getReporterStatsFromStats(stats: Stats): ReporterStats {\n  return {\n    suites: 1,\n    tests: stats.tests,\n    passes: stats.passes,\n    pending: stats.pending,\n    failures: stats.failures,\n    start: stats.wallClockStartedAt,\n    end: stats.wallClockEndedAt,\n    duration: stats.wallClockDuration,\n  };\n}\n","import { TestCase, TestStatus } from \"@playwright/test/reporter\";\nimport { flowRight } from \"lodash\";\nimport { match } from \"ts-pattern\";\nimport { CurrentsTestState } from \"./types\";\n\n/**\n * Coherce the status of a test case attempt to a single status\n * @param t Test Case\n * @returns\n */\nexport function getTestCaseStatus(\n  t: TestCase\n): \"passed\" | \"skipped\" | \"failed\" {\n  // if there are no results, it means that the test was interrupted\n  if (!t.results?.length) {\n    return \"skipped\";\n  }\n\n  const allStatuses = t.results.map((r) => r.status);\n\n  // if all the attempts have similar status\n  if (allStatuses.every((status) => status === allStatuses[0])) {\n    return match(allStatuses[0])\n      .with(\"skipped\", () => \"skipped\" as const)\n      .with(\"passed\", () =>\n        t.expectedStatus === \"passed\" ? \"passed\" : \"failed\"\n      )\n      .with(\"failed\", () =>\n        t.expectedStatus === \"failed\" ? \"passed\" : \"failed\"\n      )\n      .otherwise(() => \"failed\");\n  }\n\n  // if there is at least one passed attempt, and the test is expected to pass, then \"passed\"\n  if (\n    t.results.some((r) => r.status === \"passed\") &&\n    t.expectedStatus === \"passed\"\n  ) {\n    return \"passed\";\n  }\n\n  // if there is at least one failed attempt, and the test is expected to fail, then \"passed\"\n  if (\n    t.results.some((r) => r.status === \"failed\") &&\n    t.expectedStatus === \"failed\"\n  ) {\n    return \"passed\";\n  }\n\n  // otherwise, it is a mix of passed and failed attempts, so it is flaky\n  // and it doesn't pass the expected status\n  return \"failed\";\n}\n\n/**\n * Conver Playwright test status to Currents state\n * @param testStatus\n * @returns\n */\nexport function statusToCurrentsState(\n  testStatus: TestStatus\n): CurrentsTestState {\n  switch (testStatus) {\n    case \"timedOut\":\n      return \"failed\";\n    case \"interrupted\":\n      return \"failed\";\n    case \"skipped\":\n      return \"pending\";\n    default:\n      return testStatus;\n  }\n}\n\nexport const getTestCaseCurrentsState = flowRight(\n  statusToCurrentsState,\n  getTestCaseStatus\n);\n","import { TestCase } from \"@playwright/test/reporter\";\nimport { isNil } from \"lodash\";\nimport { getTestFullTitle } from \"../lib/testCase\";\nimport {\n  getErrorDetails,\n  getTestAttemptError,\n  getTestCaseDisplayError,\n} from \"./testCaseError\";\nimport {\n  getTestCaseCurrentsState,\n  statusToCurrentsState,\n} from \"./testCaseStatus\";\nimport { isTestCaseFlaky } from \"./tests\";\nimport { Test, TestCaseWithClientId } from \"./types\";\n\nexport function playwrightTestSuiteToTest(\n  testCases: TestCaseWithClientId[]\n): Test[] {\n  return testCases.map((tc) => {\n    const tcProject = getTestCaseProject(tc);\n    const attempts = tc.results.map((r) => ({\n      rawStatus: r.status,\n      // convert playwright status to currents status\n      state: statusToCurrentsState(r.status),\n      // attempt can have multiple errors, but we pick the one chosed by playwright\n      error: getTestAttemptError(r, tcProject),\n      // ...and we store all other errors for the test attempt\n      errors: r.errors.map((e) => getErrorDetails(e, tcProject)),\n      wallClockStartedAt: r.startTime.toISOString(),\n      wallClockDuration: r.duration,\n      videoTimestamp: 0,\n      workerIndex: r.workerIndex,\n    }));\n\n    return {\n      title: getTestFullTitle(tc),\n      expectedStatus: tc.expectedStatus,\n      outcome: tc.outcome(),\n      worker: getTestCaseWorker(tc),\n      clientId: tc.clientId,\n      displayError: getTestCaseDisplayError(tc),\n      state: getTestCaseCurrentsState(tc),\n      annotations: tc.annotations,\n\n      isFlaky: isTestCaseFlaky(tc),\n      attempts,\n    };\n  });\n}\n\nexport function getTestCaseWorker(testCase: TestCase) {\n  // https://github.com/microsoft/playwright/blob/2bc8cf2fc77ebc1e9897f33c34982c6ee2fd163b/docs/src/test-api/class-workerinfo.md\n  return {\n    // The unique index of the worker process that is running the test. When a worker is restarted, for example after a failure, the new worker process gets a new unique `workerIndex`.\n    workerIndex: isNil(testCase.results[0]?.workerIndex)\n      ? -1\n      : testCase.results[0].workerIndex,\n    // The index of the worker between `0` and `workers - 1`. It is guaranteed that workers running at the same time have a different `parallelIndex`. When a worker is restarted, for example after a failure, the new worker process has the same `parallelIndex`.\n    parallelIndex: isNil(testCase.results[0]?.parallelIndex)\n      ? -1\n      : testCase.results[0].parallelIndex,\n  };\n}\n\nfunction getTestCaseProject(item: TestCase) {\n  return item.parent.project();\n}\n","import { codeFrameColumns } from \"@babel/code-frame\";\n\nimport {\n  TestError as PlaywrightTestError,\n  TestCase,\n  TestResult,\n  TestStep,\n} from \"@playwright/test/reporter\";\nimport { FullProject } from \"@playwright/test/types/test\";\nimport fs from \"fs\";\nimport { last, orderBy } from \"lodash\";\nimport path from \"path\";\nimport { stripAnsiEscapes } from \"../lib/stripAnsiEscapes\";\nimport { TestError } from \"./types\";\n\nconst interruptedError: TestError = {\n  message: \"Test interrupted\",\n  name: \"Error\",\n  stack: \"\",\n  codeFrame: undefined,\n};\n\n// get display error for a test case with miltiple attempts\nexport function getTestCaseDisplayError(testCase: TestCase) {\n  if (!testCase.results?.length) {\n    return interruptedError.message;\n  }\n\n  const orderedAttemptResults = orderBy(testCase.results, \"retry\", \"asc\");\n\n  // if there is at least one failed attempt, use the last one\n  const result = last(\n    orderedAttemptResults.filter(\n      (r) =>\n        r.status === \"failed\" ||\n        r.status === \"timedOut\" ||\n        r.status === \"interrupted\"\n    )\n  )?.error?.message;\n\n  return result ? stripAnsiEscapes(result) : null;\n}\n\nexport function getTestAttemptError(result: TestResult, project?: FullProject) {\n  if (result.status === \"interrupted\") {\n    return interruptedError;\n  }\n  if (!result.error) {\n    return null;\n  }\n\n  if (result.error) {\n    return getErrorDetails(result.error, project);\n  }\n\n  const errorStep = tryGetStepWithErrorAndLocation(result.steps);\n  if (!errorStep) return null;\n  if (!errorStep?.error) {\n    errorStep.error = result.error;\n  }\n\n  return {\n    message: getErrorMessage(errorStep.error),\n    name: errorStep.title,\n    stack: getErrorStack(errorStep.error),\n    codeFrame: testStepToCodeFrame(errorStep),\n  };\n}\n\nexport function getErrorDetails(\n  error: PlaywrightTestError,\n  project?: FullProject\n) {\n  try {\n    return {\n      message: getErrorMessage(error),\n      name: getErrorName(error),\n      stack: getErrorStack(error),\n      codeFrame:\n        error.location &&\n        getErrorCodeFrame({\n          location: error.location,\n          snippet: error.snippet,\n          project,\n        }),\n    };\n  } catch (e) {\n    return {\n      message: \"Error while getting error details\",\n      name: \"Error\",\n      stack: \"\",\n      codeFrame: undefined,\n    };\n  }\n}\nfunction getErrorName(error: PlaywrightTestError) {\n  return \"Error\";\n}\n\nfunction getErrorCodeFrame({\n  location,\n  snippet,\n  project,\n}: {\n  location: NonNullable<PlaywrightTestError[\"location\"]>;\n  snippet: PlaywrightTestError[\"snippet\"];\n  project?: FullProject;\n}): TestError[\"codeFrame\"] {\n  return {\n    line: location.line,\n    column: location.column,\n    originalFile: location.file,\n    relativeFile: project?.testDir\n      ? path.relative(project.testDir, location.file)\n      : null,\n    absoluteFile: location.file,\n    frame: stripAnsiEscapes(snippet ?? \"No error source code detected\"),\n    language: getLanguageFromExtension(location.file),\n  };\n}\n\nfunction tryGetStepWithErrorAndLocation(\n  steps: TestStep[],\n  depth = 3\n): TestStep | undefined {\n  let result;\n\n  for (const s of steps) {\n    if (s.error && s.location) {\n      result = s;\n    }\n\n    if (result) return result;\n\n    if (s.steps.length > 0 && depth > 0) {\n      result = tryGetStepWithErrorAndLocation(s.steps, depth - 1);\n    }\n  }\n\n  for (const s of steps) {\n    if (s.category === \"hook\" && s.location) {\n      result = s;\n    }\n\n    if (result) return result;\n\n    if (s.steps.length > 0 && depth > 0) {\n      result = tryGetStepWithErrorAndLocation(s.steps, depth - 1);\n    }\n  }\n\n  return result;\n}\n\nfunction getErrorMessage(error?: PlaywrightTestError) {\n  return typeof error === \"string\"\n    ? error\n    : stripAnsiEscapes(error?.message ?? \"\");\n}\n\nfunction getErrorStack(error?: PlaywrightTestError) {\n  return error !== undefined && \"stack\" in error && error.stack\n    ? error.stack\n    : \"\";\n}\n\nfunction testStepToCodeFrame(\n  step: TestStep\n): TestError[\"codeFrame\"] | undefined {\n  const { location } = step;\n  if (!location) {\n    return undefined;\n  }\n\n  const language = getLanguageFromExtension(location.file);\n  const absoluteFile = location.file;\n  const relativeFile = path.relative(process.cwd(), location.file);\n  const originalFile = relativeFile;\n\n  const column = location.column;\n  const line = location.line;\n  const source = getSourceFromLocation(location.file);\n  const frame = source\n    ? codeFrameColumns(source, { start: { line, column } })\n    : \"\";\n\n  return {\n    line,\n    column,\n    originalFile,\n    relativeFile,\n    absoluteFile,\n    frame,\n    language,\n  };\n}\n\nconst getLanguageFromExtension = (filePath: string) => {\n  return (path.extname(filePath) || \"\").toLowerCase().replace(\".\", \"\");\n};\n\nconst getSourceFromLocation = (filePath: string) => {\n  try {\n    const source = fs.readFileSync(filePath, \"utf-8\") + \"\\n//\";\n    return source;\n  } catch (e) {\n    return undefined;\n  }\n};\n","const ansiRegex = new RegExp(\n  \"([\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~])))\",\n  \"g\"\n);\nexport function stripAnsiEscapes(str: string): string {\n  return str.replace(ansiRegex, \"\");\n}\n","import { randomId } from \"../lib/uid\";\nimport { getAttachmentsFromTestCases } from \"./tests\";\nimport { PlaywrightTraceWithPath, TestCaseWithClientId } from \"./types\";\n\nexport function getTraceFiles(\n  testCases: TestCaseWithClientId[]\n): Array<PlaywrightTraceWithPath> {\n  return getAttachmentsFromTestCases(testCases)\n    .filter((a) => a.name === \"trace\")\n    .filter((a) => \"path\" in a)\n    .map((s) => {\n      return {\n        traceId: randomId(),\n        name: s.name,\n        testId: s.testId,\n        testAttemptIndex: s.testAttemptIndex,\n        path: s.path as string,\n        takenAt: new Date(),\n      };\n    });\n}\n","import { AxiosProgressEvent } from \"axios\";\nimport { pick } from \"lodash\";\nimport pall from \"p-all\";\nimport { P, match } from \"ts-pattern\";\nimport { format } from \"util\";\nimport { debug as _debug } from \"../debug\";\nimport { warn } from \"../logger\";\nimport { ContentType, sendBuffer, sendPath } from \"../upload/\";\n\nconst debug = _debug.extend(\"upload\");\n\n// const multibar = new cliProgress.MultiBar({\n//   format:\n//     `{path} ` +\n//     colors.cyan(\"{bar}\") +\n//     \" {value}/{total} files | {loadedBytes}/{totalBytes}\",\n//   barCompleteChar: \"\\u2588\",\n//   barIncompleteChar: \"\\u2591\",\n//   hideCursor: true,\n// });\n// const bars: Record<string, typeof cliProgress.MultiBar> = {};\n\nexport const uploadWarnings = new Set<string>();\n\n// export const getInstanceUploadTaskWithProgress = ({\n//   instanceId,\n//   uploads,\n// }: {\n//   instanceId: string;\n//   uploads: Upload[];\n// }) => {\n//   // bars[instanceId] = multibar.create(uploads.length, 0, {\n//   //   instanceId,\n//   // });\n\n//   return pall(\n//     uploads.map((path) => async () => {\n//       // bars[path.path] = multibar.create(uploads.length, 0, {\n//       //   path: `${path.name} + ${path.path}`,\n//       // });\n//       if (!uploadTasks.has(instanceId)) {\n//         uploadTasks.set(instanceId, {\n//           overall: uploads.length,\n//           started: 0,\n//           completed: 0,\n//         });\n//       }\n\n//       const progress = uploadTasks.get(instanceId)!;\n//       progress.started += 1;\n\n//       try {\n//         await send(path, (progressEvent) => {\n//           // bars[path.name].update({\n//           //   path: path.name,\n//           //   loadedBytes: progressEvent.loaded / (1000 * 1000),\n//           //   totalBytes: (progressEvent.total ?? 0) / (1000 * 1000),\n//           // });\n//         });\n//       } catch (e) {\n//         const msg = format(\n//           \"Upload failed: %o\",\n//           formatAxiosError(e),\n//           getUploadPath(path)\n//         );\n//         uploadWarnings.add(msg);\n//         warn(msg);\n//       }\n//       // bars[instanceId].increment({ instanceId });\n\n//       // if (progress.completed === progress.overall) {\n//       //   bars[instanceId].stop();\n//       // }\n//       progress.completed += 1;\n//       debug(\"Upload task %s: %o\", instanceId, {\n//         overall: progress.overall,\n//         started: progress.started,\n//         completed: progress.completed,\n//       });\n//     }),\n//     {\n//       concurrency: 1,\n//       stopOnError: false,\n//     }\n//   );\n// };\n\nconst getUploadUpdateHandler =\n  (label: string) =>\n  ({ total, loaded }: AxiosProgressEvent) => {\n    () => {\n      debug(\n        \"Uploading %s: %d / %d\",\n        label,\n        bytesToMb(loaded),\n        bytesToMb(total ?? 0)\n      );\n    };\n  };\nexport const getInstanceUploadTask = ({\n  instanceId,\n  uploads,\n}: {\n  instanceId: string;\n  uploads: Upload[];\n}) => {\n  return pall(\n    uploads.map((upload) => async () => {\n      try {\n        await match(upload)\n          .with({ path: P.string }, async (u) => {\n            await sendPath(u, u.contentType, getUploadUpdateHandler(u.path));\n            debug(\"Upload completed for %s, %s\", instanceId, u.path);\n          })\n          .with({ buffer: P.any }, async (u) => {\n            await sendBuffer(\n              u,\n              u.contentType,\n              getUploadUpdateHandler(u.name ?? \"buffer\")\n            );\n            debug(\"Upload completed for %s, %s\", instanceId, u.name);\n          })\n          .exhaustive();\n      } catch (e) {\n        const msg = format(\"Upload failed: %o\", formatAxiosError(e));\n        uploadWarnings.add(msg);\n        warn(msg);\n      }\n    }),\n    {\n      concurrency: 10,\n      stopOnError: false,\n    }\n  );\n};\n\nfunction formatAxiosError(error: unknown) {\n  return pick(error, \"message\", \"code\", \"method\", \"url\");\n}\n\nexport type PathUpload = {\n  name: string | null;\n  path: string;\n  uploadUrl: string;\n  contentType: ContentType;\n};\n\nexport type BufferUpload = {\n  name: string | null;\n  buffer: Buffer;\n  uploadUrl: string;\n  contentType: ContentType;\n};\n\nexport type Upload = PathUpload | BufferUpload;\n\nfunction bytesToMb(bytes: number) {\n  return bytes / 1000 / 1000;\n}\n","import { randomId } from \"../lib/uid\";\nimport { getAttachmentsFromTestCases } from \"./tests\";\nimport { TestCaseWithClientId, VideoAttachment } from \"./types\";\n\nexport function getVideoInformation(\n  testCases: TestCaseWithClientId[]\n):\n  | { type: \"hasVideo\"; path: string; name: string | null }\n  | { type: \"noVideo\" } {\n  const attachments = getAttachmentsFromTestCases(testCases);\n  const videos = attachments.filter((a) => a.contentType.startsWith(\"video\"));\n  // what happens if we have more than 1 video? Cypress just seems to send a video boolean\n  const selectedVideo = videos[0];\n  return selectedVideo && selectedVideo.path\n    ? { type: \"hasVideo\", path: selectedVideo.path, name: selectedVideo.name }\n    : { type: \"noVideo\" };\n}\n\nexport function getVideoAttachments(\n  testCases: TestCaseWithClientId[]\n): VideoAttachment[] {\n  return getAttachmentsFromTestCases(testCases)\n    .filter((a) => a.contentType.startsWith(\"video\"))\n    .map((a) => ({\n      ...a,\n      id: randomId(),\n    }));\n}\n","import { TestCase, TestResult } from \"@playwright/test/reporter\";\nimport { ArrayItemType } from \"../lib/lang\";\n\nexport type TestCaseWithClientId = TestCase & { clientId: string };\nexport type CurrentsTestState = \"failed\" | \"passed\" | \"pending\" | \"skipped\";\nexport type Attachment = ArrayItemType<TestResult[\"attachments\"]>;\nexport type VideoAttachment = Attachment & {\n  testId: string;\n  testAttemptIndex: number;\n  id: string;\n};\n\nexport type InstanceResults = {\n  reporterStats: ReporterStats;\n  stats: Stats;\n  video: boolean;\n  videos: Array<VideoAttachment>;\n  screenshots: Array<ScreenshotWithPath | ScreenshotWithBody>;\n  playwrightTraces: PlaywrightTraceWithPath[];\n  exception: string | null;\n  tests: Test[];\n  raw: string;\n};\n\nexport interface Test {\n  state: CurrentsTestState;\n  // testId: string;\n  displayError: string | null;\n  // title: string[];\n  config?: null | TestConfig;\n  // hookIds: string[];\n  // body: string;\n  attempts: TestAttempt[];\n  // hooks: TestHook[] | null;\n\n  annotations: TestCase[\"annotations\"];\n  clientId: string;\n}\n\ninterface TestAttempt {\n  state: CurrentsTestState;\n  error: TestError | null;\n  wallClockStartedAt: string | null;\n  wallClockDuration: number | null;\n  videoTimestamp: number | null;\n}\n\ninterface TestConfig {\n  retries:\n    | {\n        openMode: number;\n        runMode: number;\n      }\n    | number;\n}\n\nexport type TestError = {\n  name: string;\n  message: string;\n  stack: string;\n  codeFrame:\n    | {\n        line: number;\n        column: number;\n        originalFile: string;\n        relativeFile: string | null;\n        absoluteFile: string;\n        frame: string;\n        language: string;\n      }\n    | undefined;\n};\nexport type Screenshot = {\n  screenshotId: string;\n  name: string | null;\n  testId: string;\n  testAttemptIndex: number;\n  takenAt: Date;\n  height: number | undefined;\n  width: number | undefined;\n};\n\nexport type ScreenshotWithPath = Screenshot & { path: string };\nexport type ScreenshotWithBody = Screenshot & { body: Buffer };\n\nexport type PlaywrightTrace = {\n  traceId: string;\n  name: string | null;\n  testId: string;\n  testAttemptIndex: number;\n  takenAt: Date;\n};\n\nexport type PlaywrightTraceWithPath = PlaywrightTrace & { path: string };\n\nexport type Stats = {\n  suites: 1;\n  tests: number;\n  passes: number;\n  pending: number;\n  skipped: number;\n  failures: number;\n  wallClockStartedAt: Date;\n  wallClockEndedAt: Date;\n  wallClockDuration: number;\n};\n\nexport type ReporterStats = {\n  suites: 1;\n  tests: number;\n  passes: number;\n  pending: number;\n  failures: number;\n  start: Date;\n  end: Date;\n  duration: number;\n};\n\nexport type WorkerInfo = {\n  workerIndex: number;\n  parallelIndex: number;\n};\n","import { FullProject } from \"@playwright/test\";\nimport {\n  FullConfig,\n  FullResult,\n  Suite,\n  TestCase,\n  TestResult,\n  TestStep,\n} from \"@playwright/test/reporter\";\nimport { extend, last, uniq } from \"lodash\";\nimport pluralize from \"pluralize\";\nimport { getCurrentsConfig } from \"./config/config\";\nimport { debug as _debug } from \"./debug\";\nimport { epilogue } from \"./epilogue/formatEpilogue\";\nimport {\n  ExecutionState,\n  ProjectId,\n  SpecExecutionState,\n  SpecId,\n} from \"./executionState\";\nimport { sendCreateInstanceRequest } from \"./instances\";\nimport { maybeCancelRun, setCancellationReason } from \"./lib/cancellation\";\nimport { relativeFileLocation } from \"./lib/relativeFileLocation\";\nimport {\n  getTestCaseProject,\n  getTestFullTitle,\n  testToTestId,\n} from \"./lib/testCase\";\nimport * as logger from \"./logger\";\nimport { WorkerInfo, reportResults } from \"./results\";\nimport { sendTestResult } from \"./results/api\";\nimport { getTestCaseWorker } from \"./results/testCase\";\nimport * as Runs from \"./runs\";\nimport { getFullTestSuite } from \"./scanner\";\n\nconst debug = _debug.extend(\"actor\");\nexport class TestActor {\n  public readonly config: FullConfig;\n  public readonly executionState: ExecutionState;\n  readonly warnings: string[][] = [];\n  readonly errors: string[][] = [];\n\n  private instanceCreations: Record<\n    ProjectId,\n    Record<\n      SpecId,\n      Promise<\n        { instanceId: string; claimedCount: number; spec: string } | undefined\n      >\n    >\n  > = {};\n  private resultCreations: Record<ProjectId, Record<SpecId, Promise<void>>> =\n    {};\n\n  private testResultUploads: Promise<any>[] = [];\n\n  constructor({ suites }: Suite, config: FullConfig) {\n    this.config = config;\n    this.executionState = new ExecutionState(config);\n    suites.forEach((s) => {\n      debug(\"Creating project execution state for project: %s\", s.title);\n      const testCases = s.allTests();\n\n      const projectExecution = this.executionState\n        .upsertProjectExecution(s.title)\n        .setRun(\n          this.createRun({\n            projectId: s.title,\n            project: s.project(),\n            createRunParams: {\n              specs: uniq(testCases.map((t) => testToSpecName(t, config))),\n              browser: {\n                name: s.title,\n                version: \"\",\n              },\n              tests: testCases.map((t) => ({\n                spec: testToSpecName(t, config),\n                title: getTestFullTitle(t),\n              })),\n              group: s.title,\n            },\n          })\n        );\n\n      testCases.forEach((tc) => {\n        projectExecution\n          .upsertSpecExecution(\n            testToSpecName(tc, config),\n            getTestCaseProject(tc)\n          )\n          .createTestExecution(testToTestId(tc), tc);\n      });\n    });\n  }\n\n  private async createRun(params: {\n    projectId: string;\n    project?: FullProject;\n    createRunParams: Omit<Runs.CreateRunParams, \"projectTags\">;\n  }) {\n    // try getting the full unsharded suite\n    const fullTestSuite = await getFullTestSuite(this.config);\n    debug(\"fullTestSuite: %o\", fullTestSuite);\n\n    return Runs.createRun({\n      ...params.createRunParams,\n      projectTags: params.project?.metadata?.pwc?.tags ?? [],\n    }).then((run) => {\n      if (!run) {\n        this.warn(\n          \"[currents] Could not start recording for project: %s\",\n          params.projectId\n        );\n      }\n\n      if (run?.cancellation) {\n        setCancellationReason(run.cancellation);\n        maybeCancelRun();\n      }\n      return run;\n    });\n  }\n\n  public onTestBegin(test: TestCase) {\n    this.startCreatingInstance(test);\n  }\n\n  public onTestEnd(test: TestCase, result: TestResult) {\n    const projectId = getTestCaseProject(test);\n    const specName = testToSpecName(test, this.config);\n\n    this.sendTestResult({\n      test,\n      result,\n      specName,\n      projectId,\n    });\n\n    const specExecution = this.executionState.getSpecExecution(test);\n    const testExecution = this.executionState\n      .getTestExecution(test)\n      .setTestCase(test);\n\n    debug(\"Test end: %o\", {\n      title: testExecution.titlePath,\n      attempt: result.retry,\n      retries: test.retries,\n      expectedStatus: test.expectedStatus,\n      actualStatus: result.status,\n      currentsState: testExecution.currentsState,\n      isTestFinished: testExecution.isFinished(),\n      isSpecFinished: specExecution.isFinished(),\n    });\n\n    if (specExecution.isFinished()) {\n      this.startProcessingResults(specExecution);\n    } else {\n      debug(\"Waiting for more tests to finish before reporting spec...\");\n    }\n  }\n\n  private sendTestResult(params: {\n    test: TestCase;\n    result: TestResult;\n    specName: string;\n    projectId: string;\n  }) {\n    const config = getCurrentsConfig();\n    if (!config) {\n      debug(\"Not sending test result - missing config\");\n      return;\n    }\n    // @ts-ignore\n    if (!config.enableTestResults) {\n      return;\n    }\n    this.testResultUploads.push(\n      this.executionState\n        .getProjectExecution(params.projectId)\n        .run.then((run) => {\n          if (!run) {\n            debug(\n              \"Not sending test result - missing run for %s\",\n              params.projectId\n            );\n            return;\n          }\n\n          return sendTestResult({\n            runId: run.runId,\n            groupId: run.groupId,\n            reportedAt: new Date().toISOString(),\n            result: params.result,\n            recordKey: config.recordKey,\n            retry: params.result.retry,\n            status: params.result.status,\n            title: getTestFullTitle(params.test),\n            spec: params.specName,\n          });\n        })\n        .catch((e) => {\n          debug(\"Error sending test result: %o\", e);\n        })\n    );\n  }\n  public onStepBegin(\n    test: TestCase,\n    result: TestResult,\n    step: TestStep\n  ): void {}\n\n  public onStepEnd(test: TestCase, result: TestResult, step: TestStep): void {}\n\n  private warn(...args: any[]) {\n    this.warnings.push([...args]);\n    logger.warn(...args);\n  }\n\n  private async startProcessingResults(spec: SpecExecutionState) {\n    const projectId = spec.projectId;\n    const specName = spec.specName;\n\n    if (!this.resultCreations[projectId]) {\n      this.resultCreations[projectId] = {};\n    }\n    if (!!this.resultCreations[projectId][specName]) {\n      debug(\"Result processing already started: %s %s\", projectId, specName);\n      return;\n    }\n\n    debug(\"Starting processing spec result: %o\", {\n      projectId,\n      spec: specName,\n    });\n\n    this.resultCreations[projectId][specName] = this.createResultForSpec(spec);\n  }\n\n  async createResultForSpec(spec: SpecExecutionState) {\n    const config = getCurrentsConfig();\n    if (!config) {\n      return;\n    }\n\n    const projectId = spec.projectId;\n    const specName = spec.specName;\n    const testCaseExecutions = spec.getAllTestExecutions();\n    const failed = spec.isFailed();\n\n    const createInstanceRequest =\n      await this.instanceCreations[projectId][specName];\n\n    if (!createInstanceRequest?.instanceId) {\n      this.warn(\n        \"[currents] Missing reporting instructions for file, skipping: [%s] › %s\",\n        projectId,\n        specName\n      );\n      return;\n    }\n\n    if (createInstanceRequest?.claimedCount > 1) {\n      this.warn(\n        '[currents] Results already reported for build \"%s\" [%s] › %s',\n        config.ciBuildId,\n        projectId,\n        specName\n      );\n      return;\n    }\n\n    return sendResultsForSpec(\n      {\n        instanceId: createInstanceRequest.instanceId,\n        testCases: testCaseExecutions.map((i) => i.testCase),\n        config: this.config,\n      },\n      { status: failed ? \"failed\" : \"passed\" }\n    );\n  }\n\n  private startCreatingInstance(test: TestCase) {\n    const projectId = getTestCaseProject(test);\n    const specName = testToSpecName(test, this.config);\n    if (!this.instanceCreations[projectId]) {\n      this.instanceCreations[projectId] = {};\n    }\n    if (!!this.instanceCreations[projectId][specName]) {\n      debug(\"Instance creation already started: %s %s\", projectId, specName);\n      return;\n    }\n\n    debug(\"Starting instance creation: %o\", {\n      projectId,\n      spec: specName,\n    });\n    this.instanceCreations[projectId][specName] = this.createInstanceForSpec({\n      projectId,\n      specName,\n      worker: getTestCaseWorker(test),\n    });\n  }\n\n  async createInstanceForSpec({\n    projectId,\n    specName,\n    worker,\n  }: {\n    projectId: string;\n    specName: string;\n    worker: WorkerInfo;\n  }) {\n    debug(\"Getting run for projectId\", {\n      projectId,\n    });\n\n    const run = await this.executionState.getProjectExecution(projectId).run;\n\n    if (!run) {\n      return;\n    }\n\n    const { runId, groupId, machineId } = run;\n\n    const { instanceId, claimedCount, ...rest } =\n      await sendCreateInstanceRequest({\n        runId,\n        groupId,\n        machineId,\n        spec: specName,\n        worker,\n      });\n\n    debug(\n      \"Create instance response: %s %s %o\",\n      worker,\n      projectId,\n      specName,\n      instanceId,\n      claimedCount\n    );\n    return { instanceId, claimedCount, spec: specName };\n  }\n\n  public async awaitAllResults() {\n    const allPromises = Object.values(this.resultCreations).flatMap((spec) =>\n      Object.values(spec)\n    );\n\n    debug(\"Awaiting for completion of reporting tasks...\");\n    return Promise.allSettled([...allPromises, ...this.testResultUploads]);\n  }\n\n  public async getRunURL() {\n    const projects = this.executionState.getAllProjectExecutions();\n    if (!projects.length) {\n      return;\n    }\n    return (await projects[0].run)?.runUrl;\n  }\n\n  public async getRunId() {\n    const projects = this.executionState.getAllProjectExecutions();\n    if (!projects.length) {\n      return;\n    }\n    return (await projects[0].run)?.runId;\n  }\n\n  public getSpecExecutionsWithNoResults() {\n    const resultSpecs = Object.values(this.resultCreations).flatMap((spec) =>\n      Object.keys(spec)\n    );\n\n    const resultSpecsSet = new Set(resultSpecs);\n    const nonResultSpecs: SpecExecutionState[] = [];\n    this.executionState.getAllSpecExecutions().forEach((s) => {\n      if (!resultSpecsSet.has(s.specName)) {\n        nonResultSpecs.push(s);\n      }\n    });\n    return nonResultSpecs;\n  }\n\n  /**\n   * PW can not run certain tests because of various reasons\n   * For example - maxFailures is reached, or SIGINT is received\n   * Here we try to find such tests and report them as skipped.\n   * See https://github.com/search?q=repo%3Amicrosoft%2Fplaywright%20didNotRun&type=code\n   */\n  public reportSpecsWithNoResults() {\n    function getFakeTestResult(retry: number): TestResult {\n      return {\n        status: \"skipped\",\n        workerIndex: -1,\n        parallelIndex: 0,\n        duration: 0,\n        startTime: new Date(),\n        stdout: [\n          \"Playwright could not run this test because of maximum allowed failures, or SIGINT was received.\",\n        ],\n        stderr: [\n          \"Playwright could not run this test because of maximum allowed failures, or SIGINT was received.\",\n        ],\n        attachments: [],\n        steps: [],\n        error: {\n          message: \"Playwright did not run this test\",\n          stack: \"\",\n        },\n        errors: [],\n        retry,\n      };\n    }\n\n    this.getSpecExecutionsWithNoResults().forEach((s) => {\n      const nonFinishedTests = s\n        .getAllTestExecutions()\n        .filter((te) => !te.isFinished());\n      if (!nonFinishedTests.length) {\n        return;\n      }\n      const it = nonFinishedTests.length === 1 ? \"it\" : \"them\";\n      logger.warn(\n        `Playwright did not run ${pluralize(\n          \"test\",\n          nonFinishedTests.length,\n          true\n        )}, reporting ${it} as ${logger.magenta(\"skipped\")}:`\n      );\n      nonFinishedTests.forEach((te) => {\n        logger.info(logger.dim(`- ${te.titlePath}`));\n        // backfill results for non finished tests with skipped\n        const fakeTestCase = extend(te.testCase);\n        const resultsToCreate =\n          te.testCase.retries + 1 - fakeTestCase.results.length;\n        Array.from({ length: resultsToCreate }).forEach((i) => {\n          fakeTestCase.results.push(\n            getFakeTestResult(fakeTestCase.results.length + 1)\n          );\n        });\n\n        this.onTestBegin(fakeTestCase);\n        this.onTestEnd(\n          fakeTestCase,\n          last(fakeTestCase.results) ?? getFakeTestResult(0)\n        );\n      });\n      logger.divider();\n    });\n  }\n}\n\nfunction testToSpecName(testCase: TestCase, config: FullConfig) {\n  return relativeFileLocation(testCase.location, config.rootDir);\n}\n\nexport async function sendResultsForSpec(\n  {\n    instanceId,\n    testCases,\n    config,\n  }: {\n    instanceId: string;\n    testCases: Array<TestCase>;\n    config: FullConfig<{}, {}>;\n  },\n  result: Pick<FullResult, \"status\">\n) {\n  const testCasesWithClientId = testCases.map((testCase, index) =>\n    extend(testCase, {\n      clientId: indexToClientId(index),\n    })\n  );\n\n  const stdOutChunks = testCases\n    .flatMap((t) => t.results)\n    .flatMap((r) => [...r.stdout, r.stderr])\n    .filter((chunk): chunk is string => typeof chunk === \"string\");\n\n  const { failures, summaryMessage } = epilogue(testCases, config, result);\n  const stdOut = stdOutChunks.join(\"\\n\") + failures.join(\"\\n\") + summaryMessage;\n\n  await Promise.allSettled([\n    reportResults({\n      instanceId,\n      testCases: testCasesWithClientId,\n      stdout: [stdOut, ...logger.getLogDrain()].join(\"\\n\"),\n    }),\n  ]);\n\n  maybeCancelRun();\n}\n\nfunction indexToClientId(index: number) {\n  return `r${index}`;\n}\n","import {\n  FullConfig,\n  FullResult,\n  TestCase,\n  TestError,\n  TestStep,\n} from \"@playwright/test/reporter\";\nimport chalk from \"chalk\";\nimport path from \"path\";\nimport { stripAnsiEscapes } from \"../lib/stripAnsiEscapes\";\nimport { formatResultFailure } from \"./formatResultFailure\";\n\nconst kOutputSymbol = Symbol(\"output\");\n\ntype TestSummary = {\n  skipped: number;\n  expected: number;\n  interrupted: TestCase[];\n  unexpected: TestCase[];\n  flaky: TestCase[];\n  failuresToPrint: TestCase[];\n  fatalErrors: TestError[];\n};\n\ntype Annotation = {\n  title: string;\n  message: string;\n  location?: Location;\n};\n\ntype TestResultOutput = { chunk: string | Buffer; type: \"stdout\" | \"stderr\" };\n\nfunction generateSummaryMessage(\n  {\n    skipped,\n    expected,\n    interrupted,\n    unexpected,\n    flaky,\n    fatalErrors,\n  }: TestSummary,\n  config: FullConfig,\n  result: Pick<FullResult, \"status\">\n) {\n  const tokens: string[] = [];\n  if (unexpected.length) {\n    tokens.push(chalk.red(`  ${unexpected.length} failed`));\n    for (const test of unexpected)\n      tokens.push(chalk.red(formatTestHeader(config, test, \"    \")));\n  }\n  if (interrupted.length) {\n    tokens.push(chalk.yellow(`  ${interrupted.length} interrupted`));\n    for (const test of interrupted)\n      tokens.push(chalk.yellow(formatTestHeader(config, test, \"    \")));\n  }\n  if (flaky.length) {\n    tokens.push(chalk.yellow(`  ${flaky.length} flaky`));\n    for (const test of flaky)\n      tokens.push(chalk.yellow(formatTestHeader(config, test, \"    \")));\n  }\n  if (skipped) tokens.push(chalk.yellow(`  ${skipped} skipped`));\n  // if (expected) {\n  //   tokens.push(\n  //     chalk.green(`  ${expected} passed`) +\n  //       chalk.dim(` (${milliseconds(duration)})`)\n  //   );\n  // }\n  if (result.status === \"timedout\")\n    tokens.push(\n      chalk.red(\n        `  Timed out waiting ${\n          config.globalTimeout / 1000\n        }s for the entire test run`\n      )\n    );\n  if (fatalErrors.length)\n    tokens.push(\n      chalk.red(\n        `  ${\n          fatalErrors.length === 1\n            ? \"1 error was not a part of any test\"\n            : fatalErrors.length + \" errors were not a part of any test\"\n        }, see above for details`\n      )\n    );\n\n  return tokens.join(\"\\n\");\n}\n\nfunction generateSummary(tests: TestCase[]): TestSummary {\n  let skipped = 0;\n  let expected = 0;\n  const interrupted: TestCase[] = [];\n  const interruptedToPrint: TestCase[] = [];\n  const unexpected: TestCase[] = [];\n  const flaky: TestCase[] = [];\n\n  tests.forEach((test) => {\n    switch (test.outcome()) {\n      case \"skipped\": {\n        if (test.results.some((result) => result.status === \"interrupted\")) {\n          if (test.results.some((result) => !!result.error))\n            interruptedToPrint.push(test);\n          interrupted.push(test);\n        } else {\n          ++skipped;\n        }\n        break;\n      }\n      case \"expected\":\n        ++expected;\n        break;\n      case \"unexpected\":\n        unexpected.push(test);\n        break;\n      case \"flaky\":\n        flaky.push(test);\n        break;\n    }\n  });\n\n  const failuresToPrint = [...unexpected, ...flaky, ...interruptedToPrint];\n  return {\n    skipped,\n    expected,\n    interrupted,\n    unexpected,\n    flaky,\n    failuresToPrint,\n    fatalErrors: [],\n  };\n}\n\nexport function epilogue(\n  tests: TestCase[],\n  config: FullConfig,\n  result: Pick<FullResult, \"status\">\n) {\n  const summary = generateSummary(tests);\n  const summaryMessage = generateSummaryMessage(summary, config, result);\n  return {\n    summaryMessage,\n    failures: summary.failuresToPrint.map(\n      (test, index) =>\n        formatFailure(config, test, {\n          index: index + 1,\n        }).message\n    ),\n  };\n}\n\nfunction formatFailure(\n  config: FullConfig,\n  test: TestCase,\n  options: {\n    index?: number;\n    includeStdio?: boolean;\n    includeAttachments?: boolean;\n  } = {}\n): {\n  message: string;\n  annotations: Annotation[];\n} {\n  const { index, includeStdio, includeAttachments = true } = options;\n  const lines: string[] = [];\n  const title = formatTestTitle(config, test);\n  const annotations: Annotation[] = [];\n  const header = formatTestHeader(config, test, \"  \", index);\n  lines.push(chalk.red(header));\n  for (const result of test.results) {\n    const resultLines: string[] = [];\n    const errors = formatResultFailure(config, test, result, \"    \", true);\n    if (!errors.length) continue;\n    const retryLines = [];\n    if (result.retry) {\n      retryLines.push(\"\");\n      retryLines.push(chalk.gray(pad(`    Retry #${result.retry}`, \"-\")));\n    }\n    resultLines.push(...retryLines);\n    resultLines.push(...errors.map((error) => \"\\n\" + error.message));\n    if (includeAttachments) {\n      for (let i = 0; i < result.attachments.length; ++i) {\n        const attachment = result.attachments[i];\n        const hasPrintableContent =\n          attachment.contentType.startsWith(\"text/\") && attachment.body;\n        if (!attachment.path && !hasPrintableContent) continue;\n        resultLines.push(\"\");\n        resultLines.push(\n          chalk.cyan(\n            pad(\n              `    attachment #${i + 1}: ${attachment.name} (${\n                attachment.contentType\n              })`,\n              \"-\"\n            )\n          )\n        );\n        if (attachment.path) {\n          const relativePath = path.relative(process.cwd(), attachment.path);\n          resultLines.push(chalk.cyan(`    ${relativePath}`));\n          // Make this extensible\n          if (attachment.name === \"trace\") {\n            resultLines.push(chalk.cyan(`    Usage:`));\n            resultLines.push(\"\");\n            resultLines.push(\n              chalk.cyan(`        npx playwright show-trace ${relativePath}`)\n            );\n            resultLines.push(\"\");\n          }\n        } else {\n          if (attachment.contentType.startsWith(\"text/\") && attachment.body) {\n            let text = attachment.body.toString();\n            if (text.length > 300) text = text.slice(0, 300) + \"...\";\n            resultLines.push(chalk.cyan(`    ${text}`));\n          }\n        }\n        resultLines.push(chalk.cyan(pad(\"   \", \"-\")));\n      }\n    }\n    const output = ((result as any)[kOutputSymbol] || []) as TestResultOutput[];\n    if (includeStdio && output.length) {\n      const outputText = output\n        .map(({ chunk, type }) => {\n          const text = chunk.toString(\"utf8\");\n          if (type === \"stderr\") return chalk.red(stripAnsiEscapes(text));\n          return text;\n        })\n        .join(\"\");\n      resultLines.push(\"\");\n      resultLines.push(\n        chalk.gray(pad(\"--- Test output\", \"-\")) +\n          \"\\n\\n\" +\n          outputText +\n          \"\\n\" +\n          pad(\"\", \"-\")\n      );\n    }\n    for (const error of errors) {\n      annotations.push({\n        // @ts-ignore\n        location: error.location,\n        title,\n        message: [header, ...retryLines, error.message].join(\"\\n\"),\n      });\n    }\n    lines.push(...resultLines);\n  }\n  lines.push(\"\");\n  return {\n    message: lines.join(\"\\n\"),\n    annotations,\n  };\n}\n\nfunction formatTestHeader(\n  config: FullConfig,\n  test: TestCase,\n  indent: string,\n  index?: number\n): string {\n  const title = formatTestTitle(config, test);\n  const header = `${indent}${index ? index + \") \" : \"\"}${title}`;\n  return pad(header, \"=\");\n}\n\nfunction formatTestTitle(\n  config: FullConfig,\n  test: TestCase,\n  step?: TestStep,\n  omitLocation: boolean = false\n): string {\n  // root, project, file, ...describes, test\n  const [, projectName, , ...titles] = test.titlePath();\n  let location;\n  if (omitLocation) location = `${relativeTestPath(config, test)}`;\n  else\n    location = `${relativeTestPath(config, test)}:${\n      step?.location?.line ?? test.location.line\n    }:${step?.location?.column ?? test.location.column}`;\n  const projectTitle = projectName ? `[${projectName}] › ` : \"\";\n  return `${projectTitle}${location} › ${titles.join(\" › \")}${stepSuffix(\n    step\n  )}`;\n}\n\nfunction pad(line: string, char: string): string {\n  if (line) line += \" \";\n  return line + chalk.gray(char.repeat(Math.max(0, 100 - line.length)));\n}\n\nfunction relativeFilePath(config: FullConfig, file: string): string {\n  return path.relative(config.rootDir, file) || path.basename(file);\n}\n\nfunction relativeTestPath(config: FullConfig, test: TestCase): string {\n  return relativeFilePath(config, test.location.file);\n}\n\nfunction stepSuffix(step: TestStep | undefined) {\n  const stepTitles = step ? step.titlePath() : [];\n  return stepTitles.map((t) => \" › \" + t).join(\"\");\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport url from \"url\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport {\n  FullConfig,\n  Location,\n  TestCase,\n  TestResult,\n  TestError,\n} from \"@playwright/test/reporter\";\nimport * as colors from \"colors/safe\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport StackUtils from \"stack-utils\";\n\ntype ErrorDetails = {\n  message: string;\n  location?: Location;\n};\n\nfunction indent(lines: string, tab: string) {\n  return lines.replace(/^(?=.+$)/gm, tab);\n}\n\nfunction prepareErrorStack(stack: string): {\n  message: string;\n  stackLines: string[];\n  location?: Location;\n} {\n  const lines = stack.split(\"\\n\");\n  let firstStackLine = lines.findIndex((line) => line.startsWith(\"    at \"));\n  if (firstStackLine === -1) firstStackLine = lines.length;\n  const message = lines.slice(0, firstStackLine).join(\"\\n\");\n  const stackLines = lines.slice(firstStackLine);\n  let location: Location | undefined;\n  for (const line of stackLines) {\n    const { frame: parsed, fileName: resolvedFile } = parseStackTraceLine(line);\n    if (!parsed || !resolvedFile) continue;\n    if (belongsToNodeModules(resolvedFile)) continue;\n    location = {\n      file: resolvedFile,\n      column: parsed.column || 0,\n      line: parsed.line || 0,\n    };\n    break;\n  }\n  return { message, stackLines, location };\n}\n\nfunction belongsToNodeModules(file: string) {\n  return file.includes(`${path.sep}node_modules${path.sep}`);\n}\n\nfunction relativeFilePath(config: FullConfig, file: string): string {\n  return path.relative(config.rootDir, file) || path.basename(file);\n}\n\nfunction formatError(\n  config: FullConfig,\n  error: TestError,\n  highlightCode: boolean,\n  file?: string\n): ErrorDetails {\n  const stack = error.stack;\n  const tokens: string[] = [];\n  let location: Location | undefined;\n  if (stack) {\n    // Now that we filter out internals from our stack traces, we can safely render\n    // the helper / original exception locations.\n    const parsed = prepareErrorStack(stack);\n    tokens.push(parsed.message);\n    location = parsed.location;\n    if (location) {\n      try {\n        const source = fs.readFileSync(location.file, \"utf8\");\n        const codeFrame = codeFrameColumns(\n          source,\n          { start: location },\n          { highlightCode }\n        );\n        // Convert /var/folders to /private/var/folders on Mac.\n        if (!file || fs.realpathSync(file) !== location.file) {\n          tokens.push(\"\");\n          tokens.push(\n            colors.gray(`   at `) +\n              `${relativeFilePath(config, location.file)}:${location.line}`\n          );\n        }\n        tokens.push(\"\");\n        tokens.push(codeFrame);\n      } catch (e) {\n        // Failed to read the source file - that's ok.\n      }\n    }\n    tokens.push(\"\");\n    tokens.push(parsed.stackLines.join(\"\\n\"));\n  } else if (error.message) {\n    tokens.push(error.message);\n  } else if (error.value) {\n    tokens.push(error.value);\n  }\n  return {\n    location,\n    message: tokens.join(\"\\n\"),\n  };\n}\n\nconst stackUtils = new StackUtils();\nfunction parseStackTraceLine(line: string): {\n  frame: StackUtils.StackLineData | null;\n  fileName: string | null;\n} {\n  const frame = stackUtils.parseLine(line);\n  if (!frame) return { frame: null, fileName: null };\n  let fileName: string | null = null;\n  if (frame.file) {\n    // ESM files return file:// URLs, see here: https://github.com/tapjs/stack-utils/issues/60\n    fileName = frame.file.startsWith(\"file://\")\n      ? url.fileURLToPath(frame.file)\n      : path.resolve(process.cwd(), frame.file);\n  }\n  return {\n    frame,\n    fileName,\n  };\n}\n\nexport function formatResultFailure(\n  config: FullConfig,\n  test: TestCase,\n  result: TestResult,\n  initialIndent: string,\n  highlightCode: boolean\n): ErrorDetails[] {\n  const errorDetails: ErrorDetails[] = [];\n\n  if (result.status === \"passed\" && test.expectedStatus === \"failed\") {\n    errorDetails.push({\n      message: indent(\n        colors.red(`Expected to fail, but passed.`),\n        initialIndent\n      ),\n    });\n  }\n  if (result.status === \"interrupted\") {\n    errorDetails.push({\n      message: indent(colors.red(`Test was interrupted.`), initialIndent),\n    });\n  }\n\n  for (const error of result.errors) {\n    const formattedError = formatError(\n      config,\n      error,\n      highlightCode,\n      test.location.file\n    );\n    errorDetails.push({\n      message: indent(formattedError.message, initialIndent),\n      location: formattedError.location,\n    });\n  }\n  return errorDetails;\n}\n","import { FullConfig, TestCase } from \"@playwright/test/reporter\";\nimport { debug as _debug } from \"./debug\";\nimport {\n  getTestCaseProject,\n  testToSpecName,\n  testToTestId,\n} from \"./lib/testCase\";\nimport { getTestCaseCurrentsState } from \"./results/testCaseStatus\";\nimport { Run } from \"./runs\";\n\nconst debug = _debug.extend(\"state\");\n\nexport type TestId = string;\nexport type ProjectId = string;\nexport type SpecId = string;\n\nexport class TestExecutionState {\n  private _testCase: TestCase;\n\n  constructor(testCase: TestCase, readonly projectId: string) {\n    this._testCase = testCase;\n  }\n\n  get testCase() {\n    return this._testCase;\n  }\n\n  get titlePath() {\n    return `${this.testCase.titlePath().filter(Boolean).join(\" > \")}`;\n  }\n\n  get currentsState() {\n    return getTestCaseCurrentsState(this.testCase);\n  }\n\n  isFinished() {\n    const allStatuses = this.testCase.results.map((i) => i.status);\n    debug(\"isFinished?: %o\", {\n      title: this.titlePath,\n      allStatuses,\n      retries: this.testCase.retries,\n    });\n    if (allStatuses.includes(this.testCase.expectedStatus)) {\n      return true;\n    }\n    if (allStatuses.length === this.testCase.retries + 1) {\n      return true;\n    }\n    return false;\n  }\n\n  setTestCase(testCase: TestCase) {\n    this._testCase = testCase;\n    return this;\n  }\n\n  backfillMissingTestResults() {}\n}\n\nexport class SpecExecutionState {\n  private readonly testExecutions: Record<TestId, TestExecutionState> = {};\n\n  constructor(readonly specName: SpecId, readonly projectId: ProjectId) {}\n\n  createTestExecution(testId: TestId, testCase: TestCase) {\n    this.testExecutions[testId] = new TestExecutionState(\n      testCase,\n      this.projectId\n    );\n  }\n\n  getTestExecution(testId: TestId) {\n    return this.testExecutions[testId];\n  }\n\n  getAllTestExecutions() {\n    return Object.values(this.testExecutions);\n  }\n\n  isFinished() {\n    return this.getAllTestExecutions().every((testExecutionState) =>\n      testExecutionState.isFinished()\n    );\n  }\n\n  isFailed() {\n    return this.getAllTestExecutions()\n      .map((i) => i.currentsState)\n      .some((i) => i === \"failed\");\n  }\n}\n\nexport class ProjectExecutionState {\n  readonly specExecutions: Record<SpecId, SpecExecutionState> = {};\n  run: Promise<Run | null> = Promise.resolve(null);\n\n  constructor(readonly projectId: ProjectId) {}\n\n  setRun(run: Promise<Run | null>) {\n    this.run = run;\n    return this;\n  }\n\n  upsertSpecExecution(specName: SpecId, projectId: ProjectId) {\n    if (!this.specExecutions[specName]) {\n      this.specExecutions[specName] = new SpecExecutionState(\n        specName,\n        projectId\n      );\n    }\n    return this.specExecutions[specName];\n  }\n\n  getSpecExecution(specName: SpecId) {\n    return this.specExecutions[specName];\n  }\n\n  getAllSpecExecutions() {\n    return Object.values(this.specExecutions);\n  }\n}\n\nexport class ExecutionState {\n  readonly projectExecutions: Record<ProjectId, ProjectExecutionState> = {};\n  constructor(readonly config: FullConfig) {}\n\n  upsertProjectExecution(projectId: ProjectId) {\n    if (!this.projectExecutions[projectId]) {\n      this.projectExecutions[projectId] = new ProjectExecutionState(projectId);\n    }\n    return this.projectExecutions[projectId];\n  }\n\n  getProjectExecution(projectId: ProjectId) {\n    return this.projectExecutions[projectId];\n  }\n\n  getAllProjectExecutions() {\n    return Object.values(this.projectExecutions);\n  }\n\n  getAllSpecExecutions() {\n    return Object.values(this.projectExecutions).flatMap((p) =>\n      p.getAllSpecExecutions()\n    );\n  }\n\n  getAllTestExecutions() {\n    return this.getAllSpecExecutions().flatMap((s) => s.getAllTestExecutions());\n  }\n\n  getProjectExecutionForTestCase(t: TestCase) {\n    return this.getProjectExecution(getTestCaseProject(t));\n  }\n  getSpecExecution(t: TestCase) {\n    return this.getProjectExecutionForTestCase(t).getSpecExecution(\n      testToSpecName(t, this.config)\n    );\n  }\n  getTestExecution(t: TestCase) {\n    return this.getSpecExecution(t).getTestExecution(testToTestId(t));\n  }\n}\n","import { TestResult } from \"@playwright/test/reporter\";\nimport tojson from \"json-stringify-safe\";\nimport { makeRequest } from \"../http\";\n\nexport function sendTestResult(params: {\n  runId: string;\n  groupId: string;\n  spec: string;\n  reportedAt: string;\n  recordKey: string;\n  retry: number;\n  status: string;\n  title: string[];\n  result: TestResult;\n}) {\n  return makeRequest<any, any>({\n    method: \"POST\",\n    url: `test-result`,\n    data: {\n      ...params,\n      result: tojson(redactResult(params.result)),\n    },\n  }).then((r) => r.data);\n}\n\nfunction redactResult(result: TestResult) {\n  return {\n    ...result,\n    attachments: result.attachments.map((a) => ({\n      ...a,\n      body: a.body ? \"redacted\" : undefined,\n    })),\n  };\n}\n","export * from \"./runs\";\n","import { mapValues } from \"lodash\";\nimport { getCurrentsConfig } from \"../config/config\";\nimport { debug } from \"../debug\";\nimport { getCI } from \"../env/ciProvider\";\nimport { getGitInfo } from \"../env/gitInfo\";\nimport { getPlatformInfo } from \"../env/platform\";\n\nimport { sendCreateRunRequest } from \"./api\";\n\nconst defaulValues = {\n  parallel: true,\n  tags: [],\n  testingType: \"e2e\",\n} as const;\n\ntype TestParams = {\n  title: string[];\n  spec: string;\n};\n\nexport type CreateRunParams = {\n  specs: string[];\n  browser: { name: string; version: string };\n  tests: TestParams[];\n  group: string | null;\n  projectTags: string[];\n};\n\nexport type Run = {\n  groupId: string;\n  machineId: string;\n  runId: string;\n  runUrl: string;\n  isNewRun: boolean;\n  ciBuildId: string;\n  cancellation: string | null;\n  warnings: Array<\n    Record<string, string> & {\n      message: string;\n    }\n  >;\n};\n\nexport async function createRun(runParams: CreateRunParams) {\n  const currentsConfig = getCurrentsConfig();\n  if (!currentsConfig) {\n    return null;\n  }\n\n  const commit = await getGitInfo();\n  const platformInfo = await getPlatformInfo();\n  const { browser } = runParams;\n  const browserInfo = {\n    browserName: browser.name,\n    browserVersion: browser.version,\n  };\n  const platform = { ...browserInfo, ...platformInfo };\n  const ci = getCI(currentsConfig.ciBuildId);\n  const payload = {\n    ...defaulValues,\n    platform,\n    ci,\n    commit,\n    ...runParams,\n    projectId: currentsConfig.projectId,\n    recordKey: currentsConfig.recordKey,\n    ciBuildId: currentsConfig.ciBuildId,\n    tags: [...(currentsConfig.tag ?? []), ...runParams.projectTags],\n    removeTitleTags: !!currentsConfig.removeTitleTags,\n    disableTitleTags: !!currentsConfig.disableTitleTags,\n    autoCancelAfterFailures: currentsConfig.cancelAfterFailures,\n    specPattern: \"*\",\n  };\n\n  debug(\n    \"Creating run: %o\",\n    mapValues(payload, (v, k) => (k === \"recordKey\" ? \"******\" : v))\n  );\n  try {\n    const runCreated = await sendCreateRunRequest(payload);\n    debug(\"Run created: %o\", runCreated);\n    return runCreated;\n  } catch (e) {\n    return null;\n  }\n}\n","/*! @license\n\nParts of this code are from the following project: https://github.com/cypress-io/cypress with the following license:\n\nMIT License\n\nCopyright (c) 2022 Cypress.io\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n// import debugFn from \"debug\";\n// @ts-ignore\nimport {\n  camelCase,\n  chain,\n  defaultTo,\n  findKey,\n  isFunction,\n  isNull,\n  isString,\n  set,\n  some,\n  transform,\n} from \"lodash\";\nimport { getCLIOptionName, getEnvironmentVariableName } from \"../config\";\nimport { debug as _debug } from \"../debug\";\nimport { dim, error } from \"../logger\";\nimport { GhaEventData } from \"./gitInfo\";\n\nconst debug = _debug.extend(\"ci\");\n\nconst join = (char: string, ...pieces: (string | undefined)[]) => {\n  return chain(pieces).compact().join(char).value();\n};\n\nconst toCamelObject = (obj: any, key: string) => {\n  return set(obj, camelCase(key), process.env[key]);\n};\n\nconst extract = (envKeys: string[]) => {\n  return transform(envKeys, toCamelObject, {});\n};\n\n/**\n * Returns true if running on TeamFoundation server.\n * @see https://technet.microsoft.com/en-us/hh850448(v=vs.92)\n */\nconst isTeamFoundation = () => {\n  return process.env.TF_BUILD && process.env.TF_BUILD_BUILDNUMBER;\n};\n\n/**\n * Returns true if running on Azure CI pipeline.\n * See environment variables in the issue #3657\n * @see https://github.com/cypress-io/cypress/issues/3657\n */\nconst isAzureCi = () => {\n  return process.env.TF_BUILD && process.env.AZURE_HTTP_USER_AGENT;\n};\n\nconst isAWSCodeBuild = () => {\n  return some(process.env, (val, key) => {\n    return /^CODEBUILD_/.test(key);\n  });\n};\n\nconst isBamboo = () => {\n  return process.env.bamboo_buildNumber;\n};\n\nconst isCodeshipBasic = () => {\n  return (\n    process.env.CI_NAME &&\n    process.env.CI_NAME === \"codeship\" &&\n    process.env.CODESHIP\n  );\n};\n\nconst isCodeshipPro = () => {\n  return (\n    process.env.CI_NAME &&\n    process.env.CI_NAME === \"codeship\" &&\n    !process.env.CODESHIP\n  );\n};\n\nconst isConcourse = () => {\n  return some(process.env, (val, key) => {\n    return /^CONCOURSE_/.test(key);\n  });\n};\n\nconst isGitlab = () => {\n  return (\n    process.env.GITLAB_CI ||\n    (process.env.CI_SERVER_NAME && /^GitLab/.test(process.env.CI_SERVER_NAME))\n  );\n};\n\nconst isGoogleCloud = () => {\n  // set automatically for the Node.js 6, Node.js 8 runtimes (not in Node 10)\n  // TODO: may also potentially have X_GOOGLE_* env var set\n  // https://cloud.google.com/functions/docs/env-var#environment_variables_set_automatically\n  return (\n    process.env.GCP_PROJECT ||\n    process.env.GCLOUD_PROJECT ||\n    process.env.GOOGLE_CLOUD_PROJECT\n  );\n};\n\nconst isJenkins = () => {\n  return (\n    process.env.JENKINS_URL ||\n    process.env.JENKINS_HOME ||\n    process.env.JENKINS_VERSION ||\n    process.env.HUDSON_URL ||\n    process.env.HUDSON_HOME\n  );\n};\n\nconst isWercker = () => {\n  return process.env.WERCKER || process.env.WERCKER_MAIN_PIPELINE_STARTED;\n};\n\n/**\n * We detect CI providers by detecting an environment variable\n * unique to the provider, or by calling a function that returns true\n * for that provider.\n *\n * For example, AppVeyor CI has environment the\n * variable \"APPVEYOR\" set during run\n */\nconst CI_PROVIDERS = {\n  appveyor: \"APPVEYOR\",\n  azure: isAzureCi,\n  awsCodeBuild: isAWSCodeBuild,\n  bamboo: isBamboo,\n  bitbucket: \"BITBUCKET_BUILD_NUMBER\",\n  buildkite: \"BUILDKITE\",\n  circle: \"CIRCLECI\",\n  codeshipBasic: isCodeshipBasic,\n  codeshipPro: isCodeshipPro,\n  concourse: isConcourse,\n  codeFresh: \"CF_BUILD_ID\",\n  drone: \"DRONE\",\n  githubActions: \"GITHUB_ACTIONS\",\n  gitlab: isGitlab,\n  goCD: \"GO_JOB_NAME\",\n  googleCloud: isGoogleCloud,\n  jenkins: isJenkins,\n  semaphore: \"SEMAPHORE\",\n  shippable: \"SHIPPABLE\",\n  teamcity: \"TEAMCITY_VERSION\",\n  teamfoundation: isTeamFoundation,\n  travis: \"TRAVIS\",\n  wercker: isWercker,\n  netlify: \"NETLIFY\",\n  layerci: \"LAYERCI\",\n};\n\nfunction _detectProviderName(): string | undefined {\n  const { env } = process;\n  // return the key of the first provider\n  // which is truthy\n\n  return findKey(CI_PROVIDERS, (value) => {\n    if (isString(value)) {\n      return env[value];\n    }\n\n    if (isFunction(value)) {\n      return value();\n    }\n  });\n}\n\nconst _providerCiParams = (): ProviderCiParamsRes => {\n  return {\n    appveyor: extract([\n      \"APPVEYOR_JOB_ID\",\n      \"APPVEYOR_ACCOUNT_NAME\",\n      \"APPVEYOR_PROJECT_SLUG\",\n      \"APPVEYOR_BUILD_NUMBER\",\n      \"APPVEYOR_BUILD_VERSION\",\n      \"APPVEYOR_PULL_REQUEST_NUMBER\",\n      \"APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH\",\n    ]),\n    azure: extract([\n      \"BUILD_BUILDID\",\n      \"BUILD_BUILDNUMBER\",\n      \"BUILD_CONTAINERID\",\n      \"BUILD_REPOSITORY_URI\",\n    ]),\n    awsCodeBuild: extract([\n      \"CODEBUILD_BUILD_ID\",\n      \"CODEBUILD_BUILD_NUMBER\",\n      \"CODEBUILD_RESOLVED_SOURCE_VERSION\",\n      \"CODEBUILD_SOURCE_REPO_URL\",\n      \"CODEBUILD_SOURCE_VERSION\",\n    ]),\n    bamboo: extract([\n      \"bamboo_buildNumber\",\n      \"bamboo_buildResultsUrl\",\n      \"bamboo_planRepository_repositoryUrl\",\n      \"bamboo_buildKey\",\n    ]),\n    bitbucket: extract([\n      \"BITBUCKET_REPO_SLUG\",\n      \"BITBUCKET_REPO_OWNER\",\n      \"BITBUCKET_BUILD_NUMBER\",\n      \"BITBUCKET_PARALLEL_STEP\",\n      \"BITBUCKET_STEP_RUN_NUMBER\",\n      // the PR variables are only set on pull request builds\n      \"BITBUCKET_PR_ID\",\n      \"BITBUCKET_PR_DESTINATION_BRANCH\",\n      \"BITBUCKET_PR_DESTINATION_COMMIT\",\n    ]),\n    buildkite: extract([\n      \"BUILDKITE_REPO\",\n      \"BUILDKITE_SOURCE\",\n      \"BUILDKITE_JOB_ID\",\n      \"BUILDKITE_BUILD_ID\",\n      \"BUILDKITE_BUILD_URL\",\n      \"BUILDKITE_BUILD_NUMBER\",\n      \"BUILDKITE_PULL_REQUEST\",\n      \"BUILDKITE_PULL_REQUEST_REPO\",\n      \"BUILDKITE_PULL_REQUEST_BASE_BRANCH\",\n    ]),\n    circle: extract([\n      \"CIRCLE_JOB\",\n      \"CIRCLE_BUILD_NUM\",\n      \"CIRCLE_BUILD_URL\",\n      \"CIRCLE_PR_NUMBER\",\n      \"CIRCLE_PR_REPONAME\",\n      \"CIRCLE_PR_USERNAME\",\n      \"CIRCLE_COMPARE_URL\",\n      \"CIRCLE_WORKFLOW_ID\",\n      \"CIRCLE_PULL_REQUEST\",\n      \"CIRCLE_REPOSITORY_URL\",\n      \"CI_PULL_REQUEST\",\n    ]),\n    codeshipBasic: extract([\n      \"CI_BUILD_ID\",\n      \"CI_REPO_NAME\",\n      \"CI_BUILD_URL\",\n      \"CI_PROJECT_ID\",\n      \"CI_BUILD_NUMBER\",\n      \"CI_PULL_REQUEST\",\n    ]),\n    // CodeshipPro provides very few CI variables\n    // https://documentation.codeship.com/pro/builds-and-configuration/environment-variables/\n    codeshipPro: extract([\"CI_BUILD_ID\", \"CI_REPO_NAME\", \"CI_PROJECT_ID\"]),\n    // https://concourse-ci.org/implementing-resource-types.html#resource-metadata\n    concourse: extract([\n      \"BUILD_ID\",\n      \"BUILD_NAME\",\n      \"BUILD_JOB_NAME\",\n      \"BUILD_PIPELINE_NAME\",\n      \"BUILD_TEAM_NAME\",\n      \"ATC_EXTERNAL_URL\",\n    ]),\n    // https://codefresh.io/docs/docs/codefresh-yaml/variables/\n    codeFresh: extract([\n      \"CF_BUILD_ID\",\n      \"CF_BUILD_URL\",\n      \"CF_CURRENT_ATTEMPT\",\n      \"CF_STEP_NAME\",\n      \"CF_PIPELINE_NAME\",\n      \"CF_PIPELINE_TRIGGER_ID\",\n      // variables added for pull requests\n      \"CF_PULL_REQUEST_ID\",\n      \"CF_PULL_REQUEST_IS_FORK\",\n      \"CF_PULL_REQUEST_NUMBER\",\n      \"CF_PULL_REQUEST_TARGET\",\n    ]),\n    drone: extract([\n      \"DRONE_JOB_NUMBER\",\n      \"DRONE_BUILD_LINK\",\n      \"DRONE_BUILD_NUMBER\",\n      \"DRONE_PULL_REQUEST\",\n    ]),\n    // https://help.github.com/en/actions/automating-your-workflow-with-github-actions/using-environment-variables#default-environment-variables\n    githubActions: extract([\n      \"GITHUB_WORKFLOW\",\n      \"GITHUB_ACTION\",\n      \"GITHUB_EVENT_NAME\",\n      \"GITHUB_RUN_ID\",\n      \"GITHUB_RUN_ATTEMPT\",\n      \"GITHUB_REPOSITORY\",\n    ]),\n    // see https://docs.gitlab.com/ee/ci/variables/\n    gitlab: extract([\n      // pipeline is common among all jobs\n      \"CI_PIPELINE_ID\",\n      \"CI_PIPELINE_URL\",\n      // individual jobs\n      \"CI_BUILD_ID\", // build id and job id are aliases\n      \"CI_JOB_ID\",\n      \"CI_JOB_URL\",\n      \"CI_JOB_NAME\",\n      // other information\n      \"GITLAB_HOST\",\n      \"CI_PROJECT_ID\",\n      \"CI_PROJECT_URL\",\n      \"CI_REPOSITORY_URL\",\n      \"CI_ENVIRONMENT_URL\",\n      \"CI_DEFAULT_BRANCH\",\n      // for PRs: https://gitlab.com/gitlab-org/gitlab-ce/issues/23902\n    ]),\n    // https://docs.gocd.org/current/faq/dev_use_current_revision_in_build.html#standard-gocd-environment-variables\n    goCD: extract([\n      \"GO_SERVER_URL\",\n      \"GO_ENVIRONMENT_NAME\",\n      \"GO_PIPELINE_NAME\",\n      \"GO_PIPELINE_COUNTER\",\n      \"GO_PIPELINE_LABEL\",\n      \"GO_STAGE_NAME\",\n      \"GO_STAGE_COUNTER\",\n      \"GO_JOB_NAME\",\n      \"GO_TRIGGER_USER\",\n      \"GO_REVISION\",\n      \"GO_TO_REVISION\",\n      \"GO_FROM_REVISION\",\n      \"GO_MATERIAL_HAS_CHANGED\",\n    ]),\n    googleCloud: extract([\n      // individual jobs\n      \"BUILD_ID\",\n      \"PROJECT_ID\",\n      // other information\n      \"REPO_NAME\",\n      \"BRANCH_NAME\",\n      \"TAG_NAME\",\n      \"COMMIT_SHA\",\n      \"SHORT_SHA\",\n      // https://cloud.google.com/cloud-build/docs/api/reference/rest/Shared.Types/Build\n    ]),\n    jenkins: extract([\"BUILD_ID\", \"BUILD_URL\", \"BUILD_NUMBER\", \"ghprbPullId\"]),\n    // https://semaphoreci.com/docs/available-environment-variables.html\n    // some come from v1, some from v2 of semaphore\n    semaphore: extract([\n      \"SEMAPHORE_BRANCH_ID\",\n      \"SEMAPHORE_BUILD_NUMBER\",\n      \"SEMAPHORE_CURRENT_JOB\",\n      \"SEMAPHORE_CURRENT_THREAD\",\n      \"SEMAPHORE_EXECUTABLE_UUID\",\n      \"SEMAPHORE_GIT_BRANCH\",\n      \"SEMAPHORE_GIT_DIR\",\n      \"SEMAPHORE_GIT_REF\",\n      \"SEMAPHORE_GIT_REF_TYPE\",\n      \"SEMAPHORE_GIT_REPO_SLUG\",\n      \"SEMAPHORE_GIT_SHA\",\n      \"SEMAPHORE_GIT_URL\",\n      \"SEMAPHORE_JOB_COUNT\",\n      \"SEMAPHORE_JOB_ID\", // v2\n      \"SEMAPHORE_JOB_NAME\",\n      \"SEMAPHORE_JOB_UUID\", // v1\n      \"SEMAPHORE_PIPELINE_ID\",\n      \"SEMAPHORE_PLATFORM\",\n      \"SEMAPHORE_PROJECT_DIR\",\n      \"SEMAPHORE_PROJECT_HASH_ID\",\n      \"SEMAPHORE_PROJECT_ID\", // v2\n      \"SEMAPHORE_PROJECT_NAME\",\n      \"SEMAPHORE_PROJECT_UUID\", // v1\n      \"SEMAPHORE_REPO_SLUG\",\n      \"SEMAPHORE_TRIGGER_SOURCE\",\n      \"SEMAPHORE_WORKFLOW_ID\",\n      \"PULL_REQUEST_NUMBER\", // pull requests from forks ONLY\n    ]),\n    // see http://docs.shippable.com/ci/env-vars/\n    shippable: extract([\n      // build variables\n      \"SHIPPABLE_BUILD_ID\", // \"5b93354cabfabb07007f01fd\"\n      \"SHIPPABLE_BUILD_NUMBER\", // \"4\"\n      \"SHIPPABLE_COMMIT_RANGE\", // \"sha1...sha2\"\n      \"SHIPPABLE_CONTAINER_NAME\", // \"c.exec.cypress-example-kitchensink.4.1\"\n      \"SHIPPABLE_JOB_ID\", // \"1\"\n      \"SHIPPABLE_JOB_NUMBER\", // \"1\"\n      \"SHIPPABLE_REPO_SLUG\", // \"<username>/<repo>\"\n      // additional information that Shippable provides\n      \"IS_FORK\", // \"true\"\n      \"IS_GIT_TAG\", // \"false\"\n      \"IS_PRERELEASE\", // \"false\"\n      \"IS_RELEASE\", // \"false\"\n      \"REPOSITORY_URL\", // \"https://github.com/....git\"\n      \"REPO_FULL_NAME\", // \"<username>/<repo>\"\n      \"REPO_NAME\", // \"cypress-example-kitchensink\"\n      \"BUILD_URL\", // \"https://app.shippable.com/github/<username>/<repo>/runs/1\"\n      // Pull request information\n      \"BASE_BRANCH\", // Name of the target branch into which the pull request changes will be merged.\n      \"HEAD_BRANCH\", // This is only set for pull requests and is the name of the branch the pull request was opened from.\n      \"IS_PULL_REQUEST\", // \"false\" or \"true\"\n      \"PULL_REQUEST\", // Pull request number if the job is a pull request. If not, this will be set to false.\n      \"PULL_REQUEST_BASE_BRANCH\", // Name of the branch that the pull request will be merged into. It should be the same as BASE_BRANCH.\n      \"PULL_REQUEST_REPO_FULL_NAME\", // Full name of the repository from where the pull request originated.\n    ]),\n    teamcity: null,\n    teamfoundation: extract([\n      \"BUILD_BUILDID\",\n      \"BUILD_BUILDNUMBER\",\n      \"BUILD_CONTAINERID\",\n    ]),\n    travis: extract([\n      \"TRAVIS_JOB_ID\",\n      \"TRAVIS_BUILD_ID\",\n      \"TRAVIS_BUILD_WEB_URL\",\n      \"TRAVIS_REPO_SLUG\",\n      \"TRAVIS_JOB_NUMBER\",\n      \"TRAVIS_EVENT_TYPE\",\n      \"TRAVIS_COMMIT_RANGE\",\n      \"TRAVIS_BUILD_NUMBER\",\n      \"TRAVIS_PULL_REQUEST\",\n      \"TRAVIS_PULL_REQUEST_BRANCH\",\n      \"TRAVIS_PULL_REQUEST_SHA\",\n    ]),\n    wercker: null,\n    // https://docs.netlify.com/configure-builds/environment-variables/#deploy-urls-and-metadata\n    netlify: extract([\n      \"BUILD_ID\",\n      \"CONTEXT\",\n      \"URL\",\n      \"DEPLOY_URL\",\n      \"DEPLOY_PRIME_URL\",\n      \"DEPLOY_ID\",\n    ]),\n    // https://layerci.com/docs/layerfile-reference/build-env\n    layerci: extract([\n      \"LAYERCI_JOB_ID\",\n      \"LAYERCI_RUNNER_ID\",\n      \"RETRY_INDEX\",\n      \"LAYERCI_PULL_REQUEST\",\n      \"LAYERCI_REPO_NAME\",\n      \"LAYERCI_REPO_OWNER\",\n      \"LAYERCI_BRANCH\",\n      \"GIT_TAG\", // short hex for commits\n    ]),\n  };\n};\n\n// tries to grab commit information from CI environment variables\n// very useful to fill missing information when Git cannot grab correct values\nconst _providerCommitParams = (): ProviderCommitParamsRes => {\n  const { env } = process;\n\n  return {\n    appveyor: {\n      sha: env.APPVEYOR_REPO_COMMIT,\n      // since APPVEYOR_REPO_BRANCH will be the target branch on a PR\n      // we need to use PULL_REQUEST_HEAD_REPO_BRANCH if it exists.\n      // e.g. if you have a PR: develop <- my-feature-branch\n      // my-feature-branch is APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH\n      // develop           is APPVEYOR_REPO_BRANCH\n      branch:\n        env.APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH || env.APPVEYOR_REPO_BRANCH,\n      message: join(\n        \"\\n\",\n        env.APPVEYOR_REPO_COMMIT_MESSAGE,\n        env.APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED\n      ),\n      authorName: env.APPVEYOR_REPO_COMMIT_AUTHOR,\n      authorEmail: env.APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL,\n      // remoteOrigin: ???\n      // defaultBranch: ???\n    },\n    awsCodeBuild: {\n      sha: env.CODEBUILD_RESOLVED_SOURCE_VERSION,\n      // branch: ???,\n      // message: ???\n      // authorName: ???\n      // authorEmail: ???\n      remoteOrigin: env.CODEBUILD_SOURCE_REPO_URL,\n      // defaultBranch: ???\n    },\n    azure: {\n      sha: env.BUILD_SOURCEVERSION,\n      branch: env.BUILD_SOURCEBRANCHNAME,\n      message: env.BUILD_SOURCEVERSIONMESSAGE,\n      authorName: env.BUILD_SOURCEVERSIONAUTHOR,\n      authorEmail: env.BUILD_REQUESTEDFOREMAIL,\n    },\n    bamboo: {\n      sha: env.bamboo_planRepository_revision,\n      branch: env.bamboo_planRepository_branch,\n      // message: ???\n      authorName: env.bamboo_planRepository_username,\n      // authorEmail: ???\n      remoteOrigin: env.bamboo_planRepository_repositoryURL,\n      // defaultBranch: ???\n    },\n    bitbucket: {\n      sha: env.BITBUCKET_COMMIT,\n      branch: env.BITBUCKET_BRANCH,\n      // message: ???\n      // authorName: ???\n      // authorEmail: ???\n      // remoteOrigin: ???\n      // defaultBranch: ???\n    },\n    buildkite: {\n      sha: env.BUILDKITE_COMMIT,\n      branch: env.BUILDKITE_BRANCH,\n      message: env.BUILDKITE_MESSAGE,\n      authorName: env.BUILDKITE_BUILD_CREATOR,\n      authorEmail: env.BUILDKITE_BUILD_CREATOR_EMAIL,\n      remoteOrigin: env.BUILDKITE_REPO,\n      defaultBranch: env.BUILDKITE_PIPELINE_DEFAULT_BRANCH,\n    },\n    circle: {\n      sha: env.CIRCLE_SHA1,\n      branch: env.CIRCLE_BRANCH,\n      // message: ???\n      authorName: env.CIRCLE_USERNAME,\n      // authorEmail: ???\n      remoteOrigin: env.CIRCLE_REPOSITORY_URL,\n      // defaultBranch: ???\n    },\n    codeshipBasic: {\n      sha: env.CI_COMMIT_ID,\n      branch: env.CI_BRANCH,\n      message: env.CI_COMMIT_MESSAGE,\n      authorName: env.CI_COMMITTER_NAME,\n      authorEmail: env.CI_COMMITTER_EMAIL,\n      // remoteOrigin: ???\n      // defaultBranch: ???\n    },\n    codeshipPro: {\n      sha: env.CI_COMMIT_ID,\n      branch: env.CI_BRANCH,\n      message: env.CI_COMMIT_MESSAGE,\n      authorName: env.CI_COMMITTER_NAME,\n      authorEmail: env.CI_COMMITTER_EMAIL,\n      // remoteOrigin: ???\n      // defaultBranch: ???\n    },\n    codeFresh: {\n      sha: env.CF_REVISION,\n      branch: env.CF_BRANCH,\n      message: env.CF_COMMIT_MESSAGE,\n      authorName: env.CF_COMMIT_AUTHOR,\n    },\n    drone: {\n      sha: env.DRONE_COMMIT_SHA,\n      // https://docs.drone.io/pipeline/environment/reference/drone-source-branch/\n      branch: env.DRONE_SOURCE_BRANCH,\n      message: env.DRONE_COMMIT_MESSAGE,\n      authorName: env.DRONE_COMMIT_AUTHOR,\n      authorEmail: env.DRONE_COMMIT_AUTHOR_EMAIL,\n      remoteOrigin: env.DRONE_GIT_HTTP_URL,\n      defaultBranch: env.DRONE_REPO_BRANCH,\n    },\n    githubActions: {\n      sha: env.GITHUB_SHA,\n      branch: env.GH_BRANCH || env.GITHUB_REF,\n      defaultBranch: env.GITHUB_BASE_REF,\n      remoteBranch: env.GITHUB_HEAD_REF,\n      runAttempt: env.GITHUB_RUN_ATTEMPT,\n    },\n    gitlab: {\n      sha: env.CI_COMMIT_SHA,\n      branch: env.CI_COMMIT_REF_NAME,\n      message: env.CI_COMMIT_MESSAGE,\n      authorName: env.GITLAB_USER_NAME,\n      authorEmail: env.GITLAB_USER_EMAIL,\n      remoteOrigin: env.CI_REPOSITORY_URL,\n      defaultBranch: env.CI_DEFAULT_BRANCH,\n    },\n    googleCloud: {\n      sha: env.COMMIT_SHA,\n      branch: env.BRANCH_NAME,\n      // message: ??\n      // authorName: ??\n      // authorEmail: ??\n      // remoteOrigin: ???\n      // defaultBranch: ??\n    },\n    jenkins: {\n      sha: env.GIT_COMMIT,\n      branch: env.GIT_BRANCH,\n      // message: ???\n      // authorName: ???\n      // authorEmail: ???\n      // remoteOrigin: ???\n      // defaultBranch: ???\n    },\n    // Only from forks? https://semaphoreci.com/docs/available-environment-variables.html\n    semaphore: {\n      sha: env.SEMAPHORE_GIT_SHA,\n      branch: env.SEMAPHORE_GIT_BRANCH,\n      // message: ???\n      // authorName: ???\n      // authorEmail: ???\n      remoteOrigin: env.SEMAPHORE_GIT_REPO_SLUG,\n      // defaultBranch: ???\n    },\n    shippable: {\n      sha: env.COMMIT,\n      branch: env.BRANCH,\n      message: env.COMMIT_MESSAGE,\n      authorName: env.COMMITTER,\n      // authorEmail: ???\n      // remoteOrigin: ???\n      // defaultBranch: ???\n    },\n    snap: null,\n    teamcity: null,\n    teamfoundation: {\n      sha: env.BUILD_SOURCEVERSION,\n      branch: env.BUILD_SOURCEBRANCHNAME,\n      message: env.BUILD_SOURCEVERSIONMESSAGE,\n      authorName: env.BUILD_SOURCEVERSIONAUTHOR,\n    },\n    travis: {\n      sha: env.TRAVIS_PULL_REQUEST_SHA || env.TRAVIS_COMMIT,\n      // for PRs, TRAVIS_BRANCH is the base branch being merged into\n      branch: env.TRAVIS_PULL_REQUEST_BRANCH || env.TRAVIS_BRANCH,\n      // authorName: ???\n      // authorEmail: ???\n      message: env.TRAVIS_COMMIT_MESSAGE,\n      // remoteOrigin: ???\n      // defaultBranch: ???\n    },\n    wercker: null,\n    netlify: {\n      sha: env.COMMIT_REF,\n      branch: env.BRANCH,\n      remoteOrigin: env.REPOSITORY_URL,\n    },\n    layerci: {\n      sha: env.GIT_COMMIT,\n      branch: env.LAYERCI_BRANCH,\n      message: env.GIT_COMMIT_TITLE,\n    },\n  };\n};\n\ntype CiProviderData = {\n  sha?: string;\n  branch?: string;\n  message?: string;\n  authorName?: string;\n  authorEmail?: string;\n  remoteOrigin?: string;\n  defaultBranch?: string;\n  remoteBranch?: string;\n  runAttempt?: string;\n  ghaEventData?: GhaEventData;\n};\n\ninterface ProviderCommitParamsRes {\n  [key: string]: CiProviderData | null;\n}\n\ninterface ProviderCiParamsRes {\n  [key: string]: {\n    [key: string]: string | undefined;\n  } | null;\n}\n\nconst _get = (fn: () => ProviderCommitParamsRes | ProviderCiParamsRes) => {\n  const providerName = getCiProvider();\n  if (!providerName) return {};\n\n  return chain(fn()).get(providerName).value();\n};\n\n/**\n * If there is no build ID specifically provided by user\n * Check if we can fetch it automatically from CI variables.\n * The process will stop if we cannot do it\n * https://docs.cypress.io/guides/references/error-messages#We-could-not-determine-a-unique-CI-build-ID\n */\nfunction checkForCiBuildFromCi(ciProvider: string | null) {\n  if (ciProvider && detectableCiBuildIdProviders().includes(ciProvider)) {\n    return true;\n  }\n\n  error(`Currents failed to automatically detect CI build ID for this environment. Please use one of the following to set CI build ID:\n  \n- use environment variable: ${dim(getEnvironmentVariableName(\"ciBuildId\"))}\n- as CLI flag of pwc command: ${dim(getCLIOptionName(\"ciBuildId\"))}\n- as reporter configuration option ${dim(\"ciBuildId\")} in ${dim(\n    \"playwright.config.ts\"\n  )}\n\n📖 https://currents.dev/readme/guides/ci-build-id\n📖 https://currents.dev/readme/integration-with-playwright/currents-playwright\n`);\n\n  throw new Error(\"We could not determine a unique CI Build ID\");\n}\n\n// grab all detectable providers\n// that we can extract ciBuildId from\nfunction detectableCiBuildIdProviders() {\n  return chain(_providerCiParams()).omitBy(isNull).keys().value();\n}\n\ntype CiProvider = string | null;\n\nfunction getCiProvider(): CiProvider {\n  return _detectProviderName() || null;\n}\n\nfunction getCiParams() {\n  return _get(_providerCiParams);\n}\n\nfunction getCommitParams() {\n  return _get(_providerCommitParams);\n}\n\nexport function getCI(ciBuildId?: string) {\n  const params = getCiParams();\n  const provider = getCiProvider();\n  if (!ciBuildId) checkForCiBuildFromCi(provider);\n\n  debug(\"detected CI provider: %s\", provider);\n  debug(\"detected CI params: %O\", params);\n  return {\n    params,\n    provider,\n  };\n}\n\nexport function getCommitDefaults(existingInfo: CiProviderData) {\n  debug(\"git commit existing info\");\n  debug(existingInfo);\n\n  const commitParamsObj = getCommitParams();\n\n  debug(\"commit info from provider environment variables: %O\", commitParamsObj);\n\n  // based on the existingInfo properties\n  // merge in the commitParams if null or undefined\n  // defaulting back to null if all fails\n  // NOTE: only properties defined in \"existingInfo\" will be returned\n  const combined = transform(\n    existingInfo,\n    (\n      memo: { [memoKey: string]: string | null },\n      value: string,\n      key: string\n    ) => {\n      return (memo[key] = defaultTo(value || commitParamsObj[key], null));\n    }\n  );\n\n  debug(\"combined git and environment variables from provider\");\n  debug(combined);\n\n  return combined;\n}\n","export * from \"./config\";\nexport * from \"./env\";\nexport * from \"./options\";\n","// @ts-ignore\nimport { commitInfo } from \"@currents/commit-info\";\nimport { memoize } from \"lodash\";\nimport { getCommitDefaults } from \"./ciProvider\";\n\nexport type GhaEventData = {\n  headRef: string;\n  headSha: string;\n  baseRef: string;\n  baseSha: string;\n  issueUrl: string;\n  htmlUrl: string;\n  prTitle: string;\n  senderAvatarUrl: string;\n  senderHtmlUrl: string;\n};\n\ntype DefaultFormat = {\n  branch: string;\n  message: string;\n  email: string;\n  author: string;\n  sha: string;\n  timestamp: string;\n  remote: string;\n  ghaEventData?: GhaEventData;\n};\n\nexport type Commit = {\n  sha: string;\n  branch: string;\n  authorName: string;\n  authorEmail: string;\n  message: string;\n  remoteOrigin: string;\n  // not sure if this one is ever used\n  defaultBranch: null;\n  ghaEventData?: GhaEventData;\n};\n\nconst _getGitInfo = async (): Promise<Commit> => {\n  const commit: DefaultFormat = await commitInfo();\n\n  return getCommitDefaults({\n    branch: commit.branch,\n    remoteOrigin: commit.remote,\n    authorEmail: commit.email,\n    authorName: commit.author,\n    message: commit.message,\n    sha: commit.sha,\n    ghaEventData: commit.ghaEventData,\n  }) as unknown as Commit;\n};\n\nexport const getGitInfo = memoize(_getGitInfo);\n","import getos from \"getos\";\nimport { memoize } from \"lodash\";\nimport { freemem, platform, release, totalmem } from \"os\";\nimport { promisify } from \"util\";\n\nconst getOsVersion = async () => {\n  if (platform() === \"linux\") {\n    try {\n      const linuxOs = await promisify(getos)();\n      if (\"dist\" in linuxOs && \"release\" in linuxOs) {\n        return [linuxOs.dist, linuxOs.release].join(\" - \");\n      } else {\n        return release();\n      }\n    } catch {\n      return release();\n    }\n  }\n  return release();\n};\n\nexport const _getPlatformInfo = async () => {\n  const osVersion = await getOsVersion();\n  return {\n    osName: platform(),\n    osVersion,\n    osCpus: [],\n    osMemory: {\n      free: freemem(),\n      total: totalmem(),\n    },\n  };\n};\n\nexport const getPlatformInfo = memoize(_getPlatformInfo);\n","import { makeRequest } from \"../http\";\nimport { Run } from \"./runs\";\n\nexport function sendCreateRunRequest(payload: unknown) {\n  return makeRequest<Run>({\n    method: \"POST\",\n    url: `runs`,\n    data: payload,\n  })\n    .then((r) => r.data)\n    .catch((e) => {\n      if (e.response && e.response.status === 422) {\n        return null;\n      }\n      throw e;\n    });\n}\n","import { pwcScanner } from \"@currents/pwc-scanner\";\nimport { FullConfig } from \"@playwright/test\";\nimport { getCurrentsConfig } from \"../config\";\nimport { error, warn } from \"../logger\";\nimport { getFSTestSuite } from \"./test-suite\";\n\nexport async function getFullTestSuite(config: FullConfig) {\n  try {\n    const currentsConfig = getCurrentsConfig();\n    const testSuiteFromFS = currentsConfig\n      ? getFSTestSuite(currentsConfig)\n      : null;\n\n    if (testSuiteFromFS) return testSuiteFromFS;\n\n    const internalConfig = getInternalConfig(config);\n    if (!internalConfig) return null;\n\n    const scannerConfig = {\n      config: config.configFile,\n      grep: regexpToString(internalConfig.cliGrep),\n      grepInvert: regexpToString(internalConfig.grepInvert),\n    };\n\n    return pwcScanner(scannerConfig)\n      .then((v) => v.result)\n      .catch((e) => {\n        error(e);\n        return null;\n      });\n  } catch (e) {\n    error(e);\n  }\n}\n\nfunction regexpToString(regexp: RegExp | RegExp[] | null): string | null {\n  debugger;\n  if (!regexp) return null;\n  return (\n    (Array.isArray(regexp) ? regexp : [regexp])\n      // .map((v) => v.source)\n      .join(\",\")\n  );\n}\n\ntype InternalPWConfig = {\n  cliGrep: RegExp | RegExp[] | null;\n  grepInvert: RegExp | RegExp[] | null;\n};\nfunction getInternalConfig(config: FullConfig): InternalPWConfig | null {\n  const symbols = Object.getOwnPropertySymbols(config);\n  const fullConfig = symbols.find((s) =>\n    s.toString().match(/configInternalSymbol/)\n  );\n  if (!fullConfig) {\n    warn(\"Could not extract internal playwright configuration\");\n    return null;\n  }\n  // @ts-ignore\n  return config[fullConfig];\n}\n","import { parseTestSuite } from \"@currents/pwc-parser\";\nimport Debug from \"debug\";\n\nconst debug = Debug(\"pwc-scanner\");\n\nexport const pwcScanner = async (params: {\n  project?: string;\n  grep: string | null;\n  grepInvert: string | null;\n  config?: string;\n}) => {\n  // https://github.com/microsoft/TypeScript/issues/43329\n  // @ts-ignore\n  const { execa } = (await eval('import(\"execa\")')) as Promise<\n    typeof import(\"execa\")\n  >;\n\n  const cliParams = [\n    \"test\",\n    \"--list\",\n    ...Object.entries(params)\n      .filter(([_, value]) => value !== undefined)\n      .map(([key, value]) => `${toCliParam(key)}=${value}`),\n    \"--reporter=list\", // do not use any configuration reporters\n    \"--shard=1/1\", // override the option that was potentially set in the configuration file\n  ];\n\n  debug(\"running playwright with the following params: %o\", cliParams);\n\n  const execaResult = await execa(\"playwright\", cliParams, {\n    env: {\n      PWTEST_WATCH: undefined, // no don use if passed\n    },\n  });\n\n  debug(\"execa result: %o\", execaResult);\n\n  if (execaResult.failed) {\n    return { execaResult, result: null };\n  }\n\n  return { execaResult, result: parseTestSuite(execaResult.stdout) };\n};\n\nconst toCliParam = (param: string) => {\n  switch (param) {\n    case \"project\":\n      return \"--project\";\n    case \"grep\":\n      return \"--grep\";\n    case \"grepInvert\":\n      return \"--grep-invert\";\n    case \"config\":\n      return \"--config\";\n    default:\n      throw new Error(\"Invalid param\");\n  }\n};\n","import { parse } from \"./parser\";\n\nexport function parseTestSuite(input: string, playwrightVersion?: string) {\n  return parse(input);\n}\n\nexport { type TestSuite } from \"./parser\";\n","export type TestSuite = {\n  [x: string]: Record<string, string[]>;\n};\n\nexport const parse = (inputString: string): TestSuite => {\n  const lines = inputString.split(\"\\n\");\n  const result: TestSuite = {};\n\n  for (const line of lines) {\n    const match = line.match(/\\[([^\\]]+)\\] › ([^:]+):(\\d+:\\d+) › (.+)/);\n    if (match) {\n      const [_, project, spec, lineNum, testName] = match;\n      if (!result[project]) {\n        result[project] = {};\n      }\n      if (!result[project][spec]) {\n        result[project][spec] = [];\n      }\n\n      result[project][spec].push(testName);\n    }\n  }\n\n  return result;\n};\n","import fs from \"fs\";\nimport { isMatching, match, P } from \"ts-pattern\";\nimport { CurrentsConfig } from \"../config\";\n\n\nexport const getFSTestSuite = (config: CurrentsConfig) => match(config)\n    .with({ testSuiteFile: P.not(P.nullish) }, (c) => c.testSuiteFile)\n    .with(\n      { testSuiteFile: P.string },\n      (c) => isMatching({ testSuite: P.nullish, testSuiteFile: P.string }, c),\n      ({ testSuiteFile }) => {\n        try {\n          return JSON.parse(fs.readFileSync(testSuiteFile, \"utf-8\"));\n        } catch (e) {\n          return null;\n        }\n      }\n    )\n    .otherwise(() => null);\n"],"mappings":"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SAASE,IAA0C,CACjD,GAAM,CAAE,IAAAC,CAAI,EAAI,QAIhB,SAAO,WAAQF,GAAeG,GAAU,CACtC,MAAI,YAASA,CAAK,EAChB,OAAOD,EAAIC,CAAK,EAGlB,MAAI,cAAWA,CAAK,EAClB,OAAOA,EAAM,CAEjB,CAAC,CACH,CAEA,IAAMC,GAAoB,KACjB,CACL,SAAUlB,EAAQ,CAChB,kBACA,wBACA,wBACA,wBACA,yBACA,+BACA,wCACF,CAAC,EACD,MAAOA,EAAQ,CACb,gBACA,oBACA,oBACA,sBACF,CAAC,EACD,aAAcA,EAAQ,CACpB,qBACA,yBACA,oCACA,4BACA,0BACF,CAAC,EACD,OAAQA,EAAQ,CACd,qBACA,yBACA,sCACA,iBACF,CAAC,EACD,UAAWA,EAAQ,CACjB,sBACA,uBACA,yBACA,0BACA,4BAEA,kBACA,kCACA,iCACF,CAAC,EACD,UAAWA,EAAQ,CACjB,iBACA,mBACA,mBACA,qBACA,sBACA,yBACA,yBACA,8BACA,oCACF,CAAC,EACD,OAAQA,EAAQ,CACd,aACA,mBACA,mBACA,mBACA,qBACA,qBACA,qBACA,qBACA,sBACA,wBACA,iBACF,CAAC,EACD,cAAeA,EAAQ,CACrB,cACA,eACA,eACA,gBACA,kBACA,iBACF,CAAC,EAGD,YAAaA,EAAQ,CAAC,cAAe,eAAgB,eAAe,CAAC,EAErE,UAAWA,EAAQ,CACjB,WACA,aACA,iBACA,sBACA,kBACA,kBACF,CAAC,EAED,UAAWA,EAAQ,CACjB,cACA,eACA,qBACA,eACA,mBACA,yBAEA,qBACA,0BACA,yBACA,wBACF,CAAC,EACD,MAAOA,EAAQ,CACb,mBACA,mBACA,qBACA,oBACF,CAAC,EAED,cAAeA,EAAQ,CACrB,kBACA,gBACA,oBACA,gBACA,qBACA,mBACF,CAAC,EAED,OAAQA,EAAQ,CAEd,iBACA,kBAEA,cACA,YACA,aACA,cAEA,cACA,gBACA,iBACA,oBACA,qBACA,mBAEF,CAAC,EAED,KAAMA,EAAQ,CACZ,gBACA,sBACA,mBACA,sBACA,oBACA,gBACA,mBACA,cACA,kBACA,cACA,iBACA,mBACA,yBACF,CAAC,EACD,YAAaA,EAAQ,CAEnB,WACA,aAEA,YACA,cACA,WACA,aACA,WAEF,CAAC,EACD,QAASA,EAAQ,CAAC,WAAY,YAAa,eAAgB,aAAa,CAAC,EAGzE,UAAWA,EAAQ,CACjB,sBACA,yBACA,wBACA,2BACA,4BACA,uBACA,oBACA,oBACA,yBACA,0BACA,oBACA,oBACA,sBACA,mBACA,qBACA,qBACA,wBACA,qBACA,wBACA,4BACA,uBACA,yBACA,yBACA,sBACA,2BACA,wBACA,qBACF,CAAC,EAED,UAAWA,EAAQ,CAEjB,qBACA,yBACA,yBACA,2BACA,mBACA,uBACA,sBAEA,UACA,aACA,gBACA,aACA,iBACA,iBACA,YACA,YAEA,cACA,cACA,kBACA,eACA,2BACA,6BACF,CAAC,EACD,SAAU,KACV,eAAgBA,EAAQ,CACtB,gBACA,oBACA,mBACF,CAAC,EACD,OAAQA,EAAQ,CACd,gBACA,kBACA,uBACA,mBACA,oBACA,oBACA,sBACA,sBACA,sBACA,6BACA,yBACF,CAAC,EACD,QAAS,KAET,QAASA,EAAQ,CACf,WACA,UACA,MACA,aACA,mBACA,WACF,CAAC,EAED,QAASA,EAAQ,CACf,iBACA,oBACA,cACA,uBACA,oBACA,qBACA,iBACA,SACF,CAAC,CACH,GAKImB,GAAwB,IAA+B,CAC3D,GAAM,CAAE,IAAAH,CAAI,EAAI,QAEhB,MAAO,CACL,SAAU,CACR,IAAKA,EAAI,qBAMT,OACEA,EAAI,wCAA0CA,EAAI,qBACpD,QAAStB,GACP;AAAA,EACAsB,EAAI,6BACJA,EAAI,qCACN,EACA,WAAYA,EAAI,4BAChB,YAAaA,EAAI,iCAGnB,EACA,aAAc,CACZ,IAAKA,EAAI,kCAKT,aAAcA,EAAI,yBAEpB,EACA,MAAO,CACL,IAAKA,EAAI,oBACT,OAAQA,EAAI,uBACZ,QAASA,EAAI,2BACb,WAAYA,EAAI,0BAChB,YAAaA,EAAI,uBACnB,EACA,OAAQ,CACN,IAAKA,EAAI,+BACT,OAAQA,EAAI,6BAEZ,WAAYA,EAAI,+BAEhB,aAAcA,E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","names":["init_cjs_shims","__esmMin","import_nanoid","getRandomString","init_nano","__esmMin","init_cjs_shims","getLogDrain","logDrain","addToLogDrain","str","init_logDrain","__esmMin","init_cjs_shims","import_chalk","import_util","log","info","warn","error","title","divider","spacer","cyan","blue","red","green","gray","white","magenta","dim","init_logger","__esmMin","init_cjs_shims","init_debug","init_logDrain","args","stringToRender","util","addToLogDrain","debug","chalk","n","init_logger","__esmMin","init_cjs_shims","init_logDrain","uploadText","file","url","sendPath","upload","contentType","onUploadProgress","buffer","fs","debug","send","sendBuffer","_send","axios","args","retry","error","retryCount","warn","import_async_retry","import_axios","import_promises","ContentType","init_send","__esmMin","init_cjs_shims","init_debug","init_logger","package_default","init_package","__esmMin","pwcVersion","init_versions","__esmMin","init_cjs_shims","init_package","package_default","addEventListeners","pubsub","onRunCancelled","removeEventListeners","getCancellationReason","import_events","init_pubsub","__esmMin","init_cjs_shims","init_logger","init_cancellation","EventEmitter","state","setCancellationReason","getCancellationReason","maybeCancelRun","init_cancellation","__esmMin","init_cjs_shims","init_logger","init_pubsub","reason","showWarning","cancellationReason","warn","pubsub","init_cancellation","__esmMin","init_cjs_shims","import_axios","isRetriableError","getDelay","getAPIBaseUrl","init_httpConfig","__esmMin","init_cjs_shims","err","i","maybePrintErrors","err","warn","response","data","message","errors","spacer","formatGenericError","error","_","e","import_lodash","import_ts_pattern","init_printErrors","__esmMin","init_cjs_shims","init_logger","setPWVersion","version","headers","getClient","_client","axios","getAPIBaseUrl","config","args","_","debug","getNetworkRequestDebugData","axiosRetry","MAX_RETRIES","isRetriableError","getDelay","onRetry","data","retryCount","err","_config","warn","prettyMilliseconds","handleAxiosError","error","ErrorCodes","setCancellationReason","maybeCancelRun","import_axios","import_axios_retry","import_lodash","import_pretty_ms","import_ts_pattern","makeRequest","init_http","__esmMin","init_cjs_shims","init_debug","init_versions","init_cancellation","init_logger","init_httpConfig","init_printErrors","pwcVersion","res","maybePrintErrors","init_http","__esmMin","init_cjs_shims","init_send","api_exports","__export","getDebugUrl","init_api","__esmMin","init_cjs_shims","init_http","runId","type","makeRequest","result","upload_exports","__export","ContentType","sendBuffer","sendPath","uploadText","init_upload","__esmMin","init_cjs_shims","init_send","shouldEnableRemoteDebug","mode","shouldMuteLocalStdout","initDebug","params","debugPattern","Debug","id","getRandomString","tempFilePath","path","os","info","white","dim","writeStream","fs","args","utils","original","pipelines","finalizeDebug","runId","ids","debug","uploadDebug","pipeline","getDebugUrl","readUrl","uploadUrl","uploadText","e","warn","import_safe","import_debug","import_fs","import_os","import_path","import_util","init_remote_debug","__esmMin","init_cjs_shims","init_nano","init_logger","init_remote_debug","__esmMin","init_cjs_shims","debug","init_debug","__esmMin","init_cjs_shims","init_remote_debug","Debug","src_exports","__export","currentsReporter","src_default","__toCommonJS","init_cjs_shims","import_register","init_cjs_shims","init_cjs_shims","import_fs","import_ts_pattern","init_cjs_shims","init_debug","init_cjs_shims","ValidationError","init_logger","init_cjs_shims","init_cjs_shims","import_commander","parseAutoCancelFailures","value","parsedValue","configKey","getEnvironmentVariableName","variable","getCLIOptionName","getConfigName","getEnvVariables","i","parseAutoCancelFailures","init_cjs_shims","import_fs","init_debug","getCLIOptions","result","fs","debug","mandatoryConfigKeys","_config","setCurrentsConfig","reporterOptions","result","removeUndefined","getCLIOptions","getEnvVariables","i","error","getConfigName","dim","getEnvironmentVariableName","getCLIOptionName","ValidationError","debug","obj","acc","key","value","getCurrentsConfig","init_debug","init_http","init_pubsub","init_logger","init_remote_debug","init_cjs_shims","init_cjs_shims","import_json_stringify_safe","import_lodash","import_ts_pattern","init_debug","init_cjs_shims","init_cjs_shims","init_debug","init_http","sendInstanceResultsRequest","instanceId","tests","resultsBody","makeRequest","r","sendCreateInstanceRequest","runId","groupId","machineId","worker","spec","debug","init_cancellation","init_cjs_shims","isNonNullable","value","init_upload","init_cjs_shims","import_lodash","getRawTestCase","testCase","getTestResults","r","a","init_cjs_shims","import_image_size","import_ts_pattern","init_cjs_shims","import_randomstring","randomId","random","init_cjs_shims","init_cjs_shims","init_cjs_shims","import_path","relativeFileLocation","location","rootDir","toPosixPath","path","aPath","getTestCaseProject","test","getTestFullTitle","titles","fileSuite","getTestFileSuite","suite","testToSpecName","testCase","config","relativeFileLocation","testToTestId","defaultTestsValues","defaultTest","getTests","testCases","test","getTestFullTitle","getAttachmentsFromTestCases","results","clientId","r","a","isTestCaseFlaky","tc","getScreenshots","testCases","getAttachmentsFromTestCases","a","s","height","width","safeSizeOf","randomId","isNonNullable","path","sizeOf","init_cjs_shims","import_date_fns","import_lodash","init_debug","init_cjs_shims","import_lodash","import_ts_pattern","getTestCaseStatus","t","allStatuses","status","statusToCurrentsState","testStatus","getTestCaseCurrentsState","getStatsFromTests","testCases","statList","getTestStats","startTime","r","endTime","duration","testCase","debug","startTimes","endTimes","sortedStartTimes","a","b","sortedEndTimes","earliestStartTime","latestEndTime","status","getTestCaseCurrentsState","result","getReporterStatsFromStats","stats","init_cjs_shims","import_lodash","init_cjs_shims","import_code_frame","import_fs","import_lodash","import_path","init_cjs_shims","ansiRegex","stripAnsiEscapes","str","interruptedError","getTestCaseDisplayError","testCase","orderedAttemptResults","result","r","stripAnsiEscapes","getTestAttemptError","project","getErrorDetails","errorStep","tryGetStepWithErrorAndLocation","getErrorMessage","getErrorStack","testStepToCodeFrame","error","getErrorName","getErrorCodeFrame","location","snippet","path","getLanguageFromExtension","steps","depth","step","language","absoluteFile","relativeFile","originalFile","column","line","source","getSourceFromLocation","frame","filePath","fs","playwrightTestSuiteToTest","testCases","tc","tcProject","getTestCaseProject","attempts","r","statusToCurrentsState","getTestAttemptError","e","getErrorDetails","getTestFullTitle","getTestCaseWorker","getTestCaseDisplayError","getTestCaseCurrentsState","isTestCaseFlaky","testCase","item","init_cjs_shims","getTraceFiles","testCases","getAttachmentsFromTestCases","a","s","randomId","init_cjs_shims","import_lodash","import_p_all","import_ts_pattern","import_util","init_debug","init_logger","init_upload","debug","uploadWarnings","getUploadUpdateHandler","label","total","loaded","getInstanceUploadTask","instanceId","uploads","pall","upload","u","sendPath","sendBuffer","e","msg","formatAxiosError","warn","error","bytesToMb","bytes","init_cjs_shims","getVideoInformation","testCases","selectedVideo","getAttachmentsFromTestCases","a","getVideoAttachments","randomId","reportResults","instanceId","testCases","stdout","instanceResults","getInstanceResults","instanceResultsPayload","getInstanceResultsPayload","debug","cloud","uploadInstructions","sendInstanceResultsRequest","getTests","setCancellationReason","uploads","getVideoUploads","getScreenshotUploads","getTraceUploads","getEmptyStdout","getInstanceUploadTask","isNonNullable","results","redactBodyBuffer","s","testCase","videos","videoAssets","videoAsset","localVideo","v","screenshots","screenshotUploadUrls","found","screenshot","i","playwrightTraces","playwrightTraceUrls","pt","trace","stats","getStatsFromTests","reporterStats","getReporterStatsFromStats","videoInfo","getVideoInformation","getVideoAttachments","getScreenshots","getTraceFiles","playwrightTestSuiteToTest","getRaw","stringify","getRawTestCase","stringSizeInMB","init_cjs_shims","init_cjs_shims","import_lodash","import_pluralize","init_debug","init_cjs_shims","import_chalk","import_path","init_cjs_shims","import_url","import_fs","import_path","colors","import_code_frame","import_stack_utils","indent","lines","tab","prepareErrorStack","stack","firstStackLine","line","message","stackLines","location","parsed","resolvedFile","parseStackTraceLine","belongsToNodeModules","file","path","relativeFilePath","config","formatError","error","highlightCode","tokens","source","fs","codeFrame","stackUtils","StackUtils","frame","fileName","url","formatResultFailure","test","result","initialIndent","errorDetails","formattedError","kOutputSymbol","generateSummaryMessage","skipped","expected","interrupted","unexpected","flaky","fatalErrors","config","result","tokens","chalk","test","formatTestHeader","generateSummary","tests","interruptedToPrint","failuresToPrint","epilogue","summary","index","formatFailure","options","includeStdio","includeAttachments","lines","title","formatTestTitle","annotations","header","resultLines","errors","formatResultFailure","retryLines","pad","error","i","attachment","hasPrintableContent","relativePath","path","text","output","outputText","chunk","type","stripAnsiEscapes","indent","step","omitLocation","projectName","titles","location","relativeTestPath","stepSuffix","line","char","relativeFilePath","file","t","init_cjs_shims","init_debug","debug","TestExecutionState","testCase","projectId","getTestCaseCurrentsState","allStatuses","i","SpecExecutionState","specName","testId","testExecutionState","ProjectExecutionState","run","ExecutionState","config","p","s","getTestCaseProject","testToSpecName","testToTestId","init_cancellation","init_logger","init_cjs_shims","import_json_stringify_safe","init_http","sendTestResult","params","makeRequest","tojson","redactResult","r","result","a","init_cjs_shims","init_cjs_shims","import_lodash","init_debug","init_cjs_shims","import_lodash","init_cjs_shims","init_debug","init_logger","debug","join","char","pieces","toCamelObject","obj","key","extract","envKeys","isTeamFoundation","isAzureCi","isAWSCodeBuild","val","isBamboo","isCodeshipBasic","isCodeshipPro","isConcourse","isGitlab","isGoogleCloud","isJenkins","isWercker","CI_PROVIDERS","_detectProviderName","env","value","_providerCiParams","_providerCommitParams","_get","fn","providerName","getCiProvider","checkForCiBuildFromCi","ciProvider","detectableCiBuildIdProviders","error","dim","getEnvironmentVariableName","getCLIOptionName","getCiParams","getCommitParams","getCI","ciBuildId","params","provider","getCommitDefaults","existingInfo","commitParamsObj","combined","memo","init_cjs_shims","import_commit_info","import_lodash","_getGitInfo","commit","getCommitDefaults","getGitInfo","init_cjs_shims","import_getos","import_lodash","import_os","import_util","getOsVersion","linuxOs","getos","_getPlatformInfo","osVersion","getPlatformInfo","init_cjs_shims","init_http","sendCreateRunRequest","payload","makeRequest","r","e","defaulValues","createRun","runParams","currentsConfig","getCurrentsConfig","commit","getGitInfo","platformInfo","getPlatformInfo","browser","platform","ci","getCI","payload","debug","v","k","runCreated","sendCreateRunRequest","init_cjs_shims","init_cjs_shims","init_cjs_shims","init_cjs_shims","parse","inputString","lines","result","line","match","_","project","spec","lineNum","testName","parseTestSuite","input","playwrightVersion","parse","import_debug","debug","Debug","pwcScanner","_","value","key","toCliParam","parseTestSuite","param","init_logger","init_cjs_shims","import_fs","import_ts_pattern","getFSTestSuite","config","c","testSuiteFile","fs","getFullTestSuite","config","currentsConfig","getCurrentsConfig","testSuiteFromFS","getFSTestSuite","internalConfig","getInternalConfig","scannerConfig","regexpToString","pwcScanner","v","e","error","regexp","fullConfig","warn","debug","TestActor","suites","config","ExecutionState","testCases","projectExecution","t","testToSpecName","getTestFullTitle","tc","getTestCaseProject","testToTestId","params","fullTestSuite","getFullTestSuite","createRun","run","setCancellationReason","maybeCancelRun","test","result","projectId","specName","specExecution","testExecution","getCurrentsConfig","sendTestResult","e","step","args","warn","spec","testCaseExecutions","failed","createInstanceRequest","sendResultsForSpec","i","getTestCaseWorker","worker","runId","groupId","machineId","instanceId","claimedCount","rest","sendCreateInstanceRequest","allPromises","projects","resultSpecs","resultSpecsSet","nonResultSpecs","s","getFakeTestResult","retry","nonFinishedTests","te","it","pluralize","magenta","info","dim","fakeTestCase","resultsToCreate","divider","testCase","relativeFileLocation","testCasesWithClientId","index","indexToClientId","stdOutChunks","r","chunk","failures","summaryMessage","epilogue","stdOut","reportResults","getLogDrain","debug","debugStep","DefaultReporter","reporterOptions","setCurrentsConfig","initDebug","getCurrentsConfig","error","ValidationError","e","config","suite","t","setPWVersion","addEventListeners","TestActor","test","result","step","divider","allSpecs","warn","processErrors","w","uploadWarnings","runStatus","s","title","runUrl","fs","finalizeDebug","resolve","removeEventListeners","errors","tryToFindSpecFile","fileName","currentsReporter","config","src_default","DefaultReporter"]}